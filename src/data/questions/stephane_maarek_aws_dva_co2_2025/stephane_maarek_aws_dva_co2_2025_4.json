[
  {
    "id": 1,
    "question": "<p>A development team is storing sensitive customer data in S3 that will require encryption at rest. The encryption keys must be rotated at least annually.</p>\n\n<p>What is the easiest way to implement a solution for this requirement?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Import a custom key into AWS KMS and automate the key rotation on an annual basis by using a Lambda function</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Use SSE-C with automatic key rotation on an annual basis</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Use AWS KMS with automatic key rotation</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Encrypt the data before sending it to Amazon S3</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Security",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Use AWS KMS with automatic key rotation</strong> - Server-side encryption is the encryption of data at its destination by the application or service that receives it. Amazon S3 encrypts your data at the object level as it writes it to disks in its data centers and decrypts it for you when you access it. You have three mutually exclusive options, depending on how you choose to manage the encryption keys: Server-Side Encryption with Amazon S3-Managed Keys (SSE-S3), Server-Side Encryption with Customer Master Keys (CMKs) Stored in AWS Key Management Service (SSE-KMS), Server-Side Encryption with Customer-Provided Keys (SSE-C).</p>\n\n<p>When you use server-side encryption with AWS KMS (SSE-KMS), you can use the default AWS managed CMK, or you can specify a customer managed CMK that you have already created. If you don't specify a customer managed CMK, Amazon S3 automatically creates an AWS managed CMK in your AWS account the first time that you add an object encrypted with SSE-KMS to a bucket. By default, Amazon S3 uses this CMK for SSE-KMS.</p>\n\n<p>You can choose to have AWS KMS automatically rotate CMKs every year, provided that those keys were generated within AWS KMS HSMs.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Encrypt the data before sending it to Amazon S3</strong> - The act of encrypting data before sending it to Amazon S3 is called Client-Side encryption. You will have to handle the key generation, maintenance and rotation process. Hence, this is not the right choice here.</p>\n\n<p><strong>Import a custom key into AWS KMS and automate the key rotation on an annual basis by using a Lambda function</strong> - When you import a custom key, you are responsible for maintaining a copy of your imported keys in your key management infrastructure so that you can re-import them at any time. Also, automatic key rotation is not supported for imported keys. Using Lambda functions to rotate keys is a possible solution, but not an optimal one for the current use case.</p>\n\n<p><strong>Use SSE-C with automatic key rotation on an annual basis</strong> - With Server-Side Encryption with Customer-Provided Keys (SSE-C), you manage the encryption keys and Amazon S3 manages the encryption, as it writes to disks, and decryption, when you access your objects. The keys are not stored anywhere in Amazon S3. There is no automatic key rotation facility for this option.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingKMSEncryption.html\">https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingKMSEncryption.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Use AWS KMS with automatic key rotation</strong> - Server-side encryption is the encryption of data at its destination by the application or service that receives it. Amazon S3 encrypts your data at the object level as it writes it to disks in its data centers and decrypts it for you when you access it. You have three mutually exclusive options, depending on how you choose to manage the encryption keys: Server-Side Encryption with Amazon S3-Managed Keys (SSE-S3), Server-Side Encryption with Customer Master Keys (CMKs) Stored in AWS Key Management Service (SSE-KMS), Server-Side Encryption with Customer-Provided Keys (SSE-C)."
      },
      {
        "answer": "",
        "explanation": "When you use server-side encryption with AWS KMS (SSE-KMS), you can use the default AWS managed CMK, or you can specify a customer managed CMK that you have already created. If you don't specify a customer managed CMK, Amazon S3 automatically creates an AWS managed CMK in your AWS account the first time that you add an object encrypted with SSE-KMS to a bucket. By default, Amazon S3 uses this CMK for SSE-KMS."
      },
      {
        "answer": "",
        "explanation": "You can choose to have AWS KMS automatically rotate CMKs every year, provided that those keys were generated within AWS KMS HSMs."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Encrypt the data before sending it to Amazon S3</strong> - The act of encrypting data before sending it to Amazon S3 is called Client-Side encryption. You will have to handle the key generation, maintenance and rotation process. Hence, this is not the right choice here."
      },
      {
        "answer": "",
        "explanation": "<strong>Import a custom key into AWS KMS and automate the key rotation on an annual basis by using a Lambda function</strong> - When you import a custom key, you are responsible for maintaining a copy of your imported keys in your key management infrastructure so that you can re-import them at any time. Also, automatic key rotation is not supported for imported keys. Using Lambda functions to rotate keys is a possible solution, but not an optimal one for the current use case."
      },
      {
        "answer": "",
        "explanation": "<strong>Use SSE-C with automatic key rotation on an annual basis</strong> - With Server-Side Encryption with Customer-Provided Keys (SSE-C), you manage the encryption keys and Amazon S3 manages the encryption, as it writes to disks, and decryption, when you access your objects. The keys are not stored anywhere in Amazon S3. There is no automatic key rotation facility for this option."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingKMSEncryption.html"
    ]
  },
  {
    "id": 2,
    "question": "<p>Your company manages MySQL databases on EC2 instances to have full control. Applications on other EC2 instances managed by an ASG make requests to these databases to get information that displays data on dashboards viewed on mobile phones, tablets, and web browsers.</p>\n\n<p>Your manager would like to scale your Auto Scaling group based on the number of requests per minute. How can you achieve this?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>You enable detailed monitoring and use that to scale your ASG</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>You create a CloudWatch custom metric and build an alarm to scale your ASG</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Attach additional Elastic File Storage</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Attach an Elastic Load Balancer</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>You create a CloudWatch custom metric and build an alarm to scale your ASG</strong></p>\n\n<p>Here we need to scale on the metric \"number of requests per minute\", which is a custom metric we need to create, as it's not readily available in CloudWatch.</p>\n\n<p>Metrics produced by AWS services are standard resolution by default. When you publish a custom metric, you can define it as either standard resolution or high resolution. When you publish a high-resolution metric, CloudWatch stores it with a resolution of 1 second, and you can read and retrieve it with a period of 1 second, 5 seconds, 10 seconds, 30 seconds, or any multiple of 60 seconds.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Attach an Elastic Load Balancer</strong> - This is not what you need for auto-scaling. An Elastic Load Balancer distributes workloads across multiple compute resources and checks your instances' health status to name a few, but it does not automatically increase and decrease the number of instances based on the application requirement.</p>\n\n<p><strong>Attach additional Elastic File Storage</strong> - This is a file storage service designed for performance. Amazon Elastic File System (Amazon EFS) provides a simple, scalable, fully managed elastic NFS file system for use with AWS Cloud services and on-premises resources. It is built to scale on-demand to petabytes without disrupting applications, growing and shrinking automatically as you add and remove files, eliminating the need to provision and manage capacity to accommodate growth. This cannot be used to facilitate auto-scaling.</p>\n\n<p>How EFS Works:\n<img src=\"https://d1.awsstatic.com/r2018/b/EFS/product-page-diagram-Amazon-EFS-Launch_How-It-Works.cf947858f0ef3557b9fc14077bdf3f65b3f9ff43.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://d1.awsstatic.com/r2018/b/EFS/product-page-diagram-Amazon-EFS-Launch_How-It-Works.cf947858f0ef3557b9fc14077bdf3f65b3f9ff43.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://aws.amazon.com/efs/\">https://aws.amazon.com/efs/</a><p></p>\n\n<p><strong>You enable detailed monitoring and use that to scale your ASG</strong> - The detailed monitoring metrics won't provide information about database /application-level requests per minute, so this option is not correct.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html\">https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>You create a CloudWatch custom metric and build an alarm to scale your ASG</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Here we need to scale on the metric \"number of requests per minute\", which is a custom metric we need to create, as it's not readily available in CloudWatch."
      },
      {
        "answer": "",
        "explanation": "Metrics produced by AWS services are standard resolution by default. When you publish a custom metric, you can define it as either standard resolution or high resolution. When you publish a high-resolution metric, CloudWatch stores it with a resolution of 1 second, and you can read and retrieve it with a period of 1 second, 5 seconds, 10 seconds, 30 seconds, or any multiple of 60 seconds."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Attach an Elastic Load Balancer</strong> - This is not what you need for auto-scaling. An Elastic Load Balancer distributes workloads across multiple compute resources and checks your instances' health status to name a few, but it does not automatically increase and decrease the number of instances based on the application requirement."
      },
      {
        "answer": "",
        "explanation": "<strong>Attach additional Elastic File Storage</strong> - This is a file storage service designed for performance. Amazon Elastic File System (Amazon EFS) provides a simple, scalable, fully managed elastic NFS file system for use with AWS Cloud services and on-premises resources. It is built to scale on-demand to petabytes without disrupting applications, growing and shrinking automatically as you add and remove files, eliminating the need to provision and manage capacity to accommodate growth. This cannot be used to facilitate auto-scaling."
      },
      {
        "image": "https://d1.awsstatic.com/r2018/b/EFS/product-page-diagram-Amazon-EFS-Launch_How-It-Works.cf947858f0ef3557b9fc14077bdf3f65b3f9ff43.png",
        "answer": "",
        "explanation": "How EFS Works:"
      },
      {
        "link": "https://aws.amazon.com/efs/"
      },
      {
        "answer": "",
        "explanation": "<strong>You enable detailed monitoring and use that to scale your ASG</strong> - The detailed monitoring metrics won't provide information about database /application-level requests per minute, so this option is not correct."
      }
    ],
    "references": [
      "https://aws.amazon.com/efs/",
      "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html"
    ]
  },
  {
    "id": 3,
    "question": "<p>You are planning to build a fleet of EBS-optimized EC2 instances to handle the load of your new application. Due to security compliance, your organization wants any secret strings used in the application to be encrypted to prevent exposing values as clear text.</p>\n\n<p>The solution requires that decryption events be audited and API calls to be simple. How can this be achieved? (select two)</p>",
    "corrects": [
      3,
      5
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Store the secret as PlainText in SSM Parameter Store</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Encrypt first with KMS then store in SSM Parameter store</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Audit using CloudTrail</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Audit using SSM Audit Trail</p>",
        "correct": false
      },
      {
        "id": 5,
        "answer": "<p>Store the secret as SecureString in SSM Parameter Store</p>",
        "correct": true
      }
    ],
    "multiple": true,
    "domain": "Security",
    "explanation": "<p>Correct options:</p>\n\n<p><strong>Store the secret as SecureString in SSM Parameter Store</strong></p>\n\n<p>With AWS Systems Manager Parameter Store, you can create SecureString parameters, which are parameters that have a plaintext parameter name and an encrypted parameter value. Parameter Store uses AWS KMS to encrypt and decrypt the parameter values of Secure String parameters. Also, if you are using customer-managed CMKs, you can use IAM policies and key policies to manage to encrypt and decrypt permissions. To retrieve the decrypted value you only need to do one API call.</p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q47-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q47-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/services-parameter-store.html\">https://docs.aws.amazon.com/kms/latest/developerguide/services-parameter-store.html</a><p></p>\n\n<p><strong>Audit using CloudTrail</strong></p>\n\n<p>AWS CloudTrail is a service that enables governance, compliance, operational auditing, and risk auditing of your AWS account. With CloudTrail, you can log, continuously monitor, and retain account activity related to actions across your AWS infrastructure. CloudTrail provides an event history of your AWS account activity, including actions taken through the AWS Management Console, AWS SDKs, command-line tools, and other AWS services.</p>\n\n<p>CloudTrail will allow you to see all API calls made to SSM and KMS.</p>\n\n<p><img src=\"https://d1.awsstatic.com/product-marketing/CloudTrail/Product-Page-Diagram-AWSX-CloudTrail_How-it-Works.d2f51f6e3ec3ea3b33d0c48d472f0e0b59b46e59.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://d1.awsstatic.com/product-marketing/CloudTrail/Product-Page-Diagram-AWSX-CloudTrail_How-it-Works.d2f51f6e3ec3ea3b33d0c48d472f0e0b59b46e59.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Encrypt first with KMS then store in SSM Parameter store</strong> - This could work but will require two API calls to get the decrypted value instead of one. So this is not the right option.</p>\n\n<p><strong>Store the secret as PlainText in SSM Parameter Store</strong> - Plaintext parameters are not secure and shouldn't be used to store secrets.</p>\n\n<p><strong>Audit using SSM Audit Trail</strong> - This is a made-up option and has been added as a distractor.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/services-parameter-store.html\">https://docs.aws.amazon.com/kms/latest/developerguide/services-parameter-store.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Store the secret as SecureString in SSM Parameter Store</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "With AWS Systems Manager Parameter Store, you can create SecureString parameters, which are parameters that have a plaintext parameter name and an encrypted parameter value. Parameter Store uses AWS KMS to encrypt and decrypt the parameter values of Secure String parameters. Also, if you are using customer-managed CMKs, you can use IAM policies and key policies to manage to encrypt and decrypt permissions. To retrieve the decrypted value you only need to do one API call."
      },
      {
        "link": "https://docs.aws.amazon.com/kms/latest/developerguide/services-parameter-store.html"
      },
      {
        "answer": "<strong>Audit using CloudTrail</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "AWS CloudTrail is a service that enables governance, compliance, operational auditing, and risk auditing of your AWS account. With CloudTrail, you can log, continuously monitor, and retain account activity related to actions across your AWS infrastructure. CloudTrail provides an event history of your AWS account activity, including actions taken through the AWS Management Console, AWS SDKs, command-line tools, and other AWS services."
      },
      {
        "answer": "",
        "explanation": "CloudTrail will allow you to see all API calls made to SSM and KMS."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Encrypt first with KMS then store in SSM Parameter store</strong> - This could work but will require two API calls to get the decrypted value instead of one. So this is not the right option."
      },
      {
        "answer": "",
        "explanation": "<strong>Store the secret as PlainText in SSM Parameter Store</strong> - Plaintext parameters are not secure and shouldn't be used to store secrets."
      },
      {
        "answer": "",
        "explanation": "<strong>Audit using SSM Audit Trail</strong> - This is a made-up option and has been added as a distractor."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/kms/latest/developerguide/services-parameter-store.html"
    ]
  },
  {
    "id": 4,
    "question": "<p>The development team at a company is looking at building an AWS CloudFormation template that self-populates the AWS Region variable while deploying the CloudFormation template.</p>\n\n<p>What is the MOST operationally efficient way to determine the Region in which the template is being deployed?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Create an AWS Lambda-backed custom resource for Region and let the desired value be populated at the time of deployment by the Lambda</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Create a CloudFormation parameter for Region and let the desired value be populated at the time of deployment</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Set up a mapping containing the key and the named values for all AWS Regions and then have the CloudFormation template auto-select the desired value</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Use the AWS::Region pseudo parameter</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "Deployment",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Use the AWS::Region pseudo parameter</strong></p>\n\n<p>Pseudo parameters are parameters that are predefined by AWS CloudFormation. You don't declare them in your template. Use them the same way as you would a parameter, as the argument for the Ref function.</p>\n\n<p>You can access pseudo parameters in a CloudFormation template like so:</p>\n\n<pre><code>Outputs:\n  MyStacksRegion:\n    Value: !Ref \"AWS::Region\"\n</code></pre>\n\n<p>The <code>AWS::Region</code> pseudo parameter returns a string representing the Region in which the encompassing resource is being created, such as us-west-2.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Create a CloudFormation parameter for Region and let the desired value be populated at the time of deployment</strong> - Although it is certainly possible to use a CloudFormation parameter to populate the desired value of the Region at the time of deployment, however, this is not operationally efficient, as you can directly use the AWS::Region pseudo parameter for this.</p>\n\n<p><strong>Set up a mapping containing the key and the named values for all AWS Regions and then have the CloudFormation template auto-select the desired value</strong> - The Mappings section matches a key to a corresponding set of named values. For example, if you want to set values based on a Region, you can create a mapping that uses the Region name as a key and contains the values you want to specify for each specific Region. You use the Fn::FindInMap intrinsic function to retrieve values in a map. This option is incorrect as the CloudFormation template cannot auto-select the desired value of the Region from a mapping.</p>\n\n<p><strong>Create an AWS Lambda-backed custom resource for Region and let the desired value be populated at the time of deployment by the Lambda</strong> - Custom resources enable you to write custom provisioning logic in templates that AWS CloudFormation runs anytime you create, update (if you changed the custom resource), or delete stacks. When you associate a Lambda function with a custom resource, the function is invoked whenever the custom resource is created, updated, or deleted. This option is a distractor, as Region is not a custom resource that needs to be provisioned.</p>\n\n<p>References:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/pseudo-parameter-reference.html\">https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/pseudo-parameter-reference.html</a></p>\n\n<p><a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources.html\">https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources.html</a></p>\n\n<p><a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/mappings-section-structure.html\">https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/mappings-section-structure.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Use the AWS::Region pseudo parameter</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Pseudo parameters are parameters that are predefined by AWS CloudFormation. You don't declare them in your template. Use them the same way as you would a parameter, as the argument for the Ref function."
      },
      {
        "answer": "",
        "explanation": "You can access pseudo parameters in a CloudFormation template like so:"
      },
      {
        "answer": "",
        "explanation": "<pre><code>Outputs:\n  MyStacksRegion:\n    Value: !Ref \"AWS::Region\"\n</code></pre>"
      },
      {
        "answer": "",
        "explanation": "The <code>AWS::Region</code> pseudo parameter returns a string representing the Region in which the encompassing resource is being created, such as us-west-2."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Create a CloudFormation parameter for Region and let the desired value be populated at the time of deployment</strong> - Although it is certainly possible to use a CloudFormation parameter to populate the desired value of the Region at the time of deployment, however, this is not operationally efficient, as you can directly use the AWS::Region pseudo parameter for this."
      },
      {
        "answer": "",
        "explanation": "<strong>Set up a mapping containing the key and the named values for all AWS Regions and then have the CloudFormation template auto-select the desired value</strong> - The Mappings section matches a key to a corresponding set of named values. For example, if you want to set values based on a Region, you can create a mapping that uses the Region name as a key and contains the values you want to specify for each specific Region. You use the Fn::FindInMap intrinsic function to retrieve values in a map. This option is incorrect as the CloudFormation template cannot auto-select the desired value of the Region from a mapping."
      },
      {
        "answer": "",
        "explanation": "<strong>Create an AWS Lambda-backed custom resource for Region and let the desired value be populated at the time of deployment by the Lambda</strong> - Custom resources enable you to write custom provisioning logic in templates that AWS CloudFormation runs anytime you create, update (if you changed the custom resource), or delete stacks. When you associate a Lambda function with a custom resource, the function is invoked whenever the custom resource is created, updated, or deleted. This option is a distractor, as Region is not a custom resource that needs to be provisioned."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/pseudo-parameter-reference.html",
      "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources.html",
      "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/mappings-section-structure.html"
    ]
  },
  {
    "id": 5,
    "question": "<p>A website serves static content from an Amazon Simple Storage Service (Amazon S3) bucket and dynamic content from an application load balancer. The user base is spread across the world and latency should be minimized for a better user experience.</p>\n\n<p>Which technology/service can help access the static and dynamic content while keeping the data latency low?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use CloudFront's Lambda@Edge feature to server data from S3 buckets and load balancer programmatically on-the-fly</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Configure CloudFront with multiple origins to serve both static and dynamic content at low latency to global users</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Use CloudFront's Origin Groups to group both static and dynamic requests into one request for further processing</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Use Global Accelerator to transparently switch between S3 bucket and load balancer for different data needs</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Troubleshooting and Optimization",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Configure CloudFront with multiple origins to serve both static and dynamic content at low latency to global users</strong></p>\n\n<p>Amazon CloudFront is a web service that speeds up distribution of your static and dynamic web content, such as .html, .css, .js, and image files, to your users. CloudFront delivers your content through a worldwide network of data centers called edge locations. When a user requests content that you're serving with CloudFront, the request is routed to the edge location that provides the lowest latency (time delay), so that content is delivered with the best possible performance.</p>\n\n<p>You can configure a single CloudFront web distribution to serve different types of requests from multiple origins.</p>\n\n<p>Steps to configure CLoudFront for multiple origins:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt6-q40-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt6-q40-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://aws.amazon.com/premiumsupport/knowledge-center/cloudfront-distribution-serve-content/\">https://aws.amazon.com/premiumsupport/knowledge-center/cloudfront-distribution-serve-content/</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Use CloudFront's Lambda@Edge feature to server data from S3 buckets and load balancer programmatically on-the-fly</strong> - AWS Lambda@Edge is a general-purpose serverless compute feature that supports a wide range of computing needs and customizations. Lambda@Edge is best suited for computationally intensive operations. This is not relevant for the given use case.</p>\n\n<p><strong>Use Global Accelerator to transparently switch between S3 bucket and load balancer for different data needs</strong> - AWS Global Accelerator is a networking service that improves the performance of your users’ traffic by up to 60% using Amazon Web Services’ global network infrastructure.</p>\n\n<p>With Global Accelerator, you are provided two global static public IPs that act as a fixed entry point to your application, improving availability. On the back end, add or remove your AWS application endpoints, such as Application Load Balancers, Network Load Balancers, EC2 Instances, and Elastic IPs without making user-facing changes. Global Accelerator automatically re-routes your traffic to your nearest healthy available endpoint to mitigate endpoint failure.</p>\n\n<p>CloudFront improves performance for both cacheable content (such as images and videos) and dynamic content (such as API acceleration and dynamic site delivery). Global Accelerator is a good fit for non-HTTP use cases, such as gaming (UDP), IoT (MQTT), or Voice over IP, as well as for HTTP use cases that specifically require static IP addresses or deterministic, fast regional failover.</p>\n\n<p>Global Accelerator is not relevant for the given use-case.</p>\n\n<p><strong>Use CloudFront's Origin Groups to group both static and dynamic requests into one request for further processing</strong> - You can set up CloudFront with origin failover for scenarios that require high availability. To get started, you create an Origin Group with two origins: a primary and a secondary. If the primary origin is unavailable or returns specific HTTP response status codes that indicate a failure, CloudFront automatically switches to the secondary origin. Origin Groups are for origin failure scenarios and not for request routing.</p>\n\n<p>References:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-overview.html\">https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-overview.html</a></p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/high_availability_origin_failover.html\">https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/high_availability_origin_failover.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Configure CloudFront with multiple origins to serve both static and dynamic content at low latency to global users</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Amazon CloudFront is a web service that speeds up distribution of your static and dynamic web content, such as .html, .css, .js, and image files, to your users. CloudFront delivers your content through a worldwide network of data centers called edge locations. When a user requests content that you're serving with CloudFront, the request is routed to the edge location that provides the lowest latency (time delay), so that content is delivered with the best possible performance."
      },
      {
        "answer": "",
        "explanation": "You can configure a single CloudFront web distribution to serve different types of requests from multiple origins."
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt6-q40-i1.jpg",
        "answer": "",
        "explanation": "Steps to configure CLoudFront for multiple origins:"
      },
      {
        "link": "https://aws.amazon.com/premiumsupport/knowledge-center/cloudfront-distribution-serve-content/"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Use CloudFront's Lambda@Edge feature to server data from S3 buckets and load balancer programmatically on-the-fly</strong> - AWS Lambda@Edge is a general-purpose serverless compute feature that supports a wide range of computing needs and customizations. Lambda@Edge is best suited for computationally intensive operations. This is not relevant for the given use case."
      },
      {
        "answer": "",
        "explanation": "<strong>Use Global Accelerator to transparently switch between S3 bucket and load balancer for different data needs</strong> - AWS Global Accelerator is a networking service that improves the performance of your users’ traffic by up to 60% using Amazon Web Services’ global network infrastructure."
      },
      {
        "answer": "",
        "explanation": "With Global Accelerator, you are provided two global static public IPs that act as a fixed entry point to your application, improving availability. On the back end, add or remove your AWS application endpoints, such as Application Load Balancers, Network Load Balancers, EC2 Instances, and Elastic IPs without making user-facing changes. Global Accelerator automatically re-routes your traffic to your nearest healthy available endpoint to mitigate endpoint failure."
      },
      {
        "answer": "",
        "explanation": "CloudFront improves performance for both cacheable content (such as images and videos) and dynamic content (such as API acceleration and dynamic site delivery). Global Accelerator is a good fit for non-HTTP use cases, such as gaming (UDP), IoT (MQTT), or Voice over IP, as well as for HTTP use cases that specifically require static IP addresses or deterministic, fast regional failover."
      },
      {
        "answer": "",
        "explanation": "Global Accelerator is not relevant for the given use-case."
      },
      {
        "answer": "",
        "explanation": "<strong>Use CloudFront's Origin Groups to group both static and dynamic requests into one request for further processing</strong> - You can set up CloudFront with origin failover for scenarios that require high availability. To get started, you create an Origin Group with two origins: a primary and a secondary. If the primary origin is unavailable or returns specific HTTP response status codes that indicate a failure, CloudFront automatically switches to the secondary origin. Origin Groups are for origin failure scenarios and not for request routing."
      }
    ],
    "references": [
      "https://aws.amazon.com/premiumsupport/knowledge-center/cloudfront-distribution-serve-content/",
      "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-overview.html",
      "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/high_availability_origin_failover.html"
    ]
  },
  {
    "id": 6,
    "question": "<p>A .NET developer team works with many ASP.NET web applications that use EC2 instances to host them on IIS. The deployment process needs to be configured so that multiple versions of the application can run in AWS Elastic Beanstalk. One version would be used for development, testing, and another version for load testing.</p>\n\n<p>Which of the following methods do you recommend?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use only one Beanstalk environment and perform configuration changes using an Ansible script</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Create an Application Load Balancer to route based on hostname so you can pass on parameters to the development Elastic Beanstalk environment. Create a file in .ebextensions/ to know how to handle the traffic coming from the ALB</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>You cannot have multiple development environments in Elastic Beanstalk, just one development and one production environment</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Define a dev environment with a single instance and a 'load test' environment that has settings close to production environment</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Define a dev environment with a single instance and a 'load test' environment that has settings close to production environment</strong></p>\n\n<p>AWS Elastic Beanstalk makes it easy to create new environments for your application. You can create and manage separate environments for development, testing, and production use, and you can deploy any version of your application to any environment. Environments can be long-running or temporary. When you terminate an environment, you can save its configuration to recreate it later.</p>\n\n<p>It is common practice to have many environments for the same application. You can deploy multiple environments when you need to run multiple versions of an application. So for the given use-case, you can set up 'dev' and 'load test' environment.</p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q48-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q48-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.managing.html\">https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.managing.html</a><p></p>\n\n<p><strong>You cannot have multiple development environments in Elastic Beanstalk, just one development, and one production environment</strong> - Incorrect, use the Create New Environment wizard in the AWS Management Console for BeanStalk to guide you on this.</p>\n\n<p><strong>Use only one Beanstalk environment and perform configuration changes using an Ansible script</strong> - Ansible is an open-source deployment tool that integrates with AWS. It allows us to deploy the infrastructure. Elastic Beanstalk provisions the servers that you need for hosting the application and it also handles multiple environments, so Beanstalk is a better option.</p>\n\n<p><strong>Create an Application Load Balancer to route based on hostname so you can pass on parameters to the development Elastic Beanstalk environment. Create a file in .ebextensions/ to know how to handle the traffic coming from the ALB</strong> - This is not a good design if you need to load test because you will have two versions on the same instances and may not be able to access resources in the system due to the load testing.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.environments.html\">https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.environments.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Define a dev environment with a single instance and a 'load test' environment that has settings close to production environment</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "AWS Elastic Beanstalk makes it easy to create new environments for your application. You can create and manage separate environments for development, testing, and production use, and you can deploy any version of your application to any environment. Environments can be long-running or temporary. When you terminate an environment, you can save its configuration to recreate it later."
      },
      {
        "answer": "",
        "explanation": "It is common practice to have many environments for the same application. You can deploy multiple environments when you need to run multiple versions of an application. So for the given use-case, you can set up 'dev' and 'load test' environment."
      },
      {
        "link": "https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.managing.html"
      },
      {
        "answer": "",
        "explanation": "<strong>You cannot have multiple development environments in Elastic Beanstalk, just one development, and one production environment</strong> - Incorrect, use the Create New Environment wizard in the AWS Management Console for BeanStalk to guide you on this."
      },
      {
        "answer": "",
        "explanation": "<strong>Use only one Beanstalk environment and perform configuration changes using an Ansible script</strong> - Ansible is an open-source deployment tool that integrates with AWS. It allows us to deploy the infrastructure. Elastic Beanstalk provisions the servers that you need for hosting the application and it also handles multiple environments, so Beanstalk is a better option."
      },
      {
        "answer": "",
        "explanation": "<strong>Create an Application Load Balancer to route based on hostname so you can pass on parameters to the development Elastic Beanstalk environment. Create a file in .ebextensions/ to know how to handle the traffic coming from the ALB</strong> - This is not a good design if you need to load test because you will have two versions on the same instances and may not be able to access resources in the system due to the load testing."
      }
    ],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.managing.html",
      "https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.environments.html"
    ]
  },
  {
    "id": 7,
    "question": "<p>A developer wants a seamless ability to return to older versions of a Lambda function that is being deployed.</p>\n\n<p>Which of the following solutions offers the LEAST operational overhead?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use CodeDeploy to configure blue/green deployments for the different Lambda function versions</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Use Lambda function layers that can point to the different versions</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Use a Lambda function alias that can point to the different versions</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Use a Route 53 weighted policy that can point to the different Lambda function versions</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Deployment",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Use a Lambda function alias that can point to the different versions</strong></p>\n\n<p>You can use versions to manage the deployment of your functions. For example, you can publish a new version of a function for beta testing without affecting users of the stable production version. Lambda creates a new version of your function each time that you publish the function. The new version is a copy of the unpublished version of the function.</p>\n\n<p>By publishing a version of your function, you can store your code and configuration as a separate resource that cannot be changed.</p>\n\n<p>A Lambda alias is like a pointer to a specific function version. Users can access the function version using the alias Amazon Resource Name (ARN). Each alias has a unique ARN. An alias can point only to a function version, not to another alias. You can update an alias to point to the different versions of the Lambda function.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Use a Route 53 weighted policy that can point to the different Lambda function versions</strong> - This option is a distractor, as Route 53 cannot be used for the given use case. Route 53 weighted policy lets you associate multiple resources with a single domain name (example.com) or subdomain name (acme.example.com) and choose how much traffic is routed to each resource. This can be useful for a variety of purposes, including load balancing and testing new versions of software.</p>\n\n<p><strong>Use CodeDeploy to configure blue/green deployments for the different Lambda function versions</strong> - A deployment to the AWS Lambda compute platform is always a blue/green deployment. You do not specify a deployment type option. When you deploy to an AWS Lambda compute platform, the deployment configuration specifies the way traffic is shifted to the new Lambda function versions in your application. You can shift traffic using a canary, linear, or all-at-once deployment configuration. Once deployed, you cannot go back to the previous versions of your Lambda function. So this option is incorrect.</p>\n\n<p><strong>Use Lambda function layers that can point to the different versions</strong> - Lambda layers provide a convenient way to package libraries and other dependencies that you can use with your Lambda functions. Using layers reduces the size of uploaded deployment archives and makes it faster to deploy your code. You cannot use the Lambda function layers to point to the different versions of the Lambda function.</p>\n\n<p>References:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html\">https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html</a></p>\n\n<p><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html\">https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html</a></p>\n\n<p><a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations.html#deployment-configuration-lambda\">https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations.html#deployment-configuration-lambda</a></p>\n\n<p><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Use a Lambda function alias that can point to the different versions</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "You can use versions to manage the deployment of your functions. For example, you can publish a new version of a function for beta testing without affecting users of the stable production version. Lambda creates a new version of your function each time that you publish the function. The new version is a copy of the unpublished version of the function."
      },
      {
        "answer": "",
        "explanation": "By publishing a version of your function, you can store your code and configuration as a separate resource that cannot be changed."
      },
      {
        "answer": "",
        "explanation": "A Lambda alias is like a pointer to a specific function version. Users can access the function version using the alias Amazon Resource Name (ARN). Each alias has a unique ARN. An alias can point only to a function version, not to another alias. You can update an alias to point to the different versions of the Lambda function."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Use a Route 53 weighted policy that can point to the different Lambda function versions</strong> - This option is a distractor, as Route 53 cannot be used for the given use case. Route 53 weighted policy lets you associate multiple resources with a single domain name (example.com) or subdomain name (acme.example.com) and choose how much traffic is routed to each resource. This can be useful for a variety of purposes, including load balancing and testing new versions of software."
      },
      {
        "answer": "",
        "explanation": "<strong>Use CodeDeploy to configure blue/green deployments for the different Lambda function versions</strong> - A deployment to the AWS Lambda compute platform is always a blue/green deployment. You do not specify a deployment type option. When you deploy to an AWS Lambda compute platform, the deployment configuration specifies the way traffic is shifted to the new Lambda function versions in your application. You can shift traffic using a canary, linear, or all-at-once deployment configuration. Once deployed, you cannot go back to the previous versions of your Lambda function. So this option is incorrect."
      },
      {
        "answer": "",
        "explanation": "<strong>Use Lambda function layers that can point to the different versions</strong> - Lambda layers provide a convenient way to package libraries and other dependencies that you can use with your Lambda functions. Using layers reduces the size of uploaded deployment archives and makes it faster to deploy your code. You cannot use the Lambda function layers to point to the different versions of the Lambda function."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html",
      "https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html",
      "https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations.html#deployment-configuration-lambda",
      "https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html"
    ]
  },
  {
    "id": 8,
    "question": "<p>You are storing your video files in a separate S3 bucket than your main static website in an S3 bucket. When accessing the video URLs directly the users can view the videos on the browser, but they can't play the videos while visiting the main website.</p>\n\n<p>What is the root cause of this problem?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Disable Server-Side Encryption</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Enable CORS</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Amend the IAM policy</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Change the bucket policy</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Security",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Enable CORS</strong></p>\n\n<p>Cross-origin resource sharing (CORS) defines a way for client web applications that are loaded in one domain to interact with resources in a different domain. With CORS support, you can build rich client-side web applications with Amazon S3 and selectively allow cross-origin access to your Amazon S3 resources.</p>\n\n<p>To configure your bucket to allow cross-origin requests, you create a CORS configuration, which is an XML document with rules that identify the origins that you will allow to access your bucket, the operations (HTTP methods) that will support for each origin, and other operation-specific information.</p>\n\n<p>For the given use-case, you would create a <code>&lt;CORSRule&gt;</code> in <code>&lt;CORSConfiguration&gt;</code> for bucket B to allow access from the S3 website origin hosted on bucket A.</p>\n\n<p>Please see this note for more details:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q41-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q41-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html\">https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Change the bucket policy</strong> - A bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that grants permissions. With this policy, you can do things such as allow one IP address to access the video file in the S3 bucket. In this scenario, we know that's not the case because it works using the direct URL but it doesn't work when you click on a link to access the video.</p>\n\n<p><strong>Amend the IAM policy</strong> - You attach IAM policies to IAM users, groups, or roles, which are then subject to the permissions you've defined. This scenario refers to public users of a website and they need not have an IAM user account.</p>\n\n<p><strong>Disable Server-Side Encryption</strong> - Amazon S3 encrypts your data at the object level as it writes it to disks in its data centers and decrypts it for you when you access it, if the video file is encrypted at rest then there is nothing you need to do because AWS handles encrypt and decrypt. Disabling encryption is not an issue because you can access the video directly using an URL but not from the main website.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html\">https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Enable CORS</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Cross-origin resource sharing (CORS) defines a way for client web applications that are loaded in one domain to interact with resources in a different domain. With CORS support, you can build rich client-side web applications with Amazon S3 and selectively allow cross-origin access to your Amazon S3 resources."
      },
      {
        "answer": "",
        "explanation": "To configure your bucket to allow cross-origin requests, you create a CORS configuration, which is an XML document with rules that identify the origins that you will allow to access your bucket, the operations (HTTP methods) that will support for each origin, and other operation-specific information."
      },
      {
        "answer": "",
        "explanation": "For the given use-case, you would create a <code>&lt;CORSRule&gt;</code> in <code>&lt;CORSConfiguration&gt;</code> for bucket B to allow access from the S3 website origin hosted on bucket A."
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q41-i1.jpg",
        "answer": "",
        "explanation": "Please see this note for more details:"
      },
      {
        "link": "https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Change the bucket policy</strong> - A bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that grants permissions. With this policy, you can do things such as allow one IP address to access the video file in the S3 bucket. In this scenario, we know that's not the case because it works using the direct URL but it doesn't work when you click on a link to access the video."
      },
      {
        "answer": "",
        "explanation": "<strong>Amend the IAM policy</strong> - You attach IAM policies to IAM users, groups, or roles, which are then subject to the permissions you've defined. This scenario refers to public users of a website and they need not have an IAM user account."
      },
      {
        "answer": "",
        "explanation": "<strong>Disable Server-Side Encryption</strong> - Amazon S3 encrypts your data at the object level as it writes it to disks in its data centers and decrypts it for you when you access it, if the video file is encrypted at rest then there is nothing you need to do because AWS handles encrypt and decrypt. Disabling encryption is not an issue because you can access the video directly using an URL but not from the main website."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html"
    ]
  },
  {
    "id": 9,
    "question": "<p>A firm uses AWS DynamoDB to store information about people’s favorite sports teams and allow the information to be searchable from their home page. There is a daily requirement that all 10 million records in the table should be deleted then re-loaded at 2:00 AM each night.</p>\n\n<p>Which option is an efficient way to delete with minimal costs?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Scan and call DeleteItem</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Call PurgeTable</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Delete then re-create the table</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Scan and call BatchDeleteItem</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Troubleshooting and Optimization",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Delete then re-create the table</strong></p>\n\n<p>The DeleteTable operation deletes a table and all of its items. After a <code>DeleteTable</code> request, the specified table is in the <code>DELETING</code> state until DynamoDB completes the deletion.</p>\n\n<p><strong>Scan and call DeleteItem</strong> - Scan is a very slow operation for 10 million items and this is not the best-fit option for the given use-case.</p>\n\n<p><strong>Scan and call BatchDeleteItem</strong> - Scan is a very slow operation for 10 million items and this is not the best-fit option for the given use-case.</p>\n\n<p><strong>Call PurgeTable</strong> - This is a made-up option and has been added as a distractor.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/cli/latest/reference/dynamodb/delete-table.html\">https://docs.aws.amazon.com/cli/latest/reference/dynamodb/delete-table.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Delete then re-create the table</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "The DeleteTable operation deletes a table and all of its items. After a <code>DeleteTable</code> request, the specified table is in the <code>DELETING</code> state until DynamoDB completes the deletion."
      },
      {
        "answer": "",
        "explanation": "<strong>Scan and call DeleteItem</strong> - Scan is a very slow operation for 10 million items and this is not the best-fit option for the given use-case."
      },
      {
        "answer": "",
        "explanation": "<strong>Scan and call BatchDeleteItem</strong> - Scan is a very slow operation for 10 million items and this is not the best-fit option for the given use-case."
      },
      {
        "answer": "",
        "explanation": "<strong>Call PurgeTable</strong> - This is a made-up option and has been added as a distractor."
      }
    ],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/cli/latest/reference/dynamodb/delete-table.html"
    ]
  },
  {
    "id": 10,
    "question": "<p>Your company leverages Amazon CloudFront to provide content via the internet to customers with low latency. Aside from latency, security is another concern and you are looking for help in enforcing end-to-end connections using HTTPS so that content is protected.</p>\n\n<p>Which of the following options is available for HTTPS in AWS CloudFront?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Neither between clients and CloudFront nor between CloudFront and backend</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Between CloudFront and backend only</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Between clients and CloudFront as well as between CloudFront and backend</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Between clients and CloudFront only</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Security",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Between clients and CloudFront as well as between CloudFront and backend</strong></p>\n\n<p>For web distributions, you can configure CloudFront to require that viewers use HTTPS to request your objects, so connections are encrypted when CloudFront communicates with viewers.</p>\n\n<p>Requiring HTTPS for Communication Between Viewers and CloudFront:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q51-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q51-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html\">https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html</a><p></p>\n\n<p>You also can configure CloudFront to use HTTPS to get objects from your origin, so connections are encrypted when CloudFront communicates with your origin.</p>\n\n<p>Requiring HTTPS for Communication Between CloudFront and Your Custom Origin:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q51-i2.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q51-i2.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-cloudfront-to-custom-origin.html\">https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-cloudfront-to-custom-origin.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Between clients and CloudFront only</strong> - This is incorrect as you can choose to require HTTPS between CloudFront and your origin.</p>\n\n<p><strong>Between CloudFront and backend only</strong> - This is incorrect as you can choose to require HTTPS between viewers and CloudFront.</p>\n\n<p><strong>Neither between clients and CloudFront nor between CloudFront and backend</strong> - This is incorrect as you can choose HTTPS settings both for communication between viewers and CloudFront as well as between CloudFront and your origin.</p>\n\n<p>References:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers-cloudfront-to-origin\">https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers-cloudfront-to-origin</a></p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html\">https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html</a></p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-cloudfront-to-custom-origin.html\">https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-cloudfront-to-custom-origin.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Between clients and CloudFront as well as between CloudFront and backend</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "For web distributions, you can configure CloudFront to require that viewers use HTTPS to request your objects, so connections are encrypted when CloudFront communicates with viewers."
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q51-i1.jpg",
        "answer": "",
        "explanation": "Requiring HTTPS for Communication Between Viewers and CloudFront:"
      },
      {
        "link": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html"
      },
      {
        "answer": "",
        "explanation": "You also can configure CloudFront to use HTTPS to get objects from your origin, so connections are encrypted when CloudFront communicates with your origin."
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q51-i2.jpg",
        "answer": "",
        "explanation": "Requiring HTTPS for Communication Between CloudFront and Your Custom Origin:"
      },
      {
        "link": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-cloudfront-to-custom-origin.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Between clients and CloudFront only</strong> - This is incorrect as you can choose to require HTTPS between CloudFront and your origin."
      },
      {
        "answer": "",
        "explanation": "<strong>Between CloudFront and backend only</strong> - This is incorrect as you can choose to require HTTPS between viewers and CloudFront."
      },
      {
        "answer": "",
        "explanation": "<strong>Neither between clients and CloudFront nor between CloudFront and backend</strong> - This is incorrect as you can choose HTTPS settings both for communication between viewers and CloudFront as well as between CloudFront and your origin."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html",
      "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-cloudfront-to-custom-origin.html",
      "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers-cloudfront-to-origin"
    ]
  },
  {
    "id": 11,
    "question": "<p>You have an Amazon Kinesis Data Stream with 10 shards, and from the metrics, you are well below the throughput utilization of 10 MB per second to send data. You send 3 MB per second of data and yet you are receiving ProvisionedThroughputExceededException errors frequently.</p>\n\n<p>What is the likely cause of this?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>You have too many shards</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>The partition key that you have selected isn't distributed enough</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Metrics are slow to update</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>The data retention period is too long</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>The partition key that you have selected isn't distributed enough</strong></p>\n\n<p>Amazon Kinesis Data Streams enables you to build custom applications that process or analyze streaming data for specialized needs.</p>\n\n<p>A Kinesis data stream is a set of shards. A shard is a uniquely identified sequence of data records in a stream. A stream is composed of one or more shards, each of which provides a fixed unit of capacity.</p>\n\n<p>The partition key is used by Kinesis Data Streams to distribute data across shards. Kinesis Data Streams segregates the data records that belong to a stream into multiple shards, using the partition key associated with each data record to determine the shard to which a given data record belongs.</p>\n\n<p>Kinesis Data Streams Overview:\n<img src=\"https://docs.aws.amazon.com/streams/latest/dev/images/architecture.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://docs.aws.amazon.com/streams/latest/dev/images/architecture.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html\">https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html</a><p></p>\n\n<p>For the given use-case, as the partition key is not distributed enough, all the data is getting skewed at a few specific shards and not leveraging the entire cluster of shards.</p>\n\n<p>You can also use metrics to determine which are your \"hot\" or \"cold\" shards, that is, shards that are receiving much more data, or much less data, than expected. You could then selectively split the hot shards to increase capacity for the hash keys that target those shards. Similarly, you could merge cold shards to make better use of their unused capacity.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Metrics are slow to update</strong> - Metrics are a CloudWatch concept. This option has been added as a distractor.</p>\n\n<p><strong>You have too many shards</strong> - Too many shards is not the issue as you would see a LimitExceededException in that case.</p>\n\n<p><strong>The data retention period is too long</strong> - Your streaming data is retained for up to 365 days. The data retention period is not an issue causing this error.</p>\n\n<p>References:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html\">https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html</a></p>\n\n<p><a href=\"https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html\">https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>The partition key that you have selected isn't distributed enough</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Amazon Kinesis Data Streams enables you to build custom applications that process or analyze streaming data for specialized needs."
      },
      {
        "answer": "",
        "explanation": "A Kinesis data stream is a set of shards. A shard is a uniquely identified sequence of data records in a stream. A stream is composed of one or more shards, each of which provides a fixed unit of capacity."
      },
      {
        "answer": "",
        "explanation": "The partition key is used by Kinesis Data Streams to distribute data across shards. Kinesis Data Streams segregates the data records that belong to a stream into multiple shards, using the partition key associated with each data record to determine the shard to which a given data record belongs."
      },
      {
        "image": "https://docs.aws.amazon.com/streams/latest/dev/images/architecture.png",
        "answer": "",
        "explanation": "Kinesis Data Streams Overview:"
      },
      {
        "link": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html"
      },
      {
        "answer": "",
        "explanation": "For the given use-case, as the partition key is not distributed enough, all the data is getting skewed at a few specific shards and not leveraging the entire cluster of shards."
      },
      {
        "answer": "",
        "explanation": "You can also use metrics to determine which are your \"hot\" or \"cold\" shards, that is, shards that are receiving much more data, or much less data, than expected. You could then selectively split the hot shards to increase capacity for the hash keys that target those shards. Similarly, you could merge cold shards to make better use of their unused capacity."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Metrics are slow to update</strong> - Metrics are a CloudWatch concept. This option has been added as a distractor."
      },
      {
        "answer": "",
        "explanation": "<strong>You have too many shards</strong> - Too many shards is not the issue as you would see a LimitExceededException in that case."
      },
      {
        "answer": "",
        "explanation": "<strong>The data retention period is too long</strong> - Your streaming data is retained for up to 365 days. The data retention period is not an issue causing this error."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
      "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html"
    ]
  },
  {
    "id": 12,
    "question": "<p>You are working on a project that has over 100 dependencies. Every time your AWS CodeBuild runs a build step it has to resolve Java dependencies from external Ivy repositories which take a long time. Your manager wants to speed this process up in AWS CodeBuild.</p>\n\n<p>Which of the following will help you do this with minimal effort?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use Instance Store type of EC2 instances to facilitate internal dependency cache</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Reduce the number of dependencies</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Ship all the dependencies as part of the source code</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Cache dependencies on S3</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "Troubleshooting and Optimization",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Cache dependencies on S3</strong></p>\n\n<p>AWS CodeBuild is a fully managed continuous integration service that compiles source code, runs tests, and produces software packages that are ready to deploy. With CodeBuild, you don’t need to provision, manage, and scale your build servers.</p>\n\n<p>Downloading dependencies is a critical phase in the build process. These dependent files can range in size from a few KBs to multiple MBs. Because most of the dependent files do not change frequently between builds, you can noticeably reduce your build time by caching dependencies in S3.</p>\n\n<p>Best Practices for Caching Dependencies:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q7-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q7-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://aws.amazon.com/blogs/devops/how-to-enable-caching-for-aws-codebuild/\">https://aws.amazon.com/blogs/devops/how-to-enable-caching-for-aws-codebuild/</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Reduce the number of dependencies</strong> - This is ideal but sometimes you may not have control over this as your application needs those dependencies, so this option is ruled out.</p>\n\n<p><strong>Ship all the dependencies as part of the source code</strong> - This is not a good practice as doing this will increase your build time. If your dependencies are not changing then its best to cache them.</p>\n\n<p><strong>Use Instance Store type of EC2 instances to facilitate internal dependency cache</strong> - An instance store provides temporary block-level storage for your instance. This storage is located on disks that are physically attached to the host computer. Instance store is ideal for the temporary storage of information that changes frequently, such as buffers, caches, scratch data, and other temporary content, or for data that is replicated across a fleet of instances, such as a load-balanced pool of web servers.</p>\n\n<p>Instance Store cannot be used to facilitate the internal dependency cache for the code build process.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://aws.amazon.com/blogs/devops/how-to-enable-caching-for-aws-codebuild/\">https://aws.amazon.com/blogs/devops/how-to-enable-caching-for-aws-codebuild/</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Cache dependencies on S3</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "AWS CodeBuild is a fully managed continuous integration service that compiles source code, runs tests, and produces software packages that are ready to deploy. With CodeBuild, you don’t need to provision, manage, and scale your build servers."
      },
      {
        "answer": "",
        "explanation": "Downloading dependencies is a critical phase in the build process. These dependent files can range in size from a few KBs to multiple MBs. Because most of the dependent files do not change frequently between builds, you can noticeably reduce your build time by caching dependencies in S3."
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q7-i1.jpg",
        "answer": "",
        "explanation": "Best Practices for Caching Dependencies:"
      },
      {
        "link": "https://aws.amazon.com/blogs/devops/how-to-enable-caching-for-aws-codebuild/"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Reduce the number of dependencies</strong> - This is ideal but sometimes you may not have control over this as your application needs those dependencies, so this option is ruled out."
      },
      {
        "answer": "",
        "explanation": "<strong>Ship all the dependencies as part of the source code</strong> - This is not a good practice as doing this will increase your build time. If your dependencies are not changing then its best to cache them."
      },
      {
        "answer": "",
        "explanation": "<strong>Use Instance Store type of EC2 instances to facilitate internal dependency cache</strong> - An instance store provides temporary block-level storage for your instance. This storage is located on disks that are physically attached to the host computer. Instance store is ideal for the temporary storage of information that changes frequently, such as buffers, caches, scratch data, and other temporary content, or for data that is replicated across a fleet of instances, such as a load-balanced pool of web servers."
      },
      {
        "answer": "",
        "explanation": "Instance Store cannot be used to facilitate the internal dependency cache for the code build process."
      }
    ],
    "references": [
      "https://aws.amazon.com/blogs/devops/how-to-enable-caching-for-aws-codebuild/"
    ]
  },
  {
    "id": 13,
    "question": "<p>A developer is configuring an Application Load Balancer (ALB) to direct traffic to the application's EC2 instances and Lambda functions.</p>\n\n<p>Which of the following characteristics of the ALB can be identified as correct? (Select two)</p>",
    "corrects": [
      1,
      5
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>An ALB has three possible target types: Instance, IP and Lambda</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>If you specify targets using an instance ID, traffic is routed to instances using any private IP address from one or more network interfaces</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>If you specify targets using IP addresses, traffic is routed to instances using the primary private IP address</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>An ALB has three possible target types: Hostname, IP and Lambda</p>",
        "correct": false
      },
      {
        "id": 5,
        "answer": "<p>You can not specify publicly routable IP addresses to an ALB</p>",
        "correct": true
      }
    ],
    "multiple": true,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct options:</p>\n\n<p><strong>An ALB has three possible target types: Instance, IP and Lambda</strong></p>\n\n<p>When you create a target group, you specify its target type, which determines the type of target you specify when registering targets with this target group. After you create a target group, you cannot change its target type. The following are the possible target types:</p>\n\n<ol>\n<li><code>Instance</code> - The targets are specified by instance ID</li>\n<li><code>IP</code> - The targets are IP addresses</li>\n<li><code>Lambda</code> - The target is a Lambda function</li>\n</ol>\n\n<p><strong>You can not specify publicly routable IP addresses to an ALB</strong></p>\n\n<p>When the target type is IP, you can specify IP addresses from specific CIDR blocks only. You can't specify publicly routable IP addresses.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>If you specify targets using an instance ID, traffic is routed to instances using any private IP address from one or more network interfaces</strong> - If you specify targets using an instance ID, traffic is routed to instances using the primary private IP address specified in the primary network interface for the instance.</p>\n\n<p><strong>If you specify targets using IP addresses, traffic is routed to instances using the primary private IP address</strong> - If you specify targets using IP addresses, you can route traffic to an instance using any private IP address from one or more network interfaces. This enables multiple applications on an instance to use the same port.</p>\n\n<p><strong>An ALB has three possible target types: Hostname, IP and Lambda</strong> - This is incorrect, as described in the correct explanation above.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html\">https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>An ALB has three possible target types: Instance, IP and Lambda</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "When you create a target group, you specify its target type, which determines the type of target you specify when registering targets with this target group. After you create a target group, you cannot change its target type. The following are the possible target types:"
      },
      {
        "answer": "",
        "explanation": "<ol>\n<li><code>Instance</code> - The targets are specified by instance ID</li>\n<li><code>IP</code> - The targets are IP addresses</li>\n<li><code>Lambda</code> - The target is a Lambda function</li>\n</ol>"
      },
      {
        "answer": "<strong>You can not specify publicly routable IP addresses to an ALB</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "When the target type is IP, you can specify IP addresses from specific CIDR blocks only. You can't specify publicly routable IP addresses."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>If you specify targets using an instance ID, traffic is routed to instances using any private IP address from one or more network interfaces</strong> - If you specify targets using an instance ID, traffic is routed to instances using the primary private IP address specified in the primary network interface for the instance."
      },
      {
        "answer": "",
        "explanation": "<strong>If you specify targets using IP addresses, traffic is routed to instances using the primary private IP address</strong> - If you specify targets using IP addresses, you can route traffic to an instance using any private IP address from one or more network interfaces. This enables multiple applications on an instance to use the same port."
      },
      {
        "answer": "",
        "explanation": "<strong>An ALB has three possible target types: Hostname, IP and Lambda</strong> - This is incorrect, as described in the correct explanation above."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html"
    ]
  },
  {
    "id": 14,
    "question": "<p>A voting system hosted on-premise was recently migrated to AWS to lower cost, gain scalability, and to better serve thousands of concurrent users. When one of the AWS resource state changes, it generates an event and will need to trigger AWS Lambda. The AWS resource whose state changes and AWS Lambda does not have direct integration.</p>\n\n<p>Which of the following methods can be used to trigger AWS Lambda?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>AWS Lambda Custom Sources</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Open a support ticket with AWS</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Cron jobs to trigger AWS Lambda to check the state of your service</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>CloudWatch Events Rules with AWS Lambda</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "Troubleshooting and Optimization",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>CloudWatch Events Rules with AWS Lambda</strong></p>\n\n<p>You can create a Lambda function and direct CloudWatch Events to execute it on a regular schedule. You can specify a fixed rate (for example, execute a Lambda function every hour or 15 minutes), or you can specify a Cron expression.</p>\n\n<p>CloudWatch Events Key Concepts:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q29-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q29-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/WhatIsCloudWatchEvents.html\">https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/WhatIsCloudWatchEvents.html</a><p></p>\n\n<p>Schedule Expressions for CloudWatch Events Rules:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q29-i2.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q29-i2.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\">https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>AWS Lambda Custom Sources</strong> - This is a made-up option and has been added as a distractor.</p>\n\n<p><strong>Open a support ticket with AWS</strong> - You can, although the AWS support team will not add a custom configuration for you, they will step you through creating event rule with Lambda.</p>\n\n<p><strong>Cron jobs to trigger AWS Lambda to check the state of your service</strong> - You would need an additional server for your cron job instead you should consider using a cron expression with CloudWatch.</p>\n\n<p>References:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/WhatIsCloudWatchEvents.html\">https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/WhatIsCloudWatchEvents.html</a></p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\">https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>CloudWatch Events Rules with AWS Lambda</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "You can create a Lambda function and direct CloudWatch Events to execute it on a regular schedule. You can specify a fixed rate (for example, execute a Lambda function every hour or 15 minutes), or you can specify a Cron expression."
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q29-i1.jpg",
        "answer": "",
        "explanation": "CloudWatch Events Key Concepts:"
      },
      {
        "link": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/WhatIsCloudWatchEvents.html"
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q29-i2.jpg",
        "answer": "",
        "explanation": "Schedule Expressions for CloudWatch Events Rules:"
      },
      {
        "link": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>AWS Lambda Custom Sources</strong> - This is a made-up option and has been added as a distractor."
      },
      {
        "answer": "",
        "explanation": "<strong>Open a support ticket with AWS</strong> - You can, although the AWS support team will not add a custom configuration for you, they will step you through creating event rule with Lambda."
      },
      {
        "answer": "",
        "explanation": "<strong>Cron jobs to trigger AWS Lambda to check the state of your service</strong> - You would need an additional server for your cron job instead you should consider using a cron expression with CloudWatch."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/WhatIsCloudWatchEvents.html",
      "https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html"
    ]
  },
  {
    "id": 15,
    "question": "<p>You have a web application hosted on EC2 that makes GET and PUT requests for objects stored in Amazon Simple Storage Service (S3) using the SDK for PHP. As the security team completed the final review of your application for vulnerabilities, they noticed that your application uses hardcoded IAM access key and secret access key to gain access to AWS services. They recommend you leverage a more secure setup, which should use temporary credentials if possible.</p>\n\n<p>Which of the following options can be used to address the given use-case?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use an IAM Instance Role</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Use environment variables</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Hardcode the credentials in the application code</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Use the SSM parameter store</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Security",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Use an IAM Instance Role</strong></p>\n\n<p>An instance profile is a container for an IAM role that you can use to pass role information to an EC2 instance when the instance starts. The AWS SDK will use the EC2 metadata service to obtain temporary credentials thanks to the IAM instance role. This is the most secure and common setup when deploying any kind of applications onto an EC2 instance.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Use environment variables</strong> - This is another option if you configure AWS CLI on the EC2 instance. When configuring the AWS CLI you will set the AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY environment variables. This practice may not be bad for one instance but once you start running more EC2 instances this is not a good practice because you may have to change credentials on each instance whereas an IAM Role gets temporary permissions.</p>\n\n<p><strong>Hardcode the credentials in the application code</strong> - It will work for sure, but it's not a good practice from a security point of view.</p>\n\n<p><strong>Use the SSM parameter store</strong> - With parameter store you can store data such as passwords. The problem is that you need the SDK to access parameter store and without credentials, you cannot use the SDK. Use parameter store for other uses such as database connection strings or other secret codes when you have already authenticated to AWS.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2_instance-profiles.html\">https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2_instance-profiles.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Use an IAM Instance Role</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "An instance profile is a container for an IAM role that you can use to pass role information to an EC2 instance when the instance starts. The AWS SDK will use the EC2 metadata service to obtain temporary credentials thanks to the IAM instance role. This is the most secure and common setup when deploying any kind of applications onto an EC2 instance."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Use environment variables</strong> - This is another option if you configure AWS CLI on the EC2 instance. When configuring the AWS CLI you will set the AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY environment variables. This practice may not be bad for one instance but once you start running more EC2 instances this is not a good practice because you may have to change credentials on each instance whereas an IAM Role gets temporary permissions."
      },
      {
        "answer": "",
        "explanation": "<strong>Hardcode the credentials in the application code</strong> - It will work for sure, but it's not a good practice from a security point of view."
      },
      {
        "answer": "",
        "explanation": "<strong>Use the SSM parameter store</strong> - With parameter store you can store data such as passwords. The problem is that you need the SDK to access parameter store and without credentials, you cannot use the SDK. Use parameter store for other uses such as database connection strings or other secret codes when you have already authenticated to AWS."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2_instance-profiles.html"
    ]
  },
  {
    "id": 16,
    "question": "<p>A development team is considering Amazon ElastiCache for Redis as its in-memory caching solution for its relational database.</p>\n\n<p>Which of the following options are correct while configuring ElastiCache? (Select two)</p>",
    "corrects": [
      1,
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>All the nodes in a Redis cluster must reside in the same region</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>While using Redis with cluster mode enabled, you cannot manually promote any of the replica nodes to primary</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>While using Redis with cluster mode enabled, asynchronous replication mechanisms are used to keep the read replicas synchronized with the primary. If cluster mode is disabled, the replication mechanism is done synchronously</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>If you have no replicas and a node fails, you experience no loss of data when using Redis with cluster mode enabled</p>",
        "correct": false
      },
      {
        "id": 5,
        "answer": "<p>You can scale write capacity for Redis by adding replica nodes</p>",
        "correct": false
      }
    ],
    "multiple": true,
    "domain": "Deployment",
    "explanation": "<p>Correct options:</p>\n\n<p><strong>All the nodes in a Redis cluster must reside in the same region</strong></p>\n\n<p>All the nodes in a Redis cluster (cluster mode enabled or cluster mode disabled) must reside in the same region.</p>\n\n<p><strong>While using Redis with cluster mode enabled, you cannot manually promote any of the replica nodes to primary</strong></p>\n\n<p>While using Redis with cluster mode enabled, there are some limitations:</p>\n\n<ol>\n<li><p>You cannot manually promote any of the replica nodes to primary.</p></li>\n<li><p>Multi-AZ is required.</p></li>\n<li><p>You can only change the structure of a cluster, the node type, and the number of nodes by restoring from a backup.</p></li>\n</ol>\n\n<p>Incorrect options:</p>\n\n<p><strong>While using Redis with cluster mode enabled, asynchronous replication mechanisms are used to keep the read replicas synchronized with the primary. If cluster mode is disabled, the replication mechanism is done synchronously</strong> - When you add a read replica to a cluster, all of the data from the primary is copied to the new node. From that point on, whenever data is written to the primary, the changes are asynchronously propagated to all the read replicas, for both the Redis offerings (cluster mode enabled or cluster mode disabled).</p>\n\n<p><strong>If you have no replicas and a node fails, you experience no loss of data when using Redis with cluster mode enabled</strong> - If you have no replicas and a node fails, you experience loss of all data in that node's shard, when using Redis with cluster mode enabled. If you have no replicas and the node fails, you experience total data loss in Redis with cluster mode disabled.</p>\n\n<p><strong>You can scale write capacity for Redis by adding replica nodes</strong> - This increases only the read capacity of the Redis cluster, write capacity is not enhanced by read replicas.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Replication.Redis.Groups.html\">https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Replication.Redis.Groups.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>All the nodes in a Redis cluster must reside in the same region</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "All the nodes in a Redis cluster (cluster mode enabled or cluster mode disabled) must reside in the same region."
      },
      {
        "answer": "<strong>While using Redis with cluster mode enabled, you cannot manually promote any of the replica nodes to primary</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "While using Redis with cluster mode enabled, there are some limitations:"
      },
      {
        "answer": "",
        "explanation": "<ol>\n<li><p>You cannot manually promote any of the replica nodes to primary.</p></li>\n<li><p>Multi-AZ is required.</p></li>\n<li><p>You can only change the structure of a cluster, the node type, and the number of nodes by restoring from a backup.</p></li>\n</ol>"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>While using Redis with cluster mode enabled, asynchronous replication mechanisms are used to keep the read replicas synchronized with the primary. If cluster mode is disabled, the replication mechanism is done synchronously</strong> - When you add a read replica to a cluster, all of the data from the primary is copied to the new node. From that point on, whenever data is written to the primary, the changes are asynchronously propagated to all the read replicas, for both the Redis offerings (cluster mode enabled or cluster mode disabled)."
      },
      {
        "answer": "",
        "explanation": "<strong>If you have no replicas and a node fails, you experience no loss of data when using Redis with cluster mode enabled</strong> - If you have no replicas and a node fails, you experience loss of all data in that node's shard, when using Redis with cluster mode enabled. If you have no replicas and the node fails, you experience total data loss in Redis with cluster mode disabled."
      },
      {
        "answer": "",
        "explanation": "<strong>You can scale write capacity for Redis by adding replica nodes</strong> - This increases only the read capacity of the Redis cluster, write capacity is not enhanced by read replicas."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Replication.Redis.Groups.html"
    ]
  },
  {
    "id": 17,
    "question": "<p>As part of internal regulations, you must ensure that all communications to Amazon S3 are encrypted.</p>\n\n<p>For which of the following encryption mechanisms will a request get rejected if the connection is not using HTTPS?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Client Side Encryption</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>SSE-S3</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>SSE-KMS</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>SSE-C</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "Security",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>SSE-C</strong></p>\n\n<p>Server-side encryption is about protecting data at rest. Server-side encryption encrypts only the object data, not object metadata. Using server-side encryption with customer-provided encryption keys (SSE-C) allows you to set your encryption keys.</p>\n\n<p>When you upload an object, Amazon S3 uses the encryption key you provide to apply AES-256 encryption to your data and removes the encryption key from memory. When you retrieve an object, you must provide the same encryption key as part of your request. Amazon S3 first verifies that the encryption key you provided matches and then decrypts the object before returning the object data to you.</p>\n\n<p>Amazon S3 will reject any requests made over HTTP when using SSE-C. For security considerations, AWS recommends that you consider any key you send erroneously using HTTP to be compromised.</p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q25-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q25-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html\">https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>SSE-KMS</strong> - It is not mandatory to use HTTPS.</p>\n\n<p><strong>Client-Side Encryption</strong> - Client-side encryption is the act of encrypting data before sending it to Amazon S3. It is not mandatory to use HTTPS for this.</p>\n\n<p><strong>SSE-S3</strong> - It is not mandatory to use HTTPS. Amazon S3 encrypts your data at the object level as it writes it to disks in its data centers.</p>\n\n<p>References:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html\">https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>SSE-C</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Server-side encryption is about protecting data at rest. Server-side encryption encrypts only the object data, not object metadata. Using server-side encryption with customer-provided encryption keys (SSE-C) allows you to set your encryption keys."
      },
      {
        "answer": "",
        "explanation": "When you upload an object, Amazon S3 uses the encryption key you provide to apply AES-256 encryption to your data and removes the encryption key from memory. When you retrieve an object, you must provide the same encryption key as part of your request. Amazon S3 first verifies that the encryption key you provided matches and then decrypts the object before returning the object data to you."
      },
      {
        "answer": "",
        "explanation": "Amazon S3 will reject any requests made over HTTP when using SSE-C. For security considerations, AWS recommends that you consider any key you send erroneously using HTTP to be compromised."
      },
      {
        "link": "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>SSE-KMS</strong> - It is not mandatory to use HTTPS."
      },
      {
        "answer": "",
        "explanation": "<strong>Client-Side Encryption</strong> - Client-side encryption is the act of encrypting data before sending it to Amazon S3. It is not mandatory to use HTTPS for this."
      },
      {
        "answer": "",
        "explanation": "<strong>SSE-S3</strong> - It is not mandatory to use HTTPS. Amazon S3 encrypts your data at the object level as it writes it to disks in its data centers."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html"
    ]
  },
  {
    "id": 18,
    "question": "<p>You have been hired at a company that needs an experienced developer to help with a continuous integration/continuous delivery (CI/CD) workflow on AWS. You configure the company’s workflow to run an AWS CodePipeline pipeline whenever the application’s source code changes in a repository hosted in AWS Code Commit and compiles source code with AWS Code Build. You are configuring ProjectArtifacts in your build stage.</p>\n\n<p>Which of the following should you do?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Contact AWS Support to allow AWS CodePipeline to manage build outputs</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Give AWS CodeBuild permissions to upload the build output to your Amazon S3 bucket</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Give AWS CodeCommit permissions to upload the build output to your Amazon S3 bucket</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Configure AWS CodeBuild to store output artifacts on EC2 servers</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Deployment",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Give AWS CodeBuild permissions to upload the build output to your Amazon S3 bucket</strong></p>\n\n<p>If you choose ProjectArtifacts and your value type is S3 then the build project stores build output in Amazon Simple Storage Service (Amazon S3). For that, you will need to give AWS CodeBuild permissions to upload.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Configure AWS CodeBuild to store output artifacts on EC2 servers</strong> - EC2 servers are not a valid output location, so this option is ruled out.</p>\n\n<p><strong>Give AWS CodeCommit permissions to upload the build output to your Amazon S3 bucket</strong> - AWS CodeCommit is the repository that holds source code and has no control over compiling the source code, so this option is incorrect.</p>\n\n<p><strong>Contact AWS Support to allow AWS CodePipeline to manage build outputs</strong> - You can set AWS CodePipeline to manage its build output locations instead of AWS CodeBuild. There is no need to contact AWS Support.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/create-project.html#create-project-cli\">https://docs.aws.amazon.com/codebuild/latest/userguide/create-project.html#create-project-cli</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Give AWS CodeBuild permissions to upload the build output to your Amazon S3 bucket</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "If you choose ProjectArtifacts and your value type is S3 then the build project stores build output in Amazon Simple Storage Service (Amazon S3). For that, you will need to give AWS CodeBuild permissions to upload."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Configure AWS CodeBuild to store output artifacts on EC2 servers</strong> - EC2 servers are not a valid output location, so this option is ruled out."
      },
      {
        "answer": "",
        "explanation": "<strong>Give AWS CodeCommit permissions to upload the build output to your Amazon S3 bucket</strong> - AWS CodeCommit is the repository that holds source code and has no control over compiling the source code, so this option is incorrect."
      },
      {
        "answer": "",
        "explanation": "<strong>Contact AWS Support to allow AWS CodePipeline to manage build outputs</strong> - You can set AWS CodePipeline to manage its build output locations instead of AWS CodeBuild. There is no need to contact AWS Support."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/codebuild/latest/userguide/create-project.html#create-project-cli"
    ]
  },
  {
    "id": 19,
    "question": "<p>An organization recently began using AWS CodeCommit for its source control service. A compliance security team visiting the organization was auditing the software development process and noticed developers making many git push commands within their development machines. The compliance team requires that encryption be used for this activity.</p>\n\n<p>How can the organization ensure source code is encrypted in transit and at rest?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Enable KMS encryption</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Use AWS Lambda as a hook to encrypt the pushed code</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Use a git command line hook to encrypt the code client side</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Repositories are automatically encrypted at rest</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "Security",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Repositories are automatically encrypted at rest</strong></p>\n\n<p>Data in AWS CodeCommit repositories is encrypted in transit and at rest. When data is pushed into an AWS CodeCommit repository (for example, by calling git push), AWS CodeCommit encrypts the received data as it is stored in the repository.</p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q28-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q28-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/encryption.html\">https://docs.aws.amazon.com/codecommit/latest/userguide/encryption.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Enable KMS encryption</strong> - You don't have to. The first time you create an AWS CodeCommit repository in a new region in your AWS account, CodeCommit creates an AWS-managed key in that same region in AWS Key Management Service (AWS KMS) that is used only by CodeCommit.</p>\n\n<p><strong>Use AWS Lambda as a hook to encrypt the pushed code</strong> - This is not needed as CodeCommit handles it for you.</p>\n\n<p><strong>Use a git command line hook to encrypt the code client-side</strong> - This is not needed as CodeCommit handles it for you.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/encryption.html\">https://docs.aws.amazon.com/codecommit/latest/userguide/encryption.html</a></p>\n\n<p>For more information visit https://docs.aws.amazon.com/codecommit/latest/userguide/encryption.html</p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Repositories are automatically encrypted at rest</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Data in AWS CodeCommit repositories is encrypted in transit and at rest. When data is pushed into an AWS CodeCommit repository (for example, by calling git push), AWS CodeCommit encrypts the received data as it is stored in the repository."
      },
      {
        "link": "https://docs.aws.amazon.com/codecommit/latest/userguide/encryption.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Enable KMS encryption</strong> - You don't have to. The first time you create an AWS CodeCommit repository in a new region in your AWS account, CodeCommit creates an AWS-managed key in that same region in AWS Key Management Service (AWS KMS) that is used only by CodeCommit."
      },
      {
        "answer": "",
        "explanation": "<strong>Use AWS Lambda as a hook to encrypt the pushed code</strong> - This is not needed as CodeCommit handles it for you."
      },
      {
        "answer": "",
        "explanation": "<strong>Use a git command line hook to encrypt the code client-side</strong> - This is not needed as CodeCommit handles it for you."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/codecommit/latest/userguide/encryption.html"
    ]
  },
  {
    "id": 20,
    "question": "<p>Consider the following IAM policy:</p>\n\n<pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Deny\",\n      \"Action\": \"s3:*\",\n      \"Resource\": \"arn:aws:s3:::EXAMPLE-BUCKET/private*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\"s3:PutObject\", \"s3:GetObject\"]\n      \"Resource\": \"arn:aws:s3:::EXAMPLE-BUCKET/*\",\n    }\n  ]\n}\n</code></pre>\n\n<p>Which of the following statements is correct per the given policy?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>The policy provides PutObject and GetObject access to all objects in the <code>EXAMPLE-BUCKET</code> bucket as well as provides access to all s3 actions on objects starting with <code>private</code> in the <code>EXAMPLE-BUCKET</code> bucket</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>The policy provides PutObject and GetObject access to all objects in the <code>EXAMPLE-BUCKET</code> bucket except the objects that start with <code>private</code></p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>The policy denies PutObject and GetObject access to all buckets except the <code>EXAMPLE-BUCKET/private</code> bucket</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>The policy provides PutObject and GetObject access to all buckets except the <code>EXAMPLE-BUCKET/private</code> bucket</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Security",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>The policy provides PutObject and GetObject access to all objects in the <code>EXAMPLE-BUCKET</code> bucket except the objects that start with <code>private</code></strong></p>\n\n<p>The first statement denies access to any objects that start with <code>private</code> in the <code>EXAMPLE-BUCKET</code> bucket. The second statement allows PutObject and GetObject access to all objects in the <code>EXAMPLE-BUCKET</code> bucket. So the net effect is to allow PutObject and GetObject access to all objects in the <code>EXAMPLE-BUCKET</code> bucket except the objects that start with <code>private</code>.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>The policy provides PutObject and GetObject access to all buckets except the <code>EXAMPLE-BUCKET/private</code> bucket</strong></p>\n\n<p><strong>The policy provides PutObject and GetObject access to all objects in the <code>EXAMPLE-BUCKET</code> bucket as well as provides access to all s3 actions on objects starting with <code>private</code> in the <code>EXAMPLE-BUCKET</code> bucket</strong></p>\n\n<p><strong>The policy denies PutObject and GetObject access to all buckets except the <code>EXAMPLE-BUCKET/private</code> bucket</strong></p>\n\n<p>These three options contradict the explanation provided above, so these options are incorrect.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html\">https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>The policy provides PutObject and GetObject access to all objects in the <code>EXAMPLE-BUCKET</code> bucket except the objects that start with <code>private</code></strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "The first statement denies access to any objects that start with <code>private</code> in the <code>EXAMPLE-BUCKET</code> bucket. The second statement allows PutObject and GetObject access to all objects in the <code>EXAMPLE-BUCKET</code> bucket. So the net effect is to allow PutObject and GetObject access to all objects in the <code>EXAMPLE-BUCKET</code> bucket except the objects that start with <code>private</code>."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "<strong>The policy provides PutObject and GetObject access to all buckets except the <code>EXAMPLE-BUCKET/private</code> bucket</strong>",
        "explanation": ""
      },
      {
        "answer": "<strong>The policy provides PutObject and GetObject access to all objects in the <code>EXAMPLE-BUCKET</code> bucket as well as provides access to all s3 actions on objects starting with <code>private</code> in the <code>EXAMPLE-BUCKET</code> bucket</strong>",
        "explanation": ""
      },
      {
        "answer": "<strong>The policy denies PutObject and GetObject access to all buckets except the <code>EXAMPLE-BUCKET/private</code> bucket</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "These three options contradict the explanation provided above, so these options are incorrect."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html"
    ]
  },
  {
    "id": 21,
    "question": "<p>A financial services company with over 10,000 employees has hired you as the new Senior Developer. Initially caching was enabled to reduce the number of calls made to all API endpoints and improve the latency of requests to the company’s API Gateway.</p>\n\n<p>For testing purposes, you would like to invalidate caching for the API clients to get the most recent responses. Which of the following should you do?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Using the request parameter ?cache-control-max-age=0</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Using the Header Cache-Control: max-age=0</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Using the Header Bypass-Cache=1</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Use the Request parameter: ?bypass_cache=1</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Using the Header Cache-Control: max-age=0</strong></p>\n\n<p>A client of your API can invalidate an existing cache entry and reload it from the integration endpoint for individual requests. The client must send a request that contains the Cache-Control: max-age=0 header. The client receives the response directly from the integration endpoint instead of the cache, provided that the client is authorized to do so. This replaces the existing cache entry with the new response, which is fetched from the integration endpoint.</p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q63-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q63-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html#invalidate-method-caching\">https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html#invalidate-method-caching</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Use the Request parameter: ?bypass_cache=1</strong> - Method parameters take query string but this is not one of them.</p>\n\n<p><strong>Using the Header Bypass-Cache=1</strong> - This is a made-up option.</p>\n\n<p><strong>Using the request parameter ?cache-control-max-age=0</strong> - To invalidate cache it requires a header and not a request parameter.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html#invalidate-method-caching\">https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html#invalidate-method-caching</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Using the Header Cache-Control: max-age=0</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "A client of your API can invalidate an existing cache entry and reload it from the integration endpoint for individual requests. The client must send a request that contains the Cache-Control: max-age=0 header. The client receives the response directly from the integration endpoint instead of the cache, provided that the client is authorized to do so. This replaces the existing cache entry with the new response, which is fetched from the integration endpoint."
      },
      {
        "link": "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html#invalidate-method-caching"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Use the Request parameter: ?bypass_cache=1</strong> - Method parameters take query string but this is not one of them."
      },
      {
        "answer": "",
        "explanation": "<strong>Using the Header Bypass-Cache=1</strong> - This is a made-up option."
      },
      {
        "answer": "",
        "explanation": "<strong>Using the request parameter ?cache-control-max-age=0</strong> - To invalidate cache it requires a header and not a request parameter."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html#invalidate-method-caching"
    ]
  },
  {
    "id": 22,
    "question": "<p>An IT company uses a blue/green deployment policy to provision new Amazon EC2 instances in an Auto Scaling group behind a new Application Load Balancer for each new application version. The current set up requires the users to log in after every new deployment.</p>\n\n<p>As a Developer Associate, what advice would you give to the company for resolving this issue?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use multicast to replicate session information</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Enable sticky sessions in the Application Load Balancer</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Use ElastiCache to maintain user sessions</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Use rolling updates instead of a blue/green deployment</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Troubleshooting and Optimization",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Use ElastiCache to maintain user sessions</strong></p>\n\n<p>Amazon ElastiCache allows you to seamlessly set up, run, and scale popular open-Source compatible in-memory data stores in the cloud. Build data-intensive apps or boost the performance of your existing databases by retrieving data from high throughput and low latency in-memory data stores. Amazon ElastiCache is a popular choice for real-time use cases like Caching, Session Stores, Gaming, Geospatial Services, Real-Time Analytics, and Queuing.</p>\n\n<p>To address scalability and to provide a shared data storage for sessions that can be accessed from any individual web server, you can abstract the HTTP sessions from the web servers themselves. A common solution to for this is to leverage an In-Memory Key/Value store such as Redis and Memcached via ElastiCache.</p>\n\n<p><img src=\"https://d1.awsstatic.com/product-marketing/caching-session-management-diagram-v2.c6856e6de83c4222dbc4853d9ff873f5542a86d8.PNG\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://d1.awsstatic.com/product-marketing/caching-session-management-diagram-v2.c6856e6de83c4222dbc4853d9ff873f5542a86d8.PNG\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://aws.amazon.com/caching/session-management/\">https://aws.amazon.com/caching/session-management/</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Use rolling updates instead of a blue/green deployment</strong> - With rolling deployments, Elastic Beanstalk splits the environment's Amazon EC2 instances into batches and deploys the new version of the application to one batch at a time. It leaves the rest of the instances in the environment running the old version of the application. When processing a batch, Elastic Beanstalk detaches all instances in the batch from the load balancer, deploys the new application version, and then reattaches the instances.</p>\n\n<p>This means that some of the users can experience session disruptions when the instances maintaining the sessions were detached as part of the given batch. So this option is incorrect.</p>\n\n<p><strong>Enable sticky sessions in the Application Load Balancer</strong> - As the Application Load Balancer itself is replaced on each new deployment, so maintaining sticky sessions via the Application Load Balancer will not work.</p>\n\n<p><strong>Use multicast to replicate session information</strong> - This option has been added as a distractor.</p>\n\n<p>References:</p>\n\n<p><a href=\"https://aws.amazon.com/caching/session-management/\">https://aws.amazon.com/caching/session-management/</a></p>\n\n<p><a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.rolling-version-deploy.html#environments-cfg-rollingdeployments-method\">https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.rolling-version-deploy.html#environments-cfg-rollingdeployments-method</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Use ElastiCache to maintain user sessions</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Amazon ElastiCache allows you to seamlessly set up, run, and scale popular open-Source compatible in-memory data stores in the cloud. Build data-intensive apps or boost the performance of your existing databases by retrieving data from high throughput and low latency in-memory data stores. Amazon ElastiCache is a popular choice for real-time use cases like Caching, Session Stores, Gaming, Geospatial Services, Real-Time Analytics, and Queuing."
      },
      {
        "answer": "",
        "explanation": "To address scalability and to provide a shared data storage for sessions that can be accessed from any individual web server, you can abstract the HTTP sessions from the web servers themselves. A common solution to for this is to leverage an In-Memory Key/Value store such as Redis and Memcached via ElastiCache."
      },
      {
        "link": "https://aws.amazon.com/caching/session-management/"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Use rolling updates instead of a blue/green deployment</strong> - With rolling deployments, Elastic Beanstalk splits the environment's Amazon EC2 instances into batches and deploys the new version of the application to one batch at a time. It leaves the rest of the instances in the environment running the old version of the application. When processing a batch, Elastic Beanstalk detaches all instances in the batch from the load balancer, deploys the new application version, and then reattaches the instances."
      },
      {
        "answer": "",
        "explanation": "This means that some of the users can experience session disruptions when the instances maintaining the sessions were detached as part of the given batch. So this option is incorrect."
      },
      {
        "answer": "",
        "explanation": "<strong>Enable sticky sessions in the Application Load Balancer</strong> - As the Application Load Balancer itself is replaced on each new deployment, so maintaining sticky sessions via the Application Load Balancer will not work."
      },
      {
        "answer": "",
        "explanation": "<strong>Use multicast to replicate session information</strong> - This option has been added as a distractor."
      }
    ],
    "references": [
      "https://aws.amazon.com/caching/session-management/",
      "https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.rolling-version-deploy.html#environments-cfg-rollingdeployments-method"
    ]
  },
  {
    "id": 23,
    "question": "<p>Your mobile application needs to perform API calls to DynamoDB. You do not want to store AWS secret and access keys onto the mobile devices and need all the calls to DynamoDB made with a different identity per mobile device.</p>\n\n<p>Which of the following services allows you to achieve this?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Cognito Sync</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Cognito Identity Pools</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Cognito User Pools</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>IAM</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct option:</p>\n\n<p>\"Cognito Identity Pools\"</p>\n\n<p>Amazon Cognito identity pools provide temporary AWS credentials for users who are guests (unauthenticated) and for users who have been authenticated and received a token. Identity pools provide AWS credentials to grant your users access to other AWS services.</p>\n\n<p>Cognito Overview:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q58-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q58-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/what-is-amazon-cognito.html\">https://docs.aws.amazon.com/cognito/latest/developerguide/what-is-amazon-cognito.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p>\"Cognito User Pools\" - AWS Cognito User Pools is there to authenticate users for your applications which looks similar to Cognito Identity Pools. The difference is that Identity Pools allows a way to authorize your users to use the various AWS services and User Pools is not about authorizing to AWS services but to provide add sign-up and sign-in functionality to web and mobile applications.</p>\n\n<p>\"Cognito Sync\" - You can use it to synchronize user profile data across mobile devices and the web without requiring your own backend. The client libraries cache data locally so your app can read and write data regardless of device connectivity status.</p>\n\n<p>\"IAM\" - This is not a good solution because it would require you to have an IAM user for each mobile device which is not a good practice or manageable way of handling deployment.</p>\n\n<p>Exam Alert:</p>\n\n<p>Please review the following note to understand the differences between Cognito User Pools and Cognito Identity Pools:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q58-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q58-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/what-is-amazon-cognito.html\">https://docs.aws.amazon.com/cognito/latest/developerguide/what-is-amazon-cognito.html</a><p></p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/what-is-amazon-cognito.html\">https://docs.aws.amazon.com/cognito/latest/developerguide/what-is-amazon-cognito.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Cognito Identity Pools</strong>"
      },
      {
        "answer": "",
        "explanation": "Amazon Cognito identity pools provide temporary AWS credentials for users who are guests (unauthenticated) and for users who have been authenticated and received a token. Identity pools provide AWS credentials to grant your users access to other AWS services."
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q58-i1.jpg",
        "answer": "",
        "explanation": "Cognito Overview:"
      },
      {
        "link": "https://docs.aws.amazon.com/cognito/latest/developerguide/what-is-amazon-cognito.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Cognito User Pools</strong> - AWS Cognito User Pools is there to authenticate users for your applications which looks similar to Cognito Identity Pools. The difference is that Identity Pools allows a way to authorize your users to use the various AWS services and User Pools is not about authorizing to AWS services but to provide add sign-up and sign-in functionality to web and mobile applications."
      },
      {
        "answer": "",
        "explanation": "<strong>Cognito Sync</strong> - You can use it to synchronize user profile data across mobile devices and the web without requiring your own backend. The client libraries cache data locally so your app can read and write data regardless of device connectivity status."
      },
      {
        "answer": "",
        "explanation": "<strong>IAM</strong> - This is not a good solution because it would require you to have an IAM user for each mobile device which is not a good practice or manageable way of handling deployment."
      },
      {
        "answer": "",
        "explanation": "Exam Alert:"
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q58-i1.jpg",
        "answer": "",
        "explanation": "Please review the following note to understand the differences between Cognito User Pools and Cognito Identity Pools:"
      },
      {
        "link": "https://docs.aws.amazon.com/cognito/latest/developerguide/what-is-amazon-cognito.html"
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/cognito/latest/developerguide/what-is-amazon-cognito.html"
    ]
  },
  {
    "id": 24,
    "question": "<p>Your AWS CodeDeploy deployment to T2 instances succeed. The new application revision makes API calls to Amazon S3 however the application is not working as expected due to authorization exceptions and you were assigned to troubleshoot the issue.</p>\n\n<p>Which of the following should you do?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Make the S3 bucket public</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Fix the IAM permissions for the EC2 instance role</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Fix the IAM permissions for the CodeDeploy service role</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Enable CodeDeploy Proxy</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Deployment",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Fix the IAM permissions for the EC2 instance role</strong></p>\n\n<p>You should use an IAM role to manage temporary credentials for applications that run on an EC2 instance. When you use a role, you don't have to distribute long-term credentials (such as a user name and password or access keys) to an EC2 instance. Instead, the role supplies temporary permissions that applications can use when they make calls to other AWS resources. In this case, make sure your role has access to the S3 bucket.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Fix the IAM permissions for the CodeDeploy service role</strong> - The fact that CodeDeploy deployed the application to EC2 instances tells us that there was no issue between those two. The actual issue is between the EC2 instances and S3.</p>\n\n<p><strong>Make the S3 bucket public</strong> - This is not a good practice, you should strive to provide least privilege access. You may have files in here that should not be allowed public access and you are opening the door to security breaches.</p>\n\n<p><strong>Enable CodeDeploy Proxy</strong> - This is not correct as we don't need to look into CodeDeploy settings but rather between EC2 and S3 permissions.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html\">https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Fix the IAM permissions for the EC2 instance role</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "You should use an IAM role to manage temporary credentials for applications that run on an EC2 instance. When you use a role, you don't have to distribute long-term credentials (such as a user name and password or access keys) to an EC2 instance. Instead, the role supplies temporary permissions that applications can use when they make calls to other AWS resources. In this case, make sure your role has access to the S3 bucket."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Fix the IAM permissions for the CodeDeploy service role</strong> - The fact that CodeDeploy deployed the application to EC2 instances tells us that there was no issue between those two. The actual issue is between the EC2 instances and S3."
      },
      {
        "answer": "",
        "explanation": "<strong>Make the S3 bucket public</strong> - This is not a good practice, you should strive to provide least privilege access. You may have files in here that should not be allowed public access and you are opening the door to security breaches."
      },
      {
        "answer": "",
        "explanation": "<strong>Enable CodeDeploy Proxy</strong> - This is not correct as we don't need to look into CodeDeploy settings but rather between EC2 and S3 permissions."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html"
    ]
  },
  {
    "id": 25,
    "question": "<p>A company has several Linux-based EC2 instances that generate various log files which need to be analyzed for security and compliance purposes. The company wants to use Kinesis Data Streams (KDS) to analyze this log data.</p>\n\n<p>Which of the following is the most optimal way of sending log data from the EC2 instances to KDS?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Run cron job on each of the instances to collect log data and send it to Kinesis Data Streams</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Install and configure Kinesis Agent on each of the instances</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Install AWS SDK on each of the instances and configure it to send the necessary files to Kinesis Data Streams</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Use Kinesis Producer Library (KPL) to collect and ingest data from each EC2 instance</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Troubleshooting and Optimization",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Install and configure Kinesis Agent on each of the instances</strong></p>\n\n<p>Kinesis Agent is a stand-alone Java software application that offers an easy way to collect and send data to Kinesis Data Streams. The agent continuously monitors a set of files and sends new data to your stream. The agent handles file rotation, checkpointing, and retry upon failures. It delivers all of your data in a reliable, timely, and simple manner. It also emits Amazon CloudWatch metrics to help you better monitor and troubleshoot the streaming process.</p>\n\n<p>You can install the agent on Linux-based server environments such as web servers, log servers, and database servers. After installing the agent, configure it by specifying the files to monitor and the stream for the data. After the agent is configured, it durably collects data from the files and reliably sends it to the stream.</p>\n\n<p>The agent can also pre-process the records parsed from monitored files before sending them to your stream. You can enable this feature by adding the dataProcessingOptions configuration setting to your file flow. One or more processing options can be added and they will be performed in the specified order.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Run cron job on each of the instances to collect log data and send it to Kinesis Data Streams</strong> - This solution is possible, though not an optimal one. This solution requires writing custom code and tracking file/log changes, retry failures and so on. Kinesis Agent is built to handle all these requirements and integrates with Data Streams.</p>\n\n<p><strong>Install AWS SDK on each of the instances and configure it to send the necessary files to Kinesis Data Streams</strong> - Kinesis Data Streams APIs that are available in the AWS SDKs, helps you manage many aspects of Kinesis Data Streams, including creating streams, resharding, and putting and getting records. You will need to write custom code to handle new data in the log files and send it over to your stream. Kinesis Agent does it easily, as it is designed to continuously monitor a set of files and send new data to your stream.</p>\n\n<p><strong>Use Kinesis Producer Library (KPL) to collect and ingest data from each EC2 instance</strong> - The KPL is an easy-to-use, highly configurable library that helps you write to a Kinesis data stream. It acts as an intermediary between your producer application code and the Kinesis Data Streams API actions. This is not optimal compared to Kinesis Agent which is designed to continuously monitor a set of files and send new data to your stream.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html\">https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Install and configure Kinesis Agent on each of the instances</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Kinesis Agent is a stand-alone Java software application that offers an easy way to collect and send data to Kinesis Data Streams. The agent continuously monitors a set of files and sends new data to your stream. The agent handles file rotation, checkpointing, and retry upon failures. It delivers all of your data in a reliable, timely, and simple manner. It also emits Amazon CloudWatch metrics to help you better monitor and troubleshoot the streaming process."
      },
      {
        "answer": "",
        "explanation": "You can install the agent on Linux-based server environments such as web servers, log servers, and database servers. After installing the agent, configure it by specifying the files to monitor and the stream for the data. After the agent is configured, it durably collects data from the files and reliably sends it to the stream."
      },
      {
        "answer": "",
        "explanation": "The agent can also pre-process the records parsed from monitored files before sending them to your stream. You can enable this feature by adding the dataProcessingOptions configuration setting to your file flow. One or more processing options can be added and they will be performed in the specified order."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Run cron job on each of the instances to collect log data and send it to Kinesis Data Streams</strong> - This solution is possible, though not an optimal one. This solution requires writing custom code and tracking file/log changes, retry failures and so on. Kinesis Agent is built to handle all these requirements and integrates with Data Streams."
      },
      {
        "answer": "",
        "explanation": "<strong>Install AWS SDK on each of the instances and configure it to send the necessary files to Kinesis Data Streams</strong> - Kinesis Data Streams APIs that are available in the AWS SDKs, helps you manage many aspects of Kinesis Data Streams, including creating streams, resharding, and putting and getting records. You will need to write custom code to handle new data in the log files and send it over to your stream. Kinesis Agent does it easily, as it is designed to continuously monitor a set of files and send new data to your stream."
      },
      {
        "answer": "",
        "explanation": "<strong>Use Kinesis Producer Library (KPL) to collect and ingest data from each EC2 instance</strong> - The KPL is an easy-to-use, highly configurable library that helps you write to a Kinesis data stream. It acts as an intermediary between your producer application code and the Kinesis Data Streams API actions. This is not optimal compared to Kinesis Agent which is designed to continuously monitor a set of files and send new data to your stream."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html"
    ]
  },
  {
    "id": 26,
    "question": "<p>A company would like to migrate the existing application code from a GitHub repository to AWS CodeCommit.</p>\n\n<p>As an AWS Certified Developer Associate, which of the following would you recommend for migrating the cloned repository to CodeCommit over HTTPS?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use Git credentials generated from IAM</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Use IAM Multi-Factor authentication</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Use authentication offered by GitHub secure tokens</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Use IAM user secret access key and access key ID</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Security",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Use Git credentials generated from IAM</strong> - CodeCommit repositories are Git-based and support the basic functionalities of Git such as Git credentials. AWS recommends that you use an IAM user when working with CodeCommit. You can access CodeCommit with other identity types, but the other identity types are subject to limitations.</p>\n\n<p>The simplest way to set up connections to AWS CodeCommit repositories is to configure Git credentials for CodeCommit in the IAM console, and then use those credentials for HTTPS connections. You can also use these same credentials with any third-party tool or individual development environment (IDE) that supports HTTPS authentication using a static user name and password.</p>\n\n<p>An IAM user is an identity within your Amazon Web Services account that has specific custom permissions. For example, an IAM user can have permissions to create and manage Git credentials for accessing CodeCommit repositories. This is the recommended user type for working with CodeCommit. You can use an IAM user name and password to sign in to secure AWS webpages like the AWS Management Console, AWS Discussion Forums, or the AWS Support Center.</p>\n\n<p>Authentication and access control for AWS CodeCommit:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt6-q52-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt6-q52-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control.html\">https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Use IAM Multi-Factor authentication</strong> - AWS Multi-Factor Authentication (MFA) is a simple best practice that adds an extra layer of protection on top of your user name and password. With MFA enabled, when a user signs in to an AWS Management Console, they will be prompted for their user name and password (the first factor—what they know), as well as for an authentication code from their AWS MFA device (the second factor—what they have). Taken together, these multiple factors provide increased security for your AWS account settings and resources.</p>\n\n<p><strong>Use IAM user secret access key and access key ID</strong> - Access keys are long-term credentials for an IAM user or the AWS account root user. You can use access keys to sign programmatic requests to the AWS CLI or AWS API (directly or using the AWS SDK). As a best practice, AWS suggests using temporary security credentials (IAM roles) instead of access keys.</p>\n\n<p><strong>Use authentication offered by GitHub secure tokens</strong> - Personal access tokens (PATs) are an alternative to using passwords for authentication to GitHub when using the GitHub API or the command line. This option is specific to GitHub only and hence not useful for the given use case.</p>\n\n<p>References:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control.html\">https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control.html</a></p>\n\n<p><a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-gc.html\">https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-gc.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Use Git credentials generated from IAM</strong> - CodeCommit repositories are Git-based and support the basic functionalities of Git such as Git credentials. AWS recommends that you use an IAM user when working with CodeCommit. You can access CodeCommit with other identity types, but the other identity types are subject to limitations."
      },
      {
        "answer": "",
        "explanation": "The simplest way to set up connections to AWS CodeCommit repositories is to configure Git credentials for CodeCommit in the IAM console, and then use those credentials for HTTPS connections. You can also use these same credentials with any third-party tool or individual development environment (IDE) that supports HTTPS authentication using a static user name and password."
      },
      {
        "answer": "",
        "explanation": "An IAM user is an identity within your Amazon Web Services account that has specific custom permissions. For example, an IAM user can have permissions to create and manage Git credentials for accessing CodeCommit repositories. This is the recommended user type for working with CodeCommit. You can use an IAM user name and password to sign in to secure AWS webpages like the AWS Management Console, AWS Discussion Forums, or the AWS Support Center."
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt6-q52-i1.jpg",
        "answer": "",
        "explanation": "Authentication and access control for AWS CodeCommit:"
      },
      {
        "link": "https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Use IAM Multi-Factor authentication</strong> - AWS Multi-Factor Authentication (MFA) is a simple best practice that adds an extra layer of protection on top of your user name and password. With MFA enabled, when a user signs in to an AWS Management Console, they will be prompted for their user name and password (the first factor—what they know), as well as for an authentication code from their AWS MFA device (the second factor—what they have). Taken together, these multiple factors provide increased security for your AWS account settings and resources."
      },
      {
        "answer": "",
        "explanation": "<strong>Use IAM user secret access key and access key ID</strong> - Access keys are long-term credentials for an IAM user or the AWS account root user. You can use access keys to sign programmatic requests to the AWS CLI or AWS API (directly or using the AWS SDK). As a best practice, AWS suggests using temporary security credentials (IAM roles) instead of access keys."
      },
      {
        "answer": "",
        "explanation": "<strong>Use authentication offered by GitHub secure tokens</strong> - Personal access tokens (PATs) are an alternative to using passwords for authentication to GitHub when using the GitHub API or the command line. This option is specific to GitHub only and hence not useful for the given use case."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control.html",
      "https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-gc.html"
    ]
  },
  {
    "id": 27,
    "question": "<p>After reviewing your monthly AWS bill you notice that the cost of using Amazon SQS has gone up substantially after creating new queues; however, you know that your queue clients do not have a lot of traffic and are receiving empty responses.</p>\n\n<p>Which of the following actions should you take?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use LongPolling</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Use a FIFO queue</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Decrease DelaySeconds</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Increase the VisibilityTimeout</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Troubleshooting and Optimization",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Use LongPolling</strong></p>\n\n<p>Amazon Simple Queue Service (SQS) is a fully managed message queuing service that enables you to decouple and scale microservices, distributed systems, and serverless applications.</p>\n\n<p>Amazon SQS provides short polling and long polling to receive messages from a queue. By default, queues use short polling. With short polling, Amazon SQS sends the response right away, even if the query found no messages. With long polling, Amazon SQS sends a response after it collects at least one available message, up to the maximum number of messages specified in the request. Amazon SQS sends an empty response only if the polling wait time expires.</p>\n\n<p>Long polling makes it inexpensive to retrieve messages from your Amazon SQS queue as soon as the messages are available. Long polling helps reduce the cost of using Amazon SQS by eliminating the number of empty responses (when there are no messages available for a ReceiveMessage request) and false empty responses (when messages are available but aren't included in a response). When the wait time for the ReceiveMessage API action is greater than 0, long polling is in effect. The maximum long polling wait time is 20 seconds.</p>\n\n<p>Exam Alert:</p>\n\n<p>Please review the differences between Short Polling vs Long Polling:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q14-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q14-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-short-and-long-polling.html\">https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-short-and-long-polling.html</a><p></p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q14-i2.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q14-i2.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-short-and-long-polling.html\">https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-short-and-long-polling.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Increase the VisibilityTimeout</strong> - Because there is no guarantee that a consumer received a message, the consumer must delete it. To prevent other consumers from processing the message again, Amazon SQS sets a visibility timeout. Visibility timeout will not help with cost reduction.</p>\n\n<p><strong>Use a FIFO queue</strong> - FIFO queues are designed to enhance messaging between applications when the order of operations and events has to be enforced. FIFO queues will not help with cost reduction. In fact, they are costlier than standard queues.</p>\n\n<p><strong>Decrease DelaySeconds</strong> - This is similar to VisibilityTimeout. The difference is that a message is hidden when it is first added to a queue for DelaySeconds, whereas for visibility timeouts a message is hidden only after it is consumed from the queue. DelaySeconds will not help with cost reduction.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-short-and-long-polling.html\">https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-short-and-long-polling.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Use LongPolling</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Amazon Simple Queue Service (SQS) is a fully managed message queuing service that enables you to decouple and scale microservices, distributed systems, and serverless applications."
      },
      {
        "answer": "",
        "explanation": "Amazon SQS provides short polling and long polling to receive messages from a queue. By default, queues use short polling. With short polling, Amazon SQS sends the response right away, even if the query found no messages. With long polling, Amazon SQS sends a response after it collects at least one available message, up to the maximum number of messages specified in the request. Amazon SQS sends an empty response only if the polling wait time expires."
      },
      {
        "answer": "",
        "explanation": "Long polling makes it inexpensive to retrieve messages from your Amazon SQS queue as soon as the messages are available. Long polling helps reduce the cost of using Amazon SQS by eliminating the number of empty responses (when there are no messages available for a ReceiveMessage request) and false empty responses (when messages are available but aren't included in a response). When the wait time for the ReceiveMessage API action is greater than 0, long polling is in effect. The maximum long polling wait time is 20 seconds."
      },
      {
        "answer": "",
        "explanation": "Exam Alert:"
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q14-i1.jpg",
        "answer": "",
        "explanation": "Please review the differences between Short Polling vs Long Polling:"
      },
      {
        "link": "https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-short-and-long-polling.html"
      },
      {
        "link": "https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-short-and-long-polling.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Increase the VisibilityTimeout</strong> - Because there is no guarantee that a consumer received a message, the consumer must delete it. To prevent other consumers from processing the message again, Amazon SQS sets a visibility timeout. Visibility timeout will not help with cost reduction."
      },
      {
        "answer": "",
        "explanation": "<strong>Use a FIFO queue</strong> - FIFO queues are designed to enhance messaging between applications when the order of operations and events has to be enforced. FIFO queues will not help with cost reduction. In fact, they are costlier than standard queues."
      },
      {
        "answer": "",
        "explanation": "<strong>Decrease DelaySeconds</strong> - This is similar to VisibilityTimeout. The difference is that a message is hidden when it is first added to a queue for DelaySeconds, whereas for visibility timeouts a message is hidden only after it is consumed from the queue. DelaySeconds will not help with cost reduction."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-short-and-long-polling.html"
    ]
  },
  {
    "id": 28,
    "question": "<p>You are designing a high-performance application that requires millions of connections. You have several EC2 instances running Apache2 web servers and the application will require capturing the user’s source IP address and source port without the use of X-Forwarded-For.</p>\n\n<p>Which of the following options will meet your needs?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Elastic Load Balancer</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Classic Load Balancer</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Application Load Balancer</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Network Load Balancer</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Network Load Balancer</strong></p>\n\n<p>A Network Load Balancer functions at the fourth layer of the Open Systems Interconnection (OSI) model. It can handle millions of requests per second. After the load balancer receives a connection request, it selects a target from the target group for the default rule. It attempts to open a TCP connection to the selected target on the port specified in the listener configuration. Incoming connections remain unmodified, so application software need not support X-Forwarded-For.</p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q50-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q50-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/introduction.html\">https://docs.aws.amazon.com/elasticloadbalancing/latest/network/introduction.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Application Load Balancer</strong> - An Application Load Balancer functions at the application layer, the seventh layer of the Open Systems Interconnection (OSI) model. After the load balancer receives a request, it evaluates the listener rules in priority order to determine which rule to apply and then selects a target from the target group for the rule action.</p>\n\n<p>One of many benefits of the Application Load Balancer is its support for path-based routing. You can configure rules for your listener that forward requests based on the URL in the request. This enables you to structure your application as smaller services, and route requests to the correct service based on the content of the URL. For needs relating to network traffic go with Network Load Balancer.</p>\n\n<p><strong>Elastic Load Balancer</strong> - Elastic Load Balancing is the service itself that offers different types of load balancers.</p>\n\n<p><strong>Classic Load Balancer</strong> - It is a basic load balancer that distributes traffic. If your account was created before 2013-12-04, your account supports EC2-Classic instances and you will benefit in using this type of load balancer. The classic load balancer can be used regardless of when your account was created and whether you use EC2-Classic or whether your instances are in a VPC but just remember its the basic load balancer AWS offers and not advanced as the others.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/introduction.html\">https://docs.aws.amazon.com/elasticloadbalancing/latest/network/introduction.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Network Load Balancer</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "A Network Load Balancer functions at the fourth layer of the Open Systems Interconnection (OSI) model. It can handle millions of requests per second. After the load balancer receives a connection request, it selects a target from the target group for the default rule. It attempts to open a TCP connection to the selected target on the port specified in the listener configuration. Incoming connections remain unmodified, so application software need not support X-Forwarded-For."
      },
      {
        "link": "https://docs.aws.amazon.com/elasticloadbalancing/latest/network/introduction.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Application Load Balancer</strong> - An Application Load Balancer functions at the application layer, the seventh layer of the Open Systems Interconnection (OSI) model. After the load balancer receives a request, it evaluates the listener rules in priority order to determine which rule to apply and then selects a target from the target group for the rule action."
      },
      {
        "answer": "",
        "explanation": "One of many benefits of the Application Load Balancer is its support for path-based routing. You can configure rules for your listener that forward requests based on the URL in the request. This enables you to structure your application as smaller services, and route requests to the correct service based on the content of the URL. For needs relating to network traffic go with Network Load Balancer."
      },
      {
        "answer": "",
        "explanation": "<strong>Elastic Load Balancer</strong> - Elastic Load Balancing is the service itself that offers different types of load balancers."
      },
      {
        "answer": "",
        "explanation": "<strong>Classic Load Balancer</strong> - It is a basic load balancer that distributes traffic. If your account was created before 2013-12-04, your account supports EC2-Classic instances and you will benefit in using this type of load balancer. The classic load balancer can be used regardless of when your account was created and whether you use EC2-Classic or whether your instances are in a VPC but just remember its the basic load balancer AWS offers and not advanced as the others."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/elasticloadbalancing/latest/network/introduction.html"
    ]
  },
  {
    "id": 29,
    "question": "<p>What is the run order of the hooks for in-place deployments using CodeDeploy?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Before Install -&gt; Application Stop -&gt; ValidateService -&gt; Application Start</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Before Install -&gt; Application Stop -&gt; Application Start -&gt; ValidateService</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Application Stop -&gt; Before Install -&gt; Application Start -&gt; ValidateService</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Application Stop -&gt; Before Install -&gt; ValidateService -&gt; Application Start</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Deployment",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Application Stop -&gt; Before Install -&gt; Application Start -&gt; ValidateService</strong></p>\n\n<p>In CodeDeploy, a deployment is a process of installing content on one or more instances. This content can consist of code, web and configuration files, executables, packages, scripts, and so on. CodeDeploy deploys content that is stored in a source repository, according to the configuration rules you specify.</p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q12-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q12-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/deployments.html\">https://docs.aws.amazon.com/codedeploy/latest/userguide/deployments.html</a><p></p>\n\n<p>The content in the 'hooks' section of the AppSpec file varies, depending on the compute platform for your deployment. The 'hooks' section for an EC2/On-Premises deployment contains mappings that link deployment lifecycle event hooks to one or more scripts. The 'hooks' section for a Lambda or an Amazon ECS deployment specifies Lambda validation functions to run during a deployment lifecycle event. If an event hook is not present, no operation is executed for that event.</p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q12-i2.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q12-i2.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html\">https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Before Install -&gt; Application Stop -&gt; ValidateService -&gt; Application Start</strong></p>\n\n<p><strong>Application Stop -&gt; Before Install -&gt; ValidateService -&gt; Application Start</strong></p>\n\n<p><strong>Before Install -&gt; Application Stop -&gt; Application Start -&gt; ValidateService</strong></p>\n\n<p>As explained above, these three options contradict the correct order of hooks, so these are incorrect.</p>\n\n<p>References:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/deployments.html\">https://docs.aws.amazon.com/codedeploy/latest/userguide/deployments.html</a></p>\n\n<p><a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html\">https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Application Stop -&gt; Before Install -&gt; Application Start -&gt; ValidateService</strong>"
      },
      {
        "answer": "",
        "explanation": "In CodeDeploy, a deployment is a process of installing content on one or more instances. This content can consist of code, web and configuration files, executables, packages, scripts, and so on. CodeDeploy deploys content that is stored in a source repository, according to the configuration rules you specify."
      },
      {
        "link": "https://docs.aws.amazon.com/codedeploy/latest/userguide/deployments.html"
      },
      {
        "answer": "",
        "explanation": "The content in the 'hooks' section of the AppSpec file varies, depending on the compute platform for your deployment. The 'hooks' section for an EC2/On-Premises deployment contains mappings that link deployment lifecycle event hooks to one or more scripts. The 'hooks' section for a Lambda or an Amazon ECS deployment specifies Lambda validation functions to run during a deployment lifecycle event. If an event hook is not present, no operation is executed for that event."
      },
      {
        "link": "https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Before Install -&gt; Application Stop -&gt; ValidateService -&gt; Application Start</strong>"
      },
      {
        "answer": "",
        "explanation": "<strong>Application Stop -&gt; Before Install -&gt; ValidateService -&gt; Application Start</strong>"
      },
      {
        "answer": "",
        "explanation": "<strong>Before Install -&gt; Application Stop -&gt; Application Start -&gt; ValidateService</strong>"
      },
      {
        "answer": "",
        "explanation": "As explained above, these three options contradict the correct order of hooks, so these are incorrect."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/codedeploy/latest/userguide/deployments.html",
      "https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html"
    ]
  },
  {
    "id": 30,
    "question": "<p>You are a manager for a tech company that has just hired a team of developers to work on the company's AWS infrastructure. All the developers are reporting to you that when using the AWS CLI to execute commands it fails with the following exception: You are not authorized to perform this operation. Encoded authorization failure message: 6h34GtpmGjJJUm946eDVBfzWQJk6z5GePbbGDs9Z2T8xZj9EZtEduSnTbmrR7pMqpJrVYJCew2m8YBZQf4HRWEtrpncANrZMsnzk.</p>\n\n<p>Which of the following actions will help developers decode the message?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>AWS Cognito Decoder</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>AWS STS decode-authorization-message</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>AWS IAM decode-authorization-message</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Use KMS decode-authorization-message</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Security",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>AWS STS decode-authorization-message</strong></p>\n\n<p>Use decode-authorization-message to decode additional information about the authorization status of a request from an encoded message returned in response to an AWS request. If a user is not authorized to perform an action that was requested, the request returns a Client.UnauthorizedOperation response (an HTTP 403 response). The message is encoded because the details of the authorization status can constitute privileged information that the user who requested the operation should not see. To decode an authorization status message, a user must be granted permissions via an IAM policy to request the DecodeAuthorizationMessage (sts:DecodeAuthorizationMessage) action.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>AWS IAM decode-authorization-message</strong> - The IAM service does not have this command, as it's a made-up option.</p>\n\n<p><strong>Use KMS decode-authorization-message</strong> - The KMS service does not have this command, as it's a made-up option.</p>\n\n<p><strong>AWS Cognito Decoder</strong> - The Cognito service does not have this command, as it's a made-up option.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/cli/latest/reference/sts/decode-authorization-message.html\">https://docs.aws.amazon.com/cli/latest/reference/sts/decode-authorization-message.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>AWS STS decode-authorization-message</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Use decode-authorization-message to decode additional information about the authorization status of a request from an encoded message returned in response to an AWS request. If a user is not authorized to perform an action that was requested, the request returns a Client.UnauthorizedOperation response (an HTTP 403 response). The message is encoded because the details of the authorization status can constitute privileged information that the user who requested the operation should not see. To decode an authorization status message, a user must be granted permissions via an IAM policy to request the DecodeAuthorizationMessage (sts:DecodeAuthorizationMessage) action."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>AWS IAM decode-authorization-message</strong> - The IAM service does not have this command, as it's a made-up option."
      },
      {
        "answer": "",
        "explanation": "<strong>Use KMS decode-authorization-message</strong> - The KMS service does not have this command, as it's a made-up option."
      },
      {
        "answer": "",
        "explanation": "<strong>AWS Cognito Decoder</strong> - The Cognito service does not have this command, as it's a made-up option."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/cli/latest/reference/sts/decode-authorization-message.html"
    ]
  },
  {
    "id": 31,
    "question": "<p>An order management system uses a cron job to poll for any new orders. Every time a new order is created, the cron job sends this order data as a message to the message queues to facilitate downstream order processing in a reliable way. To reduce costs and improve performance, the company wants to move this functionality to AWS cloud.</p>\n\n<p>Which of the following is the most optimal solution to meet this requirement?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Configure different Amazon Simple Queue Service (SQS) queues to poll for new orders</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Use Amazon Simple Notification Service (SNS) to push notifications when an order is created. Configure different Amazon Simple Queue Service (SQS) queues to receive these messages for downstream processing</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Use Amazon Simple Notification Service (SNS) to push notifications to Kinesis Data Firehose delivery streams for processing the data for downstream applications</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Use Amazon Simple Notification Service (SNS) to push notifications and use AWS Lambda functions to process the information received from SNS</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Troubleshooting and Optimization",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Use Amazon Simple Notification Service (SNS) to push notifications when an order is created. Configure different Amazon Simple Queue Service (SQS) queues to receive these messages for downstream processing</strong></p>\n\n<p>Amazon SNS works closely with Amazon Simple Queue Service (Amazon SQS). These services provide different benefits for developers. Amazon SNS allows applications to send time-critical messages to multiple subscribers through a “push” mechanism, eliminating the need to periodically check or “poll” for updates. Amazon SQS is a message queue service used by distributed applications to exchange messages through a polling model, and can be used to decouple sending and receiving components—without requiring each component to be concurrently available.</p>\n\n<p>Using Amazon SNS and Amazon SQS together, messages can be delivered to applications that require immediate notification of an event, and also stored in an Amazon SQS queue for other applications to process at a later time.</p>\n\n<p>When you subscribe an Amazon SQS queue to an Amazon SNS topic, you can publish a message to the topic and Amazon SNS sends an Amazon SQS message to the subscribed queue. The Amazon SQS message contains the subject and message that were published to the topic along with metadata about the message in a JSON document.</p>\n\n<p>SNS-SQS fanout is the right solution for this use case.</p>\n\n<p>Sample SNS-SQS Fanout message:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt6-q35-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt6-q35-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sqs-as-subscriber.html\">https://docs.aws.amazon.com/sns/latest/dg/sns-sqs-as-subscriber.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Configure different Amazon Simple Queue Service (SQS) queues to poll for new orders</strong> - Amazon SQS cannot be used as a polling service, as messages need to be pushed to the queue, which are then handled by the queue consumers.</p>\n\n<p><strong>Use Amazon Simple Notification Service (SNS) to push notifications and use AWS Lambda functions to process the information received from SNS</strong> - Amazon SNS and AWS Lambda are integrated so you can invoke Lambda functions with Amazon SNS notifications. When a message is published to an SNS topic that has a Lambda function subscribed to it, the Lambda function is invoked with the payload of the published message. For the given scenario, we need a service that can store the message data pushed by SNS, for further processing. AWS Lambda does not have capacity to store the message data. In case a Lambda function is unable to process a specific message, it will be left unprocessed. Hence this option is not correct.</p>\n\n<p><strong>Use Amazon Simple Notification Service (SNS) to push notifications to Kinesis Data Firehose delivery streams for processing the data for downstream applications</strong> - You can subscribe Amazon Kinesis Data Firehose delivery streams to SNS topics, which allows you to send notifications to additional storage and analytics endpoints. However, Kinesis is built for real-time processing of big data. Whereas, SQS is meant for decoupling dependent systems with easy methods to transmit data/messages. SQS also is a cheaper option when compared to Firehose. Therefore this option is not the right fit for the given use case.</p>\n\n<p>References:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sqs-as-subscriber.html\">https://docs.aws.amazon.com/sns/latest/dg/sns-sqs-as-subscriber.html</a></p>\n\n<p><a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-lambda-as-subscriber.html\">https://docs.aws.amazon.com/sns/latest/dg/sns-lambda-as-subscriber.html</a></p>\n\n<p><a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-firehose-as-subscriber.html\">https://docs.aws.amazon.com/sns/latest/dg/sns-firehose-as-subscriber.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Use Amazon Simple Notification Service (SNS) to push notifications when an order is created. Configure different Amazon Simple Queue Service (SQS) queues to receive these messages for downstream processing</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Amazon SNS works closely with Amazon Simple Queue Service (Amazon SQS). These services provide different benefits for developers. Amazon SNS allows applications to send time-critical messages to multiple subscribers through a “push” mechanism, eliminating the need to periodically check or “poll” for updates. Amazon SQS is a message queue service used by distributed applications to exchange messages through a polling model, and can be used to decouple sending and receiving components—without requiring each component to be concurrently available."
      },
      {
        "answer": "",
        "explanation": "Using Amazon SNS and Amazon SQS together, messages can be delivered to applications that require immediate notification of an event, and also stored in an Amazon SQS queue for other applications to process at a later time."
      },
      {
        "answer": "",
        "explanation": "When you subscribe an Amazon SQS queue to an Amazon SNS topic, you can publish a message to the topic and Amazon SNS sends an Amazon SQS message to the subscribed queue. The Amazon SQS message contains the subject and message that were published to the topic along with metadata about the message in a JSON document."
      },
      {
        "answer": "",
        "explanation": "SNS-SQS fanout is the right solution for this use case."
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt6-q35-i1.jpg",
        "answer": "",
        "explanation": "Sample SNS-SQS Fanout message:"
      },
      {
        "link": "https://docs.aws.amazon.com/sns/latest/dg/sns-sqs-as-subscriber.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Configure different Amazon Simple Queue Service (SQS) queues to poll for new orders</strong> - Amazon SQS cannot be used as a polling service, as messages need to be pushed to the queue, which are then handled by the queue consumers."
      },
      {
        "answer": "",
        "explanation": "<strong>Use Amazon Simple Notification Service (SNS) to push notifications and use AWS Lambda functions to process the information received from SNS</strong> - Amazon SNS and AWS Lambda are integrated so you can invoke Lambda functions with Amazon SNS notifications. When a message is published to an SNS topic that has a Lambda function subscribed to it, the Lambda function is invoked with the payload of the published message. For the given scenario, we need a service that can store the message data pushed by SNS, for further processing. AWS Lambda does not have capacity to store the message data. In case a Lambda function is unable to process a specific message, it will be left unprocessed. Hence this option is not correct."
      },
      {
        "answer": "",
        "explanation": "<strong>Use Amazon Simple Notification Service (SNS) to push notifications to Kinesis Data Firehose delivery streams for processing the data for downstream applications</strong> - You can subscribe Amazon Kinesis Data Firehose delivery streams to SNS topics, which allows you to send notifications to additional storage and analytics endpoints. However, Kinesis is built for real-time processing of big data. Whereas, SQS is meant for decoupling dependent systems with easy methods to transmit data/messages. SQS also is a cheaper option when compared to Firehose. Therefore this option is not the right fit for the given use case."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/sns/latest/dg/sns-sqs-as-subscriber.html",
      "https://docs.aws.amazon.com/sns/latest/dg/sns-lambda-as-subscriber.html",
      "https://docs.aws.amazon.com/sns/latest/dg/sns-firehose-as-subscriber.html"
    ]
  },
  {
    "id": 32,
    "question": "<p>A company developed an app-based service for citizens to book transportation rides in the local community. The platform is running on AWS EC2 instances and uses Amazon Relational Database Service (RDS) for storing transportation data. A new feature has been requested where receipts would be emailed to customers with PDF attachments retrieved from Amazon Simple Storage Service (S3).</p>\n\n<p>Which of the following options will provide EC2 instances with the right permissions to upload files to Amazon S3 and generate S3 Signed URL?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>CloudFormation</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Create an IAM Role for EC2</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>EC2 User Data</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Run <code>aws configure</code> on the EC2 instance</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Security",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Create an IAM Role for EC2</strong></p>\n\n<p>IAM roles have been incorporated so that your applications can securely make API requests from your instances, without requiring you to manage the security credentials that the applications use. Instead of creating and distributing your AWS credentials, you can delegate permission to make API requests using IAM roles.</p>\n\n<p>Amazon EC2 uses an instance profile as a container for an IAM role. When you create an IAM role using the IAM console, the console creates an instance profile automatically and gives it the same name as the role to which it corresponds.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>EC2 User Data</strong> - You can specify user data when you launch an instance and you would not want to hard code the AWS credentials in the user data.</p>\n\n<p><strong>Run <code>aws configure</code> on the EC2 instance</strong> - When you first configure the CLI you have to run this command, afterward you should not need to if you want to obtain credentials to authenticate to other AWS services. An IAM role will receive temporary credentials for you so you can focus on using the CLI to get access to other AWS services if you have the permissions.</p>\n\n<p><strong>CloudFormation</strong> - AWS CloudFormation gives developers and businesses an easy way to create a collection of related AWS and third-party resources and provision them in an orderly and predictable fashion.</p>\n\n<p>How CloudFormation Works:\n<img src=\"https://d1.awsstatic.com/Products/product-name/diagrams/product-page-diagram_CloudFormation.ad3a4c93b4fdd3366da3da0de4fb084d89a5d761.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://d1.awsstatic.com/Products/product-name/diagrams/product-page-diagram_CloudFormation.ad3a4c93b4fdd3366da3da0de4fb084d89a5d761.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://aws.amazon.com/cloudformation/\">https://aws.amazon.com/cloudformation/</a><p></p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html\">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Create an IAM Role for EC2</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "IAM roles have been incorporated so that your applications can securely make API requests from your instances, without requiring you to manage the security credentials that the applications use. Instead of creating and distributing your AWS credentials, you can delegate permission to make API requests using IAM roles."
      },
      {
        "answer": "",
        "explanation": "Amazon EC2 uses an instance profile as a container for an IAM role. When you create an IAM role using the IAM console, the console creates an instance profile automatically and gives it the same name as the role to which it corresponds."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>EC2 User Data</strong> - You can specify user data when you launch an instance and you would not want to hard code the AWS credentials in the user data."
      },
      {
        "answer": "",
        "explanation": "<strong>Run <code>aws configure</code> on the EC2 instance</strong> - When you first configure the CLI you have to run this command, afterward you should not need to if you want to obtain credentials to authenticate to other AWS services. An IAM role will receive temporary credentials for you so you can focus on using the CLI to get access to other AWS services if you have the permissions."
      },
      {
        "answer": "",
        "explanation": "<strong>CloudFormation</strong> - AWS CloudFormation gives developers and businesses an easy way to create a collection of related AWS and third-party resources and provision them in an orderly and predictable fashion."
      },
      {
        "image": "https://d1.awsstatic.com/Products/product-name/diagrams/product-page-diagram_CloudFormation.ad3a4c93b4fdd3366da3da0de4fb084d89a5d761.png",
        "answer": "",
        "explanation": "How CloudFormation Works:"
      },
      {
        "link": "https://aws.amazon.com/cloudformation/"
      }
    ],
    "references": [
      "https://aws.amazon.com/cloudformation/",
      "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html"
    ]
  },
  {
    "id": 33,
    "question": "<p>Your company is in the process of building a DevOps culture and is moving all of its on-premise resources to the cloud using serverless architectures and automated deployments. You have created a CloudFormation template in YAML that uses an AWS Lambda function to pull HTML files from GitHub and place them into an Amazon Simple Storage Service (S3) bucket that you specify.</p>\n\n<p>Which of the following AWS CLI commands can you use to upload AWS Lambda functions and AWS CloudFormation templates to AWS?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p><code>cloudformation package</code> and <code>cloudformation deploy</code></p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p><code>cloudformation zip</code> and <code>cloudformation deploy</code></p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p><code>cloudformation zip</code> and <code>cloudformation upload</code></p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p><code>cloudformation package</code> and <code>cloudformation upload</code></p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Deployment",
    "explanation": "<p>Correct option:</p>\n\n<p><strong><code>cloudformation package</code> and <code>cloudformation deploy</code></strong></p>\n\n<p>AWS CloudFormation gives developers and businesses an easy way to create a collection of related AWS and third-party resources and provision them in an orderly and predictable fashion.</p>\n\n<p>How CloudFormation Works:\n<img src=\"https://d1.awsstatic.com/Products/product-name/diagrams/product-page-diagram_CloudFormation.ad3a4c93b4fdd3366da3da0de4fb084d89a5d761.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://d1.awsstatic.com/Products/product-name/diagrams/product-page-diagram_CloudFormation.ad3a4c93b4fdd3366da3da0de4fb084d89a5d761.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://aws.amazon.com/cloudformation/\">https://aws.amazon.com/cloudformation/</a><p></p>\n\n<p>The <code>cloudformation package</code> command packages the local artifacts (local paths) that your AWS CloudFormation template references. The command will upload local artifacts, such as your source code for your AWS Lambda function.</p>\n\n<p>The <code>cloudformation deploy</code> command deploys the specified AWS CloudFormation template by creating and then executing a changeset.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong><code>cloudformation package</code> and <code>cloudformation upload</code></strong> - The <code>cloudformation upload</code> command does not exist.</p>\n\n<p><strong><code>cloudformation zip</code> and <code>cloudformation upload</code></strong> - Both commands do not exist, this is a made-up option.</p>\n\n<p><strong><code>cloudformation zip</code> and <code>cloudformation deploy</code></strong> - The <code>cloudformation zip</code> command does not exist, this is a made-up option.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/cli/latest/reference/cloudformation/package.html\">https://docs.aws.amazon.com/cli/latest/reference/cloudformation/package.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong><code>cloudformation package</code> and <code>cloudformation deploy</code></strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "AWS CloudFormation gives developers and businesses an easy way to create a collection of related AWS and third-party resources and provision them in an orderly and predictable fashion."
      },
      {
        "image": "https://d1.awsstatic.com/Products/product-name/diagrams/product-page-diagram_CloudFormation.ad3a4c93b4fdd3366da3da0de4fb084d89a5d761.png",
        "answer": "",
        "explanation": "How CloudFormation Works:"
      },
      {
        "link": "https://aws.amazon.com/cloudformation/"
      },
      {
        "answer": "",
        "explanation": "The <code>cloudformation package</code> command packages the local artifacts (local paths) that your AWS CloudFormation template references. The command will upload local artifacts, such as your source code for your AWS Lambda function."
      },
      {
        "answer": "",
        "explanation": "The <code>cloudformation deploy</code> command deploys the specified AWS CloudFormation template by creating and then executing a changeset."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong><code>cloudformation package</code> and <code>cloudformation upload</code></strong> - The <code>cloudformation upload</code> command does not exist."
      },
      {
        "answer": "",
        "explanation": "<strong><code>cloudformation zip</code> and <code>cloudformation upload</code></strong> - Both commands do not exist, this is a made-up option."
      },
      {
        "answer": "",
        "explanation": "<strong><code>cloudformation zip</code> and <code>cloudformation deploy</code></strong> - The <code>cloudformation zip</code> command does not exist, this is a made-up option."
      }
    ],
    "references": [
      "https://aws.amazon.com/cloudformation/",
      "https://docs.aws.amazon.com/cli/latest/reference/cloudformation/package.html"
    ]
  },
  {
    "id": 34,
    "question": "<p>An IT company has a web application running on Amazon EC2 instances that needs read-only access to an Amazon DynamoDB table.</p>\n\n<p>As a Developer Associate, what is the best-practice solution you would recommend to accomplish this task?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Create an IAM role with an AmazonDynamoDBReadOnlyAccess policy and apply it to the EC2 instance profile</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Create an IAM user with Administrator access and configure AWS credentials for this user on the given EC2 instance</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Create a new IAM user with access keys. Attach an inline policy to the IAM user with read-only access to DynamoDB. Place the keys in the code. For security, redeploy the code whenever the keys rotate</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Run application code with AWS account root user credentials to ensure full access to all AWS services</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Security",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Create an IAM role with an AmazonDynamoDBReadOnlyAccess policy and apply it to the EC2 instance profile</strong></p>\n\n<p>As an AWS security best practice, you should not create an IAM user and pass the user's credentials to the application or embed the credentials in the application. Instead, create an IAM role that you attach to the EC2 instance to give temporary security credentials to applications running on the instance. When an application uses these credentials in AWS, it can perform all of the operations that are allowed by the policies attached to the role.</p>\n\n<p>So for the given use-case, you should create an IAM role with an AmazonDynamoDBReadOnlyAccess policy and apply it to the EC2 instance profile.</p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q9-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q9-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id.html\">https://docs.aws.amazon.com/IAM/latest/UserGuide/id.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Create a new IAM user with access keys. Attach an inline policy to the IAM user with read-only access to DynamoDB. Place the keys in the code. For security, redeploy the code whenever the keys rotate</strong></p>\n\n<p><strong>Create an IAM user with Administrator access and configure AWS credentials for this user on the given EC2 instance</strong></p>\n\n<p><strong>Run application code with AWS account root user credentials to ensure full access to all AWS services</strong></p>\n\n<p>As mentioned in the explanation above, it is dangerous to pass an IAM user's credentials to the application or embed the credentials in the application. The security implications are even higher when you use an IAM user with admin privileges or use the AWS account root user. So all three options are incorrect.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id.html\">https://docs.aws.amazon.com/IAM/latest/UserGuide/id.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Create an IAM role with an AmazonDynamoDBReadOnlyAccess policy and apply it to the EC2 instance profile</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "As an AWS security best practice, you should not create an IAM user and pass the user's credentials to the application or embed the credentials in the application. Instead, create an IAM role that you attach to the EC2 instance to give temporary security credentials to applications running on the instance. When an application uses these credentials in AWS, it can perform all of the operations that are allowed by the policies attached to the role."
      },
      {
        "answer": "",
        "explanation": "So for the given use-case, you should create an IAM role with an AmazonDynamoDBReadOnlyAccess policy and apply it to the EC2 instance profile."
      },
      {
        "link": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "<strong>Create a new IAM user with access keys. Attach an inline policy to the IAM user with read-only access to DynamoDB. Place the keys in the code. For security, redeploy the code whenever the keys rotate</strong>",
        "explanation": ""
      },
      {
        "answer": "<strong>Create an IAM user with Administrator access and configure AWS credentials for this user on the given EC2 instance</strong>",
        "explanation": ""
      },
      {
        "answer": "<strong>Run application code with AWS account root user credentials to ensure full access to all AWS services</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "As mentioned in the explanation above, it is dangerous to pass an IAM user's credentials to the application or embed the credentials in the application. The security implications are even higher when you use an IAM user with admin privileges or use the AWS account root user. So all three options are incorrect."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/IAM/latest/UserGuide/id.html"
    ]
  },
  {
    "id": 35,
    "question": "<p>A senior cloud engineer designs and deploys online fraud detection solutions for credit card companies processing millions of transactions daily. The Elastic Beanstalk application sends files to Amazon S3 and then sends a message to an Amazon SQS queue containing the path of the uploaded file in S3. The engineer wants to postpone the delivery of any new messages to the queue for at least 10 seconds.</p>\n\n<p>Which SQS feature should the engineer leverage?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use DelaySeconds parameter</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Use visibility timeout parameter</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Implement application-side delay</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Enable LongPolling</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Use DelaySeconds parameter</strong></p>\n\n<p>Amazon Simple Queue Service (SQS) is a fully managed message queuing service that enables you to decouple and scale microservices, distributed systems, and serverless applications. SQS offers two types of message queues. Standard queues offer maximum throughput, best-effort ordering, and at-least-once delivery. SQS FIFO queues are designed to guarantee that messages are processed exactly once, in the exact order that they are sent.</p>\n\n<p>Delay queues let you postpone the delivery of new messages to a queue for several seconds, for example, when your consumer application needs additional time to process messages. If you create a delay queue, any messages that you send to the queue remain invisible to consumers for the duration of the delay period. The default (minimum) delay for a queue is 0 seconds. The maximum is 15 minutes.</p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q1-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q1-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-delay-queues.html\">https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-delay-queues.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Implement application-side delay</strong> - You can customize your application to delay sending messages but it is not a robust solution. You can run into a scenario where your application crashes before sending a message, then that message would be lost.</p>\n\n<p><strong>Use visibility timeout parameter</strong> - Visibility timeout is a period during which Amazon SQS prevents other consumers from receiving and processing a given message. The default visibility timeout for a message is 30 seconds. The minimum is 0 seconds. The maximum is 12 hours. You cannot use visibility timeout to postpone the delivery of new messages to the queue for a few seconds.</p>\n\n<p><strong>Enable LongPolling</strong> - Long polling makes it inexpensive to retrieve messages from your Amazon SQS queue as soon as the messages are available. Long polling helps reduce the cost of using Amazon SQS by eliminating the number of empty responses (when there are no messages available for a ReceiveMessage request) and false empty responses (when messages are available but aren't included in a response). When the wait time for the ReceiveMessage API action is greater than 0, long polling is in effect. The maximum long polling wait time is 20 seconds. You cannot use LongPolling to postpone the delivery of new messages to the queue for a few seconds.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-delay-queues.html\">https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-delay-queues.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Use DelaySeconds parameter</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Amazon Simple Queue Service (SQS) is a fully managed message queuing service that enables you to decouple and scale microservices, distributed systems, and serverless applications. SQS offers two types of message queues. Standard queues offer maximum throughput, best-effort ordering, and at-least-once delivery. SQS FIFO queues are designed to guarantee that messages are processed exactly once, in the exact order that they are sent."
      },
      {
        "answer": "",
        "explanation": "Delay queues let you postpone the delivery of new messages to a queue for several seconds, for example, when your consumer application needs additional time to process messages. If you create a delay queue, any messages that you send to the queue remain invisible to consumers for the duration of the delay period. The default (minimum) delay for a queue is 0 seconds. The maximum is 15 minutes."
      },
      {
        "link": "https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-delay-queues.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Implement application-side delay</strong> - You can customize your application to delay sending messages but it is not a robust solution. You can run into a scenario where your application crashes before sending a message, then that message would be lost."
      },
      {
        "answer": "",
        "explanation": "<strong>Use visibility timeout parameter</strong> - Visibility timeout is a period during which Amazon SQS prevents other consumers from receiving and processing a given message. The default visibility timeout for a message is 30 seconds. The minimum is 0 seconds. The maximum is 12 hours. You cannot use visibility timeout to postpone the delivery of new messages to the queue for a few seconds."
      },
      {
        "answer": "",
        "explanation": "<strong>Enable LongPolling</strong> - Long polling makes it inexpensive to retrieve messages from your Amazon SQS queue as soon as the messages are available. Long polling helps reduce the cost of using Amazon SQS by eliminating the number of empty responses (when there are no messages available for a ReceiveMessage request) and false empty responses (when messages are available but aren't included in a response). When the wait time for the ReceiveMessage API action is greater than 0, long polling is in effect. The maximum long polling wait time is 20 seconds. You cannot use LongPolling to postpone the delivery of new messages to the queue for a few seconds."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-delay-queues.html"
    ]
  },
  {
    "id": 36,
    "question": "<p>You have uploaded a zip file to AWS Lambda that contains code files written in Node.Js. When your function is executed you receive the following output, 'Error: Memory Size: 10,240 MB Max Memory Used'.</p>\n\n<p>Which of the following explains the problem?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Your zip file is corrupt</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Your Lambda function ran out of RAM</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>You have uploaded a zip file larger than 50 MB to AWS Lambda</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>The uncompressed zip file exceeds AWS Lambda limits</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Your Lambda function ran out of RAM</strong></p>\n\n<p>AWS Lambda lets you run code without provisioning or managing servers. You pay only for the compute time you consume.</p>\n\n<p>How Lambda function works:\n<img src=\"https://d1.awsstatic.com/product-marketing/Lambda/Diagrams/product-page-diagram_Lambda-HowItWorks.68a0bcacfcf46fccf04b97f16b686ea44494303f.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://d1.awsstatic.com/product-marketing/Lambda/Diagrams/product-page-diagram_Lambda-HowItWorks.68a0bcacfcf46fccf04b97f16b686ea44494303f.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://aws.amazon.com/lambda/\">https://aws.amazon.com/lambda/</a><p></p>\n\n<p>The maximum amount of memory available to the Lambda function at runtime is 10,240 MB. Your Lambda function was deployed with 10,240 MB of RAM, but it seems your code requested or used more than that, so the Lambda function failed.</p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q27-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q27-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-console.html\">https://docs.aws.amazon.com/lambda/latest/dg/configuration-console.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Your zip file is corrupt</strong> - A memory size error states that Lambda was able to extract so the file is not corrupt</p>\n\n<p><strong>The uncompressed zip file exceeds AWS Lambda limits</strong> - This is not correct as your function was able to execute.</p>\n\n<p><strong>You have uploaded a zip file larger than 50 MB to AWS Lambda</strong> -  This is not correct as your lambda function was able to execute</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-console.html\">https://docs.aws.amazon.com/lambda/latest/dg/configuration-console.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Your Lambda function ran out of RAM</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "AWS Lambda lets you run code without provisioning or managing servers. You pay only for the compute time you consume."
      },
      {
        "image": "https://d1.awsstatic.com/product-marketing/Lambda/Diagrams/product-page-diagram_Lambda-HowItWorks.68a0bcacfcf46fccf04b97f16b686ea44494303f.png",
        "answer": "",
        "explanation": "How Lambda function works:"
      },
      {
        "link": "https://aws.amazon.com/lambda/"
      },
      {
        "answer": "",
        "explanation": "The maximum amount of memory available to the Lambda function at runtime is 10,240 MB. Your Lambda function was deployed with 10,240 MB of RAM, but it seems your code requested or used more than that, so the Lambda function failed."
      },
      {
        "link": "https://docs.aws.amazon.com/lambda/latest/dg/configuration-console.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Your zip file is corrupt</strong> - A memory size error states that Lambda was able to extract so the file is not corrupt"
      },
      {
        "answer": "",
        "explanation": "<strong>The uncompressed zip file exceeds AWS Lambda limits</strong> - This is not correct as your function was able to execute."
      },
      {
        "answer": "",
        "explanation": "<strong>You have uploaded a zip file larger than 50 MB to AWS Lambda</strong> -  This is not correct as your lambda function was able to execute"
      }
    ],
    "references": [
      "https://aws.amazon.com/lambda/",
      "https://docs.aws.amazon.com/lambda/latest/dg/configuration-console.html"
    ]
  },
  {
    "id": 37,
    "question": "<p>You have moved your on-premise infrastructure to AWS and are in the process of configuring an AWS Elastic Beanstalk deployment environment for production, development, and testing. You have configured your production environment to use a rolling deployment to prevent your application from becoming unavailable to users. For the development and testing environment, you would like to deploy quickly and are not concerned about downtime.</p>\n\n<p>Which of the following deployment policies meet your needs?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>All at once</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Rolling</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Immutable</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Rolling with additional batches</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Deployment",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>All at once</strong></p>\n\n<p>This is the quickest deployment method. Suitable if you can accept a short loss of service, and if quick deployments are important to you. With this method, Elastic Beanstalk deploys the new application version to each instance. Then, the web proxy or application server might need to restart. As a result, your application might be unavailable to users (or have low availability) for a short time.</p>\n\n<p>Overview of Elastic Beanstalk Deployment Policies:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q26-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q26-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.deploy-existing-version.html\">https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.deploy-existing-version.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Rolling</strong> - With this method, your application is deployed to your environment one batch of instances at a time. Most bandwidth is retained throughout the deployment. Avoids downtime and minimizes reduced availability, at a cost of a longer deployment time. Suitable if you can't accept any period of completely lost service.</p>\n\n<p><strong>Rolling with additional batches</strong> - With this method, Elastic Beanstalk launches an extra batch of instances, then performs a rolling deployment. Launching the extra batch takes time, and ensures that the same bandwidth is retained throughout the deployment. This policy also avoids any reduced availability, although at a cost of an even longer deployment time compared to the Rolling method. Finally, this option is suitable if you must maintain the same bandwidth throughout the deployment.</p>\n\n<p><strong>Immutable</strong> - A slower deployment method, that ensures your new application version is always deployed to new instances, instead of updating existing instances. It also has the additional advantage of a quick and safe rollback in case the deployment fails. With this method, Elastic Beanstalk performs an immutable update to deploy your application. In an immutable update, a second Auto Scaling group is launched in your environment and the new version serves traffic alongside the old version until the new instances pass health checks.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.deploy-existing-version.html\">https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.deploy-existing-version.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>All at once</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "This is the quickest deployment method. Suitable if you can accept a short loss of service, and if quick deployments are important to you. With this method, Elastic Beanstalk deploys the new application version to each instance. Then, the web proxy or application server might need to restart. As a result, your application might be unavailable to users (or have low availability) for a short time."
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q26-i1.jpg",
        "answer": "",
        "explanation": "Overview of Elastic Beanstalk Deployment Policies:"
      },
      {
        "link": "https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.deploy-existing-version.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Rolling</strong> - With this method, your application is deployed to your environment one batch of instances at a time. Most bandwidth is retained throughout the deployment. Avoids downtime and minimizes reduced availability, at a cost of a longer deployment time. Suitable if you can't accept any period of completely lost service."
      },
      {
        "answer": "",
        "explanation": "<strong>Rolling with additional batches</strong> - With this method, Elastic Beanstalk launches an extra batch of instances, then performs a rolling deployment. Launching the extra batch takes time, and ensures that the same bandwidth is retained throughout the deployment. This policy also avoids any reduced availability, although at a cost of an even longer deployment time compared to the Rolling method. Finally, this option is suitable if you must maintain the same bandwidth throughout the deployment."
      },
      {
        "answer": "",
        "explanation": "<strong>Immutable</strong> - A slower deployment method, that ensures your new application version is always deployed to new instances, instead of updating existing instances. It also has the additional advantage of a quick and safe rollback in case the deployment fails. With this method, Elastic Beanstalk performs an immutable update to deploy your application. In an immutable update, a second Auto Scaling group is launched in your environment and the new version serves traffic alongside the old version until the new instances pass health checks."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.deploy-existing-version.html"
    ]
  },
  {
    "id": 38,
    "question": "<p>You work as a developer doing contract work for the government on AWS gov cloud. Your applications use Amazon Simple Queue Service (SQS) for its message queue service. Due to recent hacking attempts, security measures have become stricter and require you to store data in encrypted queues.</p>\n\n<p>Which of the following steps can you take to meet your requirements without making changes to the existing code?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Enable SQS KMS encryption</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Use Client side encryption</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Use Secrets Manager</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Use the SSL endpoint</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Enable SQS KMS encryption</strong></p>\n\n<p>Server-side encryption (SSE) lets you transmit sensitive data in encrypted queues. SSE protects the contents of messages in queues using keys managed in AWS Key Management Service (AWS KMS).</p>\n\n<p>AWS KMS combines secure, highly available hardware and software to provide a key management system scaled for the cloud. When you use Amazon SQS with AWS KMS, the data keys that encrypt your message data are also encrypted and stored with the data they protect.</p>\n\n<p>You can choose to have SQS encrypt messages stored in both Standard and FIFO queues using an encryption key provided by AWS Key Management Service (KMS).</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Use the SSL endpoint</strong> - The given use-case needs encryption at rest. When using SSL, the data is encrypted during transit, but the data needs to be encrypted at rest as well, so this option is incorrect.</p>\n\n<p><strong>Use Client-side encryption</strong> - For additional security, you can build your application to encrypt messages before they are placed in a message queue but will require a code change, so this option is incorrect.</p>\n\n<p><em>*Use Secrets Manager *</em> - AWS Secrets Manager enables you to easily rotate, manage, and retrieve database credentials, API keys, and other secrets throughout their lifecycle. Users and applications retrieve secrets with a call to Secrets Manager APIs, eliminating the need to hardcode sensitive information in plain text. Secrets Manager offers secret rotation with built-in integration for Amazon RDS, Amazon Redshift, and Amazon DocumentDB. Secrets Manager cannot be used for encrypting data at rest.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html\">https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Enable SQS KMS encryption</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Server-side encryption (SSE) lets you transmit sensitive data in encrypted queues. SSE protects the contents of messages in queues using keys managed in AWS Key Management Service (AWS KMS)."
      },
      {
        "answer": "",
        "explanation": "AWS KMS combines secure, highly available hardware and software to provide a key management system scaled for the cloud. When you use Amazon SQS with AWS KMS, the data keys that encrypt your message data are also encrypted and stored with the data they protect."
      },
      {
        "answer": "",
        "explanation": "You can choose to have SQS encrypt messages stored in both Standard and FIFO queues using an encryption key provided by AWS Key Management Service (KMS)."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Use the SSL endpoint</strong> - The given use-case needs encryption at rest. When using SSL, the data is encrypted during transit, but the data needs to be encrypted at rest as well, so this option is incorrect."
      },
      {
        "answer": "",
        "explanation": "<strong>Use Client-side encryption</strong> - For additional security, you can build your application to encrypt messages before they are placed in a message queue but will require a code change, so this option is incorrect."
      },
      {
        "answer": "",
        "explanation": "<em>*Use Secrets Manager *</em> - AWS Secrets Manager enables you to easily rotate, manage, and retrieve database credentials, API keys, and other secrets throughout their lifecycle. Users and applications retrieve secrets with a call to Secrets Manager APIs, eliminating the need to hardcode sensitive information in plain text. Secrets Manager offers secret rotation with built-in integration for Amazon RDS, Amazon Redshift, and Amazon DocumentDB. Secrets Manager cannot be used for encrypting data at rest."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html"
    ]
  },
  {
    "id": 39,
    "question": "<p>Your company manages hundreds of EC2 instances running on Linux OS. The instances are configured in several Availability Zones in the eu-west-3 region. Your manager has requested to collect system memory metrics on all EC2 instances using a script.</p>\n\n<p>Which of the following solutions will help you collect this data?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use a cron job on the instances that pushes the EC2 RAM statistics as a Custom metric into CloudWatch</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Extract RAM statistics using X-Ray</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Extract RAM statistics from the standard CloudWatch metrics for EC2 instances</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Extract RAM statistics using the instance metadata</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Troubleshooting and Optimization",
    "explanation": "<p>Correct option:</p>\n\n<p>\"Use a cron job on the instances that pushes the EC2 RAM statistics as a Custom metric into CloudWatch\"</p>\n\n<p>The Amazon CloudWatch Monitoring Scripts for Amazon Elastic Compute Cloud (Amazon EC2) Linux-based instances demonstrate how to produce and consume Amazon CloudWatch custom metrics. These Perl scripts comprise a fully functional example that reports memory, swap, and disk space utilization metrics for a Linux instance. You can set a cron schedule for metrics reported to CloudWatch and report memory utilization to CloudWatch every x minutes.</p>\n\n<p>Incorrect options:</p>\n\n<p>\"Extract RAM statistics using the instance metadata\" - Instance metadata is data about your instance that you can use to configure or manage the running instance. Instance metadata is divided into categories, for example, hostname, events, and security groups. The instance metadata can only provide the ID of the RAM disk specified at launch time. So this option is incorrect.</p>\n\n<p>\"Extract RAM statistics from the standard CloudWatch metrics for EC2 instances\" - Amazon EC2 sends metrics to Amazon CloudWatch. By default, each data point covers the 5 minutes that follow the start time of activity for the instance. If you've enabled detailed monitoring, each data point covers the next minute of activity from the start time. The standard CloudWatch metrics don't have any metrics for memory utilization details.</p>\n\n<p>\"Extract RAM statistics using X-Ray\" - AWS X-Ray helps developers analyze and debug production, distributed applications, such as those built using a microservices architecture. With X-Ray, you can understand how your application and its underlying services are performing to identify and troubleshoot the root cause of performance issues and errors. X-Ray provides an end-to-end view of requests as they travel through your application, and shows a map of your application’s underlying components.</p>\n\n<p>How X-Ray Works:\n<img src=\"https://d1.awsstatic.com/Products/product-name/Images/product-page-diagram_AWS-X-Ray_how-it-works.2922edd4bfe011e997dbf32fdf8bd520bcbc85fb.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://d1.awsstatic.com/Products/product-name/Images/product-page-diagram_AWS-X-Ray_how-it-works.2922edd4bfe011e997dbf32fdf8bd520bcbc85fb.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://aws.amazon.com/xray/\">https://aws.amazon.com/xray/</a><p></p>\n\n<p>X-Ray cannot be used to extract RAM statistics for EC2 instances.</p>\n\n<p>For more information visit https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/mon-scripts.html</p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Use a cron job on the instances that pushes the EC2 RAM statistics as a Custom metric into CloudWatch</strong>"
      },
      {
        "answer": "",
        "explanation": "The Amazon CloudWatch Monitoring Scripts for Amazon Elastic Compute Cloud (Amazon EC2) Linux-based instances demonstrate how to produce and consume Amazon CloudWatch custom metrics. These Perl scripts comprise a fully functional example that reports memory, swap, and disk space utilization metrics for a Linux instance. You can set a cron schedule for metrics reported to CloudWatch and report memory utilization to CloudWatch every x minutes."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Extract RAM statistics using the instance metadata</strong> - Instance metadata is data about your instance that you can use to configure or manage the running instance. Instance metadata is divided into categories, for example, hostname, events, and security groups. The instance metadata can only provide the ID of the RAM disk specified at launch time. So this option is incorrect."
      },
      {
        "answer": "",
        "explanation": "<strong>Extract RAM statistics from the standard CloudWatch metrics for EC2 instances</strong> - Amazon EC2 sends metrics to Amazon CloudWatch. By default, each data point covers the 5 minutes that follow the start time of activity for the instance. If you've enabled detailed monitoring, each data point covers the next minute of activity from the start time. The standard CloudWatch metrics don't have any metrics for memory utilization details."
      },
      {
        "answer": "",
        "explanation": "<strong>Extract RAM statistics using X-Ray</strong> - AWS X-Ray helps developers analyze and debug production, distributed applications, such as those built using a microservices architecture. With X-Ray, you can understand how your application and its underlying services are performing to identify and troubleshoot the root cause of performance issues and errors. X-Ray provides an end-to-end view of requests as they travel through your application, and shows a map of your application’s underlying components."
      },
      {
        "image": "https://d1.awsstatic.com/Products/product-name/Images/product-page-diagram_AWS-X-Ray_how-it-works.2922edd4bfe011e997dbf32fdf8bd520bcbc85fb.png",
        "answer": "",
        "explanation": "How X-Ray Works:"
      },
      {
        "link": "https://aws.amazon.com/xray/"
      },
      {
        "answer": "",
        "explanation": "X-Ray cannot be used to extract RAM statistics for EC2 instances."
      },
      {
        "answer": "",
        "explanation": "For more information visit https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/mon-scripts.html"
      }
    ],
    "references": [
      "https://aws.amazon.com/xray/"
    ]
  },
  {
    "id": 40,
    "question": "<p>A data analytics company with its IT infrastructure on the AWS Cloud wants to build and deploy its flagship application as soon as there are any changes to the source code.</p>\n\n<p>As a Developer Associate, which of the following options would you suggest to trigger the deployment? (Select two)</p>",
    "corrects": [
      2,
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Keep the source code in Amazon EFS and start AWS CodePipeline whenever a file is updated</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Keep the source code in an AWS CodeCommit repository and start AWS CodePipeline whenever a change is pushed to the CodeCommit repository</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Keep the source code in an Amazon EBS volume and start AWS CodePipeline whenever there are updates to the source code</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Keep the source code in an Amazon S3 bucket and start AWS CodePipeline whenever a file in the S3 bucket is updated</p>",
        "correct": true
      },
      {
        "id": 5,
        "answer": "<p>Keep the source code in an Amazon S3 bucket and set up AWS CodePipeline to recur at an interval of every 15 minutes</p>",
        "correct": false
      }
    ],
    "multiple": true,
    "domain": "Deployment",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Keep the source code in an AWS CodeCommit repository and start AWS CodePipeline whenever a change is pushed to the CodeCommit repository</strong></p>\n\n<p><strong>Keep the source code in an Amazon S3 bucket and start AWS CodePipeline whenever a file in the S3 bucket is updated</strong></p>\n\n<p>AWS CodePipeline is a fully managed continuous delivery service that helps you automate your release pipelines for fast and reliable application and infrastructure updates. CodePipeline automates the build, test, and deploy phases of your release process every time there is a code change, based on the release model you define.</p>\n\n<p>How CodePipeline Works:\n<img src=\"https://d1.awsstatic.com/Products/product-name/diagrams/product-page-diagram_CodePipeLine.7b8dd19eb6478b7f6f747d936c2f0b0b66757bbf.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://d1.awsstatic.com/Products/product-name/diagrams/product-page-diagram_CodePipeLine.7b8dd19eb6478b7f6f747d936c2f0b0b66757bbf.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://aws.amazon.com/codepipeline/\">https://aws.amazon.com/codepipeline/</a><p></p>\n\n<p>Using change detection methods that you specify, you can make your pipeline start when a change is made to a repository. You can also make your pipeline start on a schedule.</p>\n\n<p>When you use the console to create a pipeline that has a CodeCommit source repository or S3 source bucket, CodePipeline creates an Amazon CloudWatch Events rule that starts your pipeline when the source changes. This is the recommended change detection method.</p>\n\n<p>If you use the AWS CLI to create the pipeline, the change detection method defaults to starting the pipeline by periodically checking the source (CodeCommit, Amazon S3, and GitHub source providers only). AWS recommends that you disable periodic checks and create the rule manually.</p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q23-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q23-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-about-starting.html\">https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-about-starting.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Keep the source code in Amazon EFS and start AWS CodePipeline whenever a file is updated</strong></p>\n\n<p><strong>Keep the source code in an Amazon EBS volume and start AWS CodePipeline whenever there are updates to the source code</strong></p>\n\n<p>Both EFS and EBS are not supported as valid source providers for CodePipeline to check for any changes to the source code, hence these two options are incorrect.</p>\n\n<p><strong>Keep the source code in an Amazon S3 bucket and set up AWS CodePipeline to recur at an interval of every 15 minutes</strong> - As mentioned in the explanation above, although you could have the change detection method start the pipeline by periodically checking the S3 bucket, but this method is inefficient.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-about-starting.html\">https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-about-starting.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Keep the source code in an AWS CodeCommit repository and start AWS CodePipeline whenever a change is pushed to the CodeCommit repository</strong>",
        "explanation": ""
      },
      {
        "answer": "<strong>Keep the source code in an Amazon S3 bucket and start AWS CodePipeline whenever a file in the S3 bucket is updated</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "AWS CodePipeline is a fully managed continuous delivery service that helps you automate your release pipelines for fast and reliable application and infrastructure updates. CodePipeline automates the build, test, and deploy phases of your release process every time there is a code change, based on the release model you define."
      },
      {
        "image": "https://d1.awsstatic.com/Products/product-name/diagrams/product-page-diagram_CodePipeLine.7b8dd19eb6478b7f6f747d936c2f0b0b66757bbf.png",
        "answer": "",
        "explanation": "How CodePipeline Works:"
      },
      {
        "link": "https://aws.amazon.com/codepipeline/"
      },
      {
        "answer": "",
        "explanation": "Using change detection methods that you specify, you can make your pipeline start when a change is made to a repository. You can also make your pipeline start on a schedule."
      },
      {
        "answer": "",
        "explanation": "When you use the console to create a pipeline that has a CodeCommit source repository or S3 source bucket, CodePipeline creates an Amazon CloudWatch Events rule that starts your pipeline when the source changes. This is the recommended change detection method."
      },
      {
        "answer": "",
        "explanation": "If you use the AWS CLI to create the pipeline, the change detection method defaults to starting the pipeline by periodically checking the source (CodeCommit, Amazon S3, and GitHub source providers only). AWS recommends that you disable periodic checks and create the rule manually."
      },
      {
        "link": "https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-about-starting.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "<strong>Keep the source code in Amazon EFS and start AWS CodePipeline whenever a file is updated</strong>",
        "explanation": ""
      },
      {
        "answer": "<strong>Keep the source code in an Amazon EBS volume and start AWS CodePipeline whenever there are updates to the source code</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Both EFS and EBS are not supported as valid source providers for CodePipeline to check for any changes to the source code, hence these two options are incorrect."
      },
      {
        "answer": "",
        "explanation": "<strong>Keep the source code in an Amazon S3 bucket and set up AWS CodePipeline to recur at an interval of every 15 minutes</strong> - As mentioned in the explanation above, although you could have the change detection method start the pipeline by periodically checking the S3 bucket, but this method is inefficient."
      }
    ],
    "references": [
      "https://aws.amazon.com/codepipeline/",
      "https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-about-starting.html"
    ]
  },
  {
    "id": 41,
    "question": "<p>For an application that stores personal health information (PHI) in an encrypted Amazon RDS for MySQL DB instance, a developer wants to improve its performance by caching frequently accessed data and adding the ability to sort or rank the cached datasets.</p>\n\n<p>What is the best approach to meet these requirements subject to the constraint that the PHI stays encrypted at all times?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Store the frequently accessed data in an Amazon ElastiCache for Redis instance with encryption enabled for data in transit and at rest</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Migrate the frequently accessed data to an EC2 Instance Store that has encryption enabled for data in transit and at rest</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Store the frequently accessed data in an Amazon ElastiCache for Memcached instance with encryption enabled for data in transit and at rest</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Migrate the frequently accessed data to DynamoDB Accelerator (DAX) that has encryption enabled for data in transit and at rest</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Store the frequently accessed data in an Amazon ElastiCache for Redis instance with encryption enabled for data in transit and at rest</strong></p>\n\n<p>Amazon ElastiCache for Redis is a Redis-compatible in-memory data structure service that can be used as a data store or cache. It delivers the ease of use and power of Redis along with the availability, reliability, scalability, security, and performance suitable for the most demanding applications.</p>\n\n<p>In addition to strings, Redis supports lists, sets, sorted sets, hashes, bit arrays, and hyperlog logs. Applications can use these more advanced data structures to support a variety of use cases. For example, you can use Redis Sorted Sets to easily implement a game leaderboard that keeps a list of players sorted by their rank.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Store the frequently accessed data in an Amazon ElastiCache for Memcached instance with encryption enabled for data in transit and at rest</strong> - Memcached is designed for simplicity and it does not offer support for advanced data structures and operations such as sort or rank.</p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q60-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q60-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://aws.amazon.com/elasticache/redis-vs-memcached/\">https://aws.amazon.com/elasticache/redis-vs-memcached/</a><p></p>\n\n<p><strong>Migrate the frequently accessed data to DynamoDB Accelerator (DAX) that has encryption enabled for data in transit and at rest</strong> - DAX is a DynamoDB-compatible caching service that enables you to benefit from fast in-memory performance for demanding applications. DAX cannot be used with RDS MySQL as a caching service, so this option is incorrect.</p>\n\n<p><strong>Migrate the frequently accessed data to an EC2 Instance Store that has encryption enabled for data in transit and at rest</strong> - This option is incorrect. EC2 instance store provides temporary block-level storage for your instance. This storage is located on disks that are physically attached to the host computer. Instance store is ideal for the temporary storage of information that changes frequently, such as buffers, caches, scratch data, and other temporary content. It can also be used to store temporary data that you replicate across a fleet of instances, such as a load-balanced pool of web servers.</p>\n\n<p>References:</p>\n\n<p><a href=\"https://aws.amazon.com/elasticache/redis/\">https://aws.amazon.com/elasticache/redis/</a></p>\n\n<p><a href=\"https://aws.amazon.com/elasticache/redis-vs-memcached/\">https://aws.amazon.com/elasticache/redis-vs-memcached/</a></p>\n\n<p><a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html\">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Store the frequently accessed data in an Amazon ElastiCache for Redis instance with encryption enabled for data in transit and at rest</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Amazon ElastiCache for Redis is a Redis-compatible in-memory data structure service that can be used as a data store or cache. It delivers the ease of use and power of Redis along with the availability, reliability, scalability, security, and performance suitable for the most demanding applications."
      },
      {
        "answer": "",
        "explanation": "In addition to strings, Redis supports lists, sets, sorted sets, hashes, bit arrays, and hyperlog logs. Applications can use these more advanced data structures to support a variety of use cases. For example, you can use Redis Sorted Sets to easily implement a game leaderboard that keeps a list of players sorted by their rank."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Store the frequently accessed data in an Amazon ElastiCache for Memcached instance with encryption enabled for data in transit and at rest</strong> - Memcached is designed for simplicity and it does not offer support for advanced data structures and operations such as sort or rank."
      },
      {
        "link": "https://aws.amazon.com/elasticache/redis-vs-memcached/"
      },
      {
        "answer": "",
        "explanation": "<strong>Migrate the frequently accessed data to DynamoDB Accelerator (DAX) that has encryption enabled for data in transit and at rest</strong> - DAX is a DynamoDB-compatible caching service that enables you to benefit from fast in-memory performance for demanding applications. DAX cannot be used with RDS MySQL as a caching service, so this option is incorrect."
      },
      {
        "answer": "",
        "explanation": "<strong>Migrate the frequently accessed data to an EC2 Instance Store that has encryption enabled for data in transit and at rest</strong> - This option is incorrect. EC2 instance store provides temporary block-level storage for your instance. This storage is located on disks that are physically attached to the host computer. Instance store is ideal for the temporary storage of information that changes frequently, such as buffers, caches, scratch data, and other temporary content. It can also be used to store temporary data that you replicate across a fleet of instances, such as a load-balanced pool of web servers."
      }
    ],
    "references": [
      "https://aws.amazon.com/elasticache/redis-vs-memcached/",
      "https://aws.amazon.com/elasticache/redis/",
      "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html"
    ]
  },
  {
    "id": 42,
    "question": "<p>An e-commerce company has implemented AWS CodeDeploy as part of its AWS cloud CI/CD strategy. The company has configured automatic rollbacks while deploying a new version of its flagship application to Amazon EC2.</p>\n\n<p>What occurs if the deployment of the new version fails?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>CodeDeploy switches the Route 53 alias records back to the known good green deployment and terminates the failed blue deployment</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>A new deployment of the last known working version of the application is deployed with a new deployment ID</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>The last known working deployment is automatically restored using the snapshot stored in Amazon S3</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>AWS CodePipeline promotes the most recent working deployment with a SUCCEEDED status to production</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Deployment",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>A new deployment of the last known working version of the application is deployed with a new deployment ID</strong></p>\n\n<p>AWS CodeDeploy is a service that automates code deployments to any instance, including Amazon EC2 instances and instances running on-premises. AWS CodeDeploy makes it easier for you to rapidly release new features, helps you avoid downtime during deployment, and handles the complexity of updating your applications.</p>\n\n<p>CodeDeploy rolls back deployments by redeploying a previously deployed revision of an application as a new deployment. These rolled-back deployments are technically new deployments, with new deployment IDs, rather than restored versions of a previous deployment.</p>\n\n<p>To roll back an application to a previous revision, you just need to deploy that revision. AWS CodeDeploy keeps track of the files that were copied for the current revision and removes them before starting a new deployment, so there is no difference between redeploy and rollback. However, you need to make sure that the previous revisions are available for rollback.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>The last known working deployment is automatically restored using the snapshot stored in Amazon S3</strong> - CodeDeploy deployment does not have a snapshot stored on S3, so this option is incorrect.</p>\n\n<p><strong>AWS CodePipeline promotes the most recent working deployment with a SUCCEEDED status to production</strong> - The use-case does not talk about using CodePipeline, so this option just acts as a distractor.</p>\n\n<p><strong>CodeDeploy switches the Route 53 alias records back to the known good green deployment and terminates the failed blue deployment</strong> - The use-case does not talk about the blue/green deployment, so this option has just been added as a distractor.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/deployments-rollback-and-redeploy.html\">https://docs.aws.amazon.com/codedeploy/latest/userguide/deployments-rollback-and-redeploy.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>A new deployment of the last known working version of the application is deployed with a new deployment ID</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "AWS CodeDeploy is a service that automates code deployments to any instance, including Amazon EC2 instances and instances running on-premises. AWS CodeDeploy makes it easier for you to rapidly release new features, helps you avoid downtime during deployment, and handles the complexity of updating your applications."
      },
      {
        "answer": "",
        "explanation": "CodeDeploy rolls back deployments by redeploying a previously deployed revision of an application as a new deployment. These rolled-back deployments are technically new deployments, with new deployment IDs, rather than restored versions of a previous deployment."
      },
      {
        "answer": "",
        "explanation": "To roll back an application to a previous revision, you just need to deploy that revision. AWS CodeDeploy keeps track of the files that were copied for the current revision and removes them before starting a new deployment, so there is no difference between redeploy and rollback. However, you need to make sure that the previous revisions are available for rollback."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>The last known working deployment is automatically restored using the snapshot stored in Amazon S3</strong> - CodeDeploy deployment does not have a snapshot stored on S3, so this option is incorrect."
      },
      {
        "answer": "",
        "explanation": "<strong>AWS CodePipeline promotes the most recent working deployment with a SUCCEEDED status to production</strong> - The use-case does not talk about using CodePipeline, so this option just acts as a distractor."
      },
      {
        "answer": "",
        "explanation": "<strong>CodeDeploy switches the Route 53 alias records back to the known good green deployment and terminates the failed blue deployment</strong> - The use-case does not talk about the blue/green deployment, so this option has just been added as a distractor."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/codedeploy/latest/userguide/deployments-rollback-and-redeploy.html"
    ]
  },
  {
    "id": 43,
    "question": "<p>You are getting ready for an event to show off your Alexa skill written in JavaScript. As you are testing your voice activation commands you find that some intents are not invoking as they should and you are struggling to figure out what is happening. You included the following code <code>console.log(JSON.stringify(this.event))</code> in hopes of getting more details about the request to your Alexa skill.</p>\n\n<p>You would like the logs stored in an Amazon Simple Storage Service (S3) bucket named <code>MyAlexaLog</code>. How do you achieve this?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use CloudWatch integration feature with Lambda</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Use CloudWatch integration feature with Glue</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Use CloudWatch integration feature with S3</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Use CloudWatch integration feature with Kinesis</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Use CloudWatch integration feature with S3</strong></p>\n\n<p>You can export log data from your CloudWatch log groups to an Amazon S3 bucket and use this data in custom processing and analysis, or to load onto other systems.</p>\n\n<p>Exporting CloudWatch Log Data to Amazon S3:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q44-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q44-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/S3Export.html\">https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/S3Export.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Use CloudWatch integration feature with Kinesis</strong> - You can use both to do custom processing or analysis but with S3 you don't have to process anything. Instead, you configure the CloudWatch settings to send logs to S3.</p>\n\n<p><strong>Use CloudWatch integration feature with Lambda</strong> - You can use both to do custom processing or analysis but with S3 you don't have to process anything. Instead, you configure the CloudWatch settings to send logs to S3.</p>\n\n<p><strong>Use CloudWatch integration feature with Glue</strong> - AWS Glue is a fully managed extract, transform, and load (ETL) service that makes it easy for customers to prepare and load their data for analytics. Glue is not the right fit for the given use-case.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/S3Export.html\">https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/S3Export.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Use CloudWatch integration feature with S3</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "You can export log data from your CloudWatch log groups to an Amazon S3 bucket and use this data in custom processing and analysis, or to load onto other systems."
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q44-i1.jpg",
        "answer": "",
        "explanation": "Exporting CloudWatch Log Data to Amazon S3:"
      },
      {
        "link": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/S3Export.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Use CloudWatch integration feature with Kinesis</strong> - You can use both to do custom processing or analysis but with S3 you don't have to process anything. Instead, you configure the CloudWatch settings to send logs to S3."
      },
      {
        "answer": "",
        "explanation": "<strong>Use CloudWatch integration feature with Lambda</strong> - You can use both to do custom processing or analysis but with S3 you don't have to process anything. Instead, you configure the CloudWatch settings to send logs to S3."
      },
      {
        "answer": "",
        "explanation": "<strong>Use CloudWatch integration feature with Glue</strong> - AWS Glue is a fully managed extract, transform, and load (ETL) service that makes it easy for customers to prepare and load their data for analytics. Glue is not the right fit for the given use-case."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/S3Export.html"
    ]
  },
  {
    "id": 44,
    "question": "<p>A development team had enabled and configured CloudTrail for all the Amazon S3 buckets used in a project. The project manager owns all the S3 buckets used in the project. However, the manager noticed that he did not receive any object-level API access logs when the data was read by another AWS account.</p>\n\n<p>What could be the reason for this behavior/error?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>The meta-data of the bucket is in an invalid state and needs to be corrected by the bucket owner from AWS console to fix the issue</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>CloudTrail always delivers object-level API access logs to the requester and not to object owner</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>CloudTrail needs to be configured on both the AWS accounts for receiving the access logs in cross-account access</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>The bucket owner also needs to be object owner to get the object access logs</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "Security",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>The bucket owner also needs to be object owner to get the object access logs</strong></p>\n\n<p>If the bucket owner is also the object owner, the bucket owner gets the object access logs. Otherwise, the bucket owner must get permissions, through the object ACL, for the same object API to get the same object-access API logs.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>CloudTrail always delivers object-level API access logs to the requester and not to object owner</strong> - CloudTrail always delivers object-level API access logs to the requester. In addition, CloudTrail also delivers the same logs to the bucket owner only if the bucket owner has permissions for the same API actions on that object.</p>\n\n<p><strong>CloudTrail needs to be configured on both the AWS accounts for receiving the access logs in cross-account access</strong></p>\n\n<p><strong>The meta-data of the bucket is in an invalid state and needs to be corrected by the bucket owner from AWS console to fix the issue</strong></p>\n\n<p>These two options are incorrect and are given only as distractors.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/cloudtrail-logging-s3-info.html#cloudtrail-object-level-crossaccount\">https://docs.aws.amazon.com/AmazonS3/latest/userguide/cloudtrail-logging-s3-info.html#cloudtrail-object-level-crossaccount</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>The bucket owner also needs to be object owner to get the object access logs</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "If the bucket owner is also the object owner, the bucket owner gets the object access logs. Otherwise, the bucket owner must get permissions, through the object ACL, for the same object API to get the same object-access API logs."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>CloudTrail always delivers object-level API access logs to the requester and not to object owner</strong> - CloudTrail always delivers object-level API access logs to the requester. In addition, CloudTrail also delivers the same logs to the bucket owner only if the bucket owner has permissions for the same API actions on that object."
      },
      {
        "answer": "<strong>CloudTrail needs to be configured on both the AWS accounts for receiving the access logs in cross-account access</strong>",
        "explanation": ""
      },
      {
        "answer": "<strong>The meta-data of the bucket is in an invalid state and needs to be corrected by the bucket owner from AWS console to fix the issue</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "These two options are incorrect and are given only as distractors."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/AmazonS3/latest/userguide/cloudtrail-logging-s3-info.html#cloudtrail-object-level-crossaccount"
    ]
  },
  {
    "id": 45,
    "question": "<p>A user has an IAM policy as well as an Amazon SQS policy that apply to his account. The IAM policy grants his account permission for the <code>ReceiveMessage</code> action on <code>example_queue</code>, whereas the Amazon SQS policy gives his account permission for the <code>SendMessage</code> action on the same queue.</p>\n\n<p>Considering the permissions above, which of the following options are correct? (Select two)</p>",
    "corrects": [
      3,
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>If the user sends a <code>SendMessage</code> request to <code>example_queue</code>, the IAM policy will deny this action</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Either of IAM policies or Amazon SQS policies should be used to grant permissions. Both cannot be used together</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>The user can send a <code>ReceiveMessage</code> request to <code>example_queue</code>, the IAM policy allows this action</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>If you add a policy that denies the user access to all actions for the queue, the policy will override the other two policies and the user will not have access to <code>example_queue</code></p>",
        "correct": true
      },
      {
        "id": 5,
        "answer": "<p>Adding only an IAM policy to deny the user of all actions on the queue is not enough. The SQS policy should also explicitly deny all action</p>",
        "correct": false
      }
    ],
    "multiple": true,
    "domain": "Troubleshooting and Optimization",
    "explanation": "<p>Correct options:</p>\n\n<p><strong>The user can send a <code>ReceiveMessage</code> request to <code>example_queue</code>, the IAM policy allows this action</strong></p>\n\n<p>The user has both an IAM policy and an Amazon SQS policy that apply to his account. The IAM policy grants his account permission for the <code>ReceiveMessage</code> action on <code>example_queue</code>, whereas the Amazon SQS policy gives his account permission for the <code>SendMessage</code> action on the same queue.</p>\n\n<p>How IAM policy and SQS policy work in tandem:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt6-q34-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt6-q34-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-using-identity-based-policies.html\">https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-using-identity-based-policies.html</a><p></p>\n\n<p><strong>If you add a policy that denies the user access to all actions for the queue, the policy will override the other two policies and the user will not have access to <code>example_queue</code></strong></p>\n\n<p>To remove the user's full access to the queue, the easiest thing to do is to add a policy that denies him access to all actions for the queue. This policy overrides the other two because an explicit deny always overrides an allow.</p>\n\n<p>You can also add an additional statement to the Amazon SQS policy that denies the user any type of access to the queue. It has the same effect as adding an IAM policy that denies the user access to the queue.</p>\n\n<p>How IAM policy and SQS policy work in tandem:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt6-q34-i2.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt6-q34-i2.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-using-identity-based-policies.html\">https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-using-identity-based-policies.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>If the user sends a <code>SendMessage</code> request to <code>example_queue</code>, the IAM policy will deny this action</strong> - If the user sends a <code>SendMessage</code> request to <code>example_queue</code>, the Amazon SQS policy allows the action. The IAM policy has no explicit deny on this action, so it plays no part.</p>\n\n<p><strong>Either of IAM policies or Amazon SQS policies should be used to grant permissions. Both cannot be used together</strong> - There are two ways to give your users permissions to your Amazon SQS resources: using the Amazon SQS policy system and using the IAM policy system. You can use one or the other, or both. For the most part, you can achieve the same result with either one.</p>\n\n<p><strong>Adding only an IAM policy to deny the user of all actions on the queue is not enough. The SQS policy should also explicitly deny all action</strong> - The user can be denied access using any one of the policies. Explicit deny in any policy will override all other allow actions defined using either of the policies.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-using-identity-based-policies.html\">https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-using-identity-based-policies.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>The user can send a <code>ReceiveMessage</code> request to <code>example_queue</code>, the IAM policy allows this action</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "The user has both an IAM policy and an Amazon SQS policy that apply to his account. The IAM policy grants his account permission for the <code>ReceiveMessage</code> action on <code>example_queue</code>, whereas the Amazon SQS policy gives his account permission for the <code>SendMessage</code> action on the same queue."
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt6-q34-i1.jpg",
        "answer": "",
        "explanation": "How IAM policy and SQS policy work in tandem:"
      },
      {
        "link": "https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-using-identity-based-policies.html"
      },
      {
        "answer": "<strong>If you add a policy that denies the user access to all actions for the queue, the policy will override the other two policies and the user will not have access to <code>example_queue</code></strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "To remove the user's full access to the queue, the easiest thing to do is to add a policy that denies him access to all actions for the queue. This policy overrides the other two because an explicit deny always overrides an allow."
      },
      {
        "answer": "",
        "explanation": "You can also add an additional statement to the Amazon SQS policy that denies the user any type of access to the queue. It has the same effect as adding an IAM policy that denies the user access to the queue."
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt6-q34-i2.jpg",
        "answer": "",
        "explanation": "How IAM policy and SQS policy work in tandem:"
      },
      {
        "link": "https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-using-identity-based-policies.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>If the user sends a <code>SendMessage</code> request to <code>example_queue</code>, the IAM policy will deny this action</strong> - If the user sends a <code>SendMessage</code> request to <code>example_queue</code>, the Amazon SQS policy allows the action. The IAM policy has no explicit deny on this action, so it plays no part."
      },
      {
        "answer": "",
        "explanation": "<strong>Either of IAM policies or Amazon SQS policies should be used to grant permissions. Both cannot be used together</strong> - There are two ways to give your users permissions to your Amazon SQS resources: using the Amazon SQS policy system and using the IAM policy system. You can use one or the other, or both. For the most part, you can achieve the same result with either one."
      },
      {
        "answer": "",
        "explanation": "<strong>Adding only an IAM policy to deny the user of all actions on the queue is not enough. The SQS policy should also explicitly deny all action</strong> - The user can be denied access using any one of the policies. Explicit deny in any policy will override all other allow actions defined using either of the policies."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-using-identity-based-policies.html"
    ]
  },
  {
    "id": 46,
    "question": "<p>A company wants to add geospatial capabilities to the cache layer, along with query capabilities and an ability to horizontally scale. The company uses Amazon RDS as the database tier.</p>\n\n<p>Which solution is optimal for this use-case?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use CloudFront caching to cater to demands of increasing workloads</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Leverage the capabilities offered by ElastiCache for Redis with cluster mode disabled</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Migrate to Amazon DynamoDB to utilize the automatically integrated DynamoDB Accelerator (DAX) along with query capability features</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Leverage the capabilities offered by ElastiCache for Redis with cluster mode enabled</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "Troubleshooting and Optimization",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Leverage the capabilities offered by ElastiCache for Redis with cluster mode enabled</strong></p>\n\n<p>You can use Amazon ElastiCache to accelerate your high volume application workloads by caching your data in-memory providing sub-millisecond data retrieval performance. When used in conjunction with any database including Amazon RDS or Amazon DynamoDB, ElastiCache can alleviate the pressure associated with heavy request loads, increase overall application performance and reduce costs associated with scaling for throughput on other databases.</p>\n\n<p>Amazon ElastiCache makes it easy to deploy and manage a highly available and scalable in-memory data store in the cloud. Among the open source in-memory engines available for use with ElastiCache is Redis, which added powerful geospatial capabilities in its newer versions.</p>\n\n<p>You can leverage ElastiCache for Redis with cluster mode enabled to enhance reliability and availability with little change to your existing workload. Cluster Mode comes with the primary benefit of horizontal scaling up and down of your Redis cluster, with almost zero impact on the performance of the cluster.</p>\n\n<p>Enabling Cluster Mode provides a number of additional benefits in scaling your cluster. In short, it allows you to scale in or out the number of shards (horizontal scaling) versus scaling up or down the node type (vertical scaling). This means that Cluster Mode can scale to very large amounts of storage (potentially 100s of terabytes) across up to 90 shards, whereas a single node can only store as much data in memory as the instance type has capacity for.</p>\n\n<p>Cluster Mode also allows for more flexibility when designing new workloads with unknown storage requirements or heavy write activity. In a read-heavy workload, one can scale a single shard by adding read replicas, up to five, but a write-heavy workload can benefit from additional write endpoints when cluster mode is enabled.</p>\n\n<p>Geospatial on Amazon ElastiCache for Redis:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt6-q38-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt6-q38-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://aws.amazon.com/blogs/database/work-with-cluster-mode-on-amazon-elasticache-for-redis/\">https://aws.amazon.com/blogs/database/work-with-cluster-mode-on-amazon-elasticache-for-redis/</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Leverage the capabilities offered by ElastiCache for Redis with cluster mode disabled</strong> - For a production workload, you should consider using a configuration that includes replication to enhance the protection of your data. Also, only vertical scaling is possible when cluster mode is disabled. The use case mentions horizontal scaling as a requirement, hence disabling cluster mode is not an option.</p>\n\n<p><strong>Use CloudFront caching to cater to demands of increasing workloads</strong> - One of the purposes of using CloudFront is to reduce the number of requests that your origin server must respond to directly. With CloudFront caching, more objects are served from CloudFront edge locations, which are closer to your users. This reduces the load on your origin server and reduces latency. However, the use case mentions that in-memory caching is needed for enhancing the performance of the application. So, this option is incorrect.</p>\n\n<p><strong>Migrate to Amazon DynamoDB to utilize the automatically integrated DynamoDB Accelerator (DAX) along with query capability features</strong> - Amazon DynamoDB Accelerator (DAX) is a fully managed, highly available, in-memory cache for DynamoDB that delivers up to a 10x performance improvement – from milliseconds to microseconds – even at millions of requests per second. Database migration is a more elaborate effort compared to implementing and optimizing the caching layer.</p>\n\n<p>References:</p>\n\n<p><a href=\"https://aws.amazon.com/blogs/database/work-with-cluster-mode-on-amazon-elasticache-for-redis/\">https://aws.amazon.com/blogs/database/work-with-cluster-mode-on-amazon-elasticache-for-redis/</a></p>\n\n<p><a href=\"https://aws.amazon.com/blogs/database/amazon-elasticache-utilizing-redis-geospatial-capabilities/\">https://aws.amazon.com/blogs/database/amazon-elasticache-utilizing-redis-geospatial-capabilities/</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Leverage the capabilities offered by ElastiCache for Redis with cluster mode enabled</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "You can use Amazon ElastiCache to accelerate your high volume application workloads by caching your data in-memory providing sub-millisecond data retrieval performance. When used in conjunction with any database including Amazon RDS or Amazon DynamoDB, ElastiCache can alleviate the pressure associated with heavy request loads, increase overall application performance and reduce costs associated with scaling for throughput on other databases."
      },
      {
        "answer": "",
        "explanation": "Amazon ElastiCache makes it easy to deploy and manage a highly available and scalable in-memory data store in the cloud. Among the open source in-memory engines available for use with ElastiCache is Redis, which added powerful geospatial capabilities in its newer versions."
      },
      {
        "answer": "",
        "explanation": "You can leverage ElastiCache for Redis with cluster mode enabled to enhance reliability and availability with little change to your existing workload. Cluster Mode comes with the primary benefit of horizontal scaling up and down of your Redis cluster, with almost zero impact on the performance of the cluster."
      },
      {
        "answer": "",
        "explanation": "Enabling Cluster Mode provides a number of additional benefits in scaling your cluster. In short, it allows you to scale in or out the number of shards (horizontal scaling) versus scaling up or down the node type (vertical scaling). This means that Cluster Mode can scale to very large amounts of storage (potentially 100s of terabytes) across up to 90 shards, whereas a single node can only store as much data in memory as the instance type has capacity for."
      },
      {
        "answer": "",
        "explanation": "Cluster Mode also allows for more flexibility when designing new workloads with unknown storage requirements or heavy write activity. In a read-heavy workload, one can scale a single shard by adding read replicas, up to five, but a write-heavy workload can benefit from additional write endpoints when cluster mode is enabled."
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt6-q38-i1.jpg",
        "answer": "",
        "explanation": "Geospatial on Amazon ElastiCache for Redis:"
      },
      {
        "link": "https://aws.amazon.com/blogs/database/work-with-cluster-mode-on-amazon-elasticache-for-redis/"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Leverage the capabilities offered by ElastiCache for Redis with cluster mode disabled</strong> - For a production workload, you should consider using a configuration that includes replication to enhance the protection of your data. Also, only vertical scaling is possible when cluster mode is disabled. The use case mentions horizontal scaling as a requirement, hence disabling cluster mode is not an option."
      },
      {
        "answer": "",
        "explanation": "<strong>Use CloudFront caching to cater to demands of increasing workloads</strong> - One of the purposes of using CloudFront is to reduce the number of requests that your origin server must respond to directly. With CloudFront caching, more objects are served from CloudFront edge locations, which are closer to your users. This reduces the load on your origin server and reduces latency. However, the use case mentions that in-memory caching is needed for enhancing the performance of the application. So, this option is incorrect."
      },
      {
        "answer": "",
        "explanation": "<strong>Migrate to Amazon DynamoDB to utilize the automatically integrated DynamoDB Accelerator (DAX) along with query capability features</strong> - Amazon DynamoDB Accelerator (DAX) is a fully managed, highly available, in-memory cache for DynamoDB that delivers up to a 10x performance improvement – from milliseconds to microseconds – even at millions of requests per second. Database migration is a more elaborate effort compared to implementing and optimizing the caching layer."
      }
    ],
    "references": [
      "https://aws.amazon.com/blogs/database/work-with-cluster-mode-on-amazon-elasticache-for-redis/",
      "https://aws.amazon.com/blogs/database/amazon-elasticache-utilizing-redis-geospatial-capabilities/"
    ]
  },
  {
    "id": 47,
    "question": "<p>A communication platform serves millions of customers and deploys features in a production environment on AWS via CodeDeploy. You are reviewing scripts for the deployment process located in the AppSpec file.</p>\n\n<p>Which of the following options lists the correct order of lifecycle events?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>BeforeInstall =&gt; ApplicationStart =&gt; DownloadBundle =&gt; ValidateService</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>ValidateService =&gt; BeforeInstall =&gt;DownloadBundle =&gt; ApplicationStart</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>DownloadBundle =&gt; BeforeInstall =&gt; ApplicationStart =&gt; ValidateService</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>BeforeInstall =&gt; ValidateService =&gt;DownloadBundle =&gt; ApplicationStart</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Deployment",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>DownloadBundle =&gt; BeforeInstall =&gt; ApplicationStart =&gt; ValidateService</strong></p>\n\n<p>AWS CodeDeploy is a fully managed deployment service that automates software deployments to a variety of compute services such as Amazon EC2, AWS Fargate, AWS Lambda, and your on-premises servers. AWS CodeDeploy makes it easier for you to rapidly release new features, helps you avoid downtime during application deployment, and handles the complexity of updating your applications.</p>\n\n<p>You can specify one or more scripts to run in a hook. Each hook for a lifecycle event is specified with a string on a separate line.</p>\n\n<p>Please review the correct order of lifecycle events:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q2-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q2-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html#reference-appspec-file-structure-hooks-run-order\">https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html#reference-appspec-file-structure-hooks-run-order</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>BeforeInstall =&gt; ApplicationStart =&gt; DownloadBundle =&gt; ValidateService</strong></p>\n\n<p><strong>ValidateService =&gt; BeforeInstall =&gt;DownloadBundle =&gt; ApplicationStart</strong></p>\n\n<p><strong>BeforeInstall =&gt; ValidateService =&gt;DownloadBundle =&gt; ApplicationStart</strong></p>\n\n<p>These three options contradict the details provided in the explanation above, so these options are not correct.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html#reference-appspec-file-structure-hooks-run-order\">https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html#reference-appspec-file-structure-hooks-run-order</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>DownloadBundle =&gt; BeforeInstall =&gt; ApplicationStart =&gt; ValidateService</strong>"
      },
      {
        "answer": "",
        "explanation": "AWS CodeDeploy is a fully managed deployment service that automates software deployments to a variety of compute services such as Amazon EC2, AWS Fargate, AWS Lambda, and your on-premises servers. AWS CodeDeploy makes it easier for you to rapidly release new features, helps you avoid downtime during application deployment, and handles the complexity of updating your applications."
      },
      {
        "answer": "",
        "explanation": "You can specify one or more scripts to run in a hook. Each hook for a lifecycle event is specified with a string on a separate line."
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q2-i1.jpg",
        "answer": "",
        "explanation": "Please review the correct order of lifecycle events:"
      },
      {
        "link": "https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html#reference-appspec-file-structure-hooks-run-order"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>BeforeInstall =&gt; ApplicationStart =&gt; DownloadBundle =&gt; ValidateService</strong>"
      },
      {
        "answer": "",
        "explanation": "<strong>ValidateService =&gt; BeforeInstall =&gt;DownloadBundle =&gt; ApplicationStart</strong>"
      },
      {
        "answer": "",
        "explanation": "<strong>BeforeInstall =&gt; ValidateService =&gt;DownloadBundle =&gt; ApplicationStart</strong>"
      },
      {
        "answer": "",
        "explanation": "These three options contradict the details provided in the explanation above, so these options are not correct."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html#reference-appspec-file-structure-hooks-run-order"
    ]
  },
  {
    "id": 48,
    "question": "<p>You are assigned as the new project lead for a web application that processes orders for customers. You want to integrate event-driven processing anytime data is modified or deleted and use a serverless approach using AWS Lambda for processing stream events.</p>\n\n<p>Which of the following databases should you choose from?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>RDS</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>ElastiCache</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Kinesis</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>DynamoDB</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>DynamoDB</strong></p>\n\n<p>A DynamoDB stream is an ordered flow of information about changes to items in a DynamoDB table. When you enable a stream on a table, DynamoDB Streams captures a time-ordered sequence of item-level modifications in any DynamoDB table, and stores this information in a log for up to 24 hours. Applications can access this log and view the data items as they appeared before and after they were modified, in near real-time.</p>\n\n<p>Whenever an application creates, updates, or deletes items in the table, DynamoDB Streams writes a stream record with the primary key attributes of the items that were modified.</p>\n\n<p>DynamoDB Streams Overview:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q3-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q3-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>RDS</strong> - By itself, RDS cannot be used to stream events like DynamoDB, so this option is ruled out. However, you can use Amazon Kinesis for streaming data from RDS.</p>\n\n<p>Please refer to this excellent blog for more details on using Kinesis for streaming data from RDS:\n<a href=\"https://aws.amazon.com/blogs/database/streaming-changes-in-a-database-with-amazon-kinesis/\">https://aws.amazon.com/blogs/database/streaming-changes-in-a-database-with-amazon-kinesis/</a></p>\n\n<p><strong>ElastiCache</strong> - ElastiCache works as an in-memory data store and cache, it cannot be used to stream data like DynamoDB.</p>\n\n<p><strong>Kinesis</strong> - Kinesis is not a database, so this option is ruled out.</p>\n\n<p>Amazon Kinesis Data Streams enables you to build custom applications that process or analyze streaming data for specialized needs. You can continuously add various types of data such as clickstreams, application logs, and social media to an Amazon Kinesis data stream from hundreds of thousands of sources.</p>\n\n<p>How Kinesis Data Streams Work\n<img src=\"https://d1.awsstatic.com/Products/product-name/diagrams/product-page-diagram_Amazon-Kinesis-Data-Streams.074de94302fd60948e1ad070e425eeda73d350e7.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://d1.awsstatic.com/Products/product-name/diagrams/product-page-diagram_Amazon-Kinesis-Data-Streams.074de94302fd60948e1ad070e425eeda73d350e7.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://aws.amazon.com/kinesis/data-streams/\">https://aws.amazon.com/kinesis/data-streams/</a><p></p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>DynamoDB</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "A DynamoDB stream is an ordered flow of information about changes to items in a DynamoDB table. When you enable a stream on a table, DynamoDB Streams captures a time-ordered sequence of item-level modifications in any DynamoDB table, and stores this information in a log for up to 24 hours. Applications can access this log and view the data items as they appeared before and after they were modified, in near real-time."
      },
      {
        "answer": "",
        "explanation": "Whenever an application creates, updates, or deletes items in the table, DynamoDB Streams writes a stream record with the primary key attributes of the items that were modified."
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q3-i1.jpg",
        "answer": "",
        "explanation": "DynamoDB Streams Overview:"
      },
      {
        "link": "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>RDS</strong> - By itself, RDS cannot be used to stream events like DynamoDB, so this option is ruled out. However, you can use Amazon Kinesis for streaming data from RDS."
      },
      {
        "link": "https://aws.amazon.com/blogs/database/streaming-changes-in-a-database-with-amazon-kinesis/",
        "answer": "",
        "explanation": "Please refer to this excellent blog for more details on using Kinesis for streaming data from RDS:\n<a href=\"https://aws.amazon.com/blogs/database/streaming-changes-in-a-database-with-amazon-kinesis/\">https://aws.amazon.com/blogs/database/streaming-changes-in-a-database-with-amazon-kinesis/</a>"
      },
      {
        "answer": "",
        "explanation": "<strong>ElastiCache</strong> - ElastiCache works as an in-memory data store and cache, it cannot be used to stream data like DynamoDB."
      },
      {
        "answer": "",
        "explanation": "<strong>Kinesis</strong> - Kinesis is not a database, so this option is ruled out."
      },
      {
        "answer": "",
        "explanation": "Amazon Kinesis Data Streams enables you to build custom applications that process or analyze streaming data for specialized needs. You can continuously add various types of data such as clickstreams, application logs, and social media to an Amazon Kinesis data stream from hundreds of thousands of sources."
      },
      {
        "image": "https://d1.awsstatic.com/Products/product-name/diagrams/product-page-diagram_Amazon-Kinesis-Data-Streams.074de94302fd60948e1ad070e425eeda73d350e7.png",
        "answer": "",
        "explanation": "How Kinesis Data Streams Work"
      },
      {
        "link": "https://aws.amazon.com/kinesis/data-streams/"
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html",
      "https://aws.amazon.com/blogs/database/streaming-changes-in-a-database-with-amazon-kinesis/",
      "https://aws.amazon.com/kinesis/data-streams/"
    ]
  },
  {
    "id": 49,
    "question": "<p>DevOps engineers are developing an order processing system where notifications are sent to a department whenever an order is placed for a product. The system also pushes identical notifications of the new order to a processing module that would allow EC2 instances to handle the fulfillment of the order. In the case of processing errors, the messages should be allowed to be re-processed at a later stage. The order processing system should be able to scale transparently without the need for any manual or programmatic provisioning of resources.</p>\n\n<p>Which of the following solutions can be used to address this use-case in the most cost-efficient way?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>SNS + SQS</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>SNS + Lambda</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>SNS + Kinesis</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>SQS + SES</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>SNS + SQS</strong></p>\n\n<p>Amazon SNS enables message filtering and fanout to a large number of subscribers, including serverless functions, queues, and distributed systems. Additionally, Amazon SNS fans out notifications to end users via mobile push messages, SMS, and email.</p>\n\n<p>How SNS Works:\n<img src=\"https://d1.awsstatic.com/product-marketing/SNS/product-page-diagram_SNS_how-it-works_1.53a464980bf0d5a868b141e9a8b2acf12abc503f.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://d1.awsstatic.com/product-marketing/SNS/product-page-diagram_SNS_how-it-works_1.53a464980bf0d5a868b141e9a8b2acf12abc503f.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://aws.amazon.com/sns/\">https://aws.amazon.com/sns/</a><p></p>\n\n<p>Amazon Simple Queue Service (SQS) is a fully managed message queuing service that enables you to decouple and scale microservices, distributed systems, and serverless applications. SQS offers two types of message queues. Standard queues offer maximum throughput, best-effort ordering, and at-least-once delivery. SQS FIFO queues are designed to guarantee that messages are processed exactly once, in the exact order that they are sent.</p>\n\n<p>Because each buffered request can be processed independently, Amazon SQS can scale transparently to handle the load without any provisioning instructions from you.</p>\n\n<p>SNS and SQS can be used to create a fanout messaging scenario in which messages are \"pushed\" to multiple subscribers, which eliminates the need to periodically check or poll for updates and enables parallel asynchronous processing of the message by the subscribers. SQS can allow for later re-processing and dead letter queues. This is called the fan-out pattern.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>SNS + Kinesis</strong> - You can use Amazon Kinesis Data Streams to collect and process large streams of data records in real-time. Kinesis Data Streams stores records from 24 hours (by default) to 8760 hours (365 days). However, you need to manually provision shards in case the load increases or you need to use CloudWatch alarms to set up auto scaling for the shards. Since Kinesis only supports transparent scaling in the on-demand mode, however, it is not cost efficient for the given use case, so this option is not the right fit for the given use case.</p>\n\n<p><strong>SNS + Lambda</strong> - Amazon SNS and AWS Lambda are integrated so you can invoke Lambda functions with Amazon SNS notifications. The Lambda function receives the message payload as an input parameter and can manipulate the information in the message, publish the message to other SNS topics, or send the message to other AWS services. However, your EC2 instances cannot \"poll\" from Lambda functions and as such, this would not work.</p>\n\n<p><strong>SQS + SES</strong> - This will not work as the messages need to be processed twice (once for sending the notification and later for order fulfillment) and SQS only allows for one consuming application.</p>\n\n<p>References:</p>\n\n<p><a href=\"https://aws.amazon.com/sns/\">https://aws.amazon.com/sns/</a></p>\n\n<p><a href=\"https://aws.amazon.com/getting-started/tutorials/send-fanout-event-notifications/\">https://aws.amazon.com/getting-started/tutorials/send-fanout-event-notifications/</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>SNS + SQS</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Amazon SNS enables message filtering and fanout to a large number of subscribers, including serverless functions, queues, and distributed systems. Additionally, Amazon SNS fans out notifications to end users via mobile push messages, SMS, and email."
      },
      {
        "image": "https://d1.awsstatic.com/product-marketing/SNS/product-page-diagram_SNS_how-it-works_1.53a464980bf0d5a868b141e9a8b2acf12abc503f.png",
        "answer": "",
        "explanation": "How SNS Works:"
      },
      {
        "link": "https://aws.amazon.com/sns/"
      },
      {
        "answer": "",
        "explanation": "Amazon Simple Queue Service (SQS) is a fully managed message queuing service that enables you to decouple and scale microservices, distributed systems, and serverless applications. SQS offers two types of message queues. Standard queues offer maximum throughput, best-effort ordering, and at-least-once delivery. SQS FIFO queues are designed to guarantee that messages are processed exactly once, in the exact order that they are sent."
      },
      {
        "answer": "",
        "explanation": "Because each buffered request can be processed independently, Amazon SQS can scale transparently to handle the load without any provisioning instructions from you."
      },
      {
        "answer": "",
        "explanation": "SNS and SQS can be used to create a fanout messaging scenario in which messages are \"pushed\" to multiple subscribers, which eliminates the need to periodically check or poll for updates and enables parallel asynchronous processing of the message by the subscribers. SQS can allow for later re-processing and dead letter queues. This is called the fan-out pattern."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>SNS + Kinesis</strong> - You can use Amazon Kinesis Data Streams to collect and process large streams of data records in real-time. Kinesis Data Streams stores records from 24 hours (by default) to 8760 hours (365 days). However, you need to manually provision shards in case the load increases or you need to use CloudWatch alarms to set up auto scaling for the shards. Since Kinesis only supports transparent scaling in the on-demand mode, however, it is not cost efficient for the given use case, so this option is not the right fit for the given use case."
      },
      {
        "answer": "",
        "explanation": "<strong>SNS + Lambda</strong> - Amazon SNS and AWS Lambda are integrated so you can invoke Lambda functions with Amazon SNS notifications. The Lambda function receives the message payload as an input parameter and can manipulate the information in the message, publish the message to other SNS topics, or send the message to other AWS services. However, your EC2 instances cannot \"poll\" from Lambda functions and as such, this would not work."
      },
      {
        "answer": "",
        "explanation": "<strong>SQS + SES</strong> - This will not work as the messages need to be processed twice (once for sending the notification and later for order fulfillment) and SQS only allows for one consuming application."
      }
    ],
    "references": [
      "https://aws.amazon.com/sns/",
      "https://aws.amazon.com/getting-started/tutorials/send-fanout-event-notifications/"
    ]
  },
  {
    "id": 50,
    "question": "<p>An Amazon Simple Queue Service (SQS) has to be configured between two AWS accounts for shared access to the queue. AWS account A has the SQS queue in its account and AWS account B has to be given access to this queue.</p>\n\n<p>Which of the following options need to be combined to allow this cross-account access? (Select three)</p>",
    "corrects": [
      4,
      5,
      6
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>The account A administrator attaches a trust policy to the role that identifies account B as the AWS service principal who can assume the role</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>The account B administrator creates an IAM role and attaches a trust policy to the role with account B as the principal</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>The account A administrator delegates the permission to assume the role to any users in account A</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>The account B administrator delegates the permission to assume the role to any users in account B</p>",
        "correct": true
      },
      {
        "id": 5,
        "answer": "<p>The account A administrator creates an IAM role and attaches a permissions policy</p>",
        "correct": true
      },
      {
        "id": 6,
        "answer": "<p>The account A administrator attaches a trust policy to the role that identifies account B as the principal who can assume the role</p>",
        "correct": true
      }
    ],
    "multiple": true,
    "domain": "Security",
    "explanation": "<p>Correct options:</p>\n\n<p><strong>The account A administrator creates an IAM role and attaches a permissions policy</strong></p>\n\n<p><strong>The account A administrator attaches a trust policy to the role that identifies account B as the principal who can assume the role</strong></p>\n\n<p><strong>The account B administrator delegates the permission to assume the role to any users in account B</strong></p>\n\n<p>To grant cross-account permissions, you need to attach an identity-based permissions policy to an IAM role. For example, the AWS account A administrator can create a role to grant cross-account permissions to AWS account B as follows:</p>\n\n<ol>\n<li><p>The account A administrator creates an IAM role and attaches a permissions policy—that grants permissions on resources in account A—to the role.</p></li>\n<li><p>The account A administrator attaches a trust policy to the role that identifies account B as the principal who can assume the role.</p></li>\n<li><p>The account B administrator delegates the permission to assume the role to any users in account B. This allows users in account B to create or access queues in account A.</p></li>\n</ol>\n\n<p>Incorrect options:</p>\n\n<p><strong>The account B administrator creates an IAM role and attaches a trust policy to the role with account B as the principal</strong> - As mentioned above, the account A administrator needs to create an IAM role and then attach a permissions policy. So, this option is incorrect.</p>\n\n<p><strong>The account A administrator delegates the permission to assume the role to any users in account A</strong> - This is irrelevant, as users in account B need to be given access.</p>\n\n<p><strong>The account A administrator attaches a trust policy to the role that identifies account B as the AWS service principal who can assume the role</strong> - AWS service principal is given as principal in the trust policy when you need to grant the permission to assume the role to an AWS service. The given use case talks about giving permission to another account. So, service principal is not an option here.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-overview-of-managing-access.html\">https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-overview-of-managing-access.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>The account A administrator creates an IAM role and attaches a permissions policy</strong>",
        "explanation": ""
      },
      {
        "answer": "<strong>The account A administrator attaches a trust policy to the role that identifies account B as the principal who can assume the role</strong>",
        "explanation": ""
      },
      {
        "answer": "<strong>The account B administrator delegates the permission to assume the role to any users in account B</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "To grant cross-account permissions, you need to attach an identity-based permissions policy to an IAM role. For example, the AWS account A administrator can create a role to grant cross-account permissions to AWS account B as follows:"
      },
      {
        "answer": "",
        "explanation": "<ol>\n<li><p>The account A administrator creates an IAM role and attaches a permissions policy—that grants permissions on resources in account A—to the role.</p></li>\n<li><p>The account A administrator attaches a trust policy to the role that identifies account B as the principal who can assume the role.</p></li>\n<li><p>The account B administrator delegates the permission to assume the role to any users in account B. This allows users in account B to create or access queues in account A.</p></li>\n</ol>"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>The account B administrator creates an IAM role and attaches a trust policy to the role with account B as the principal</strong> - As mentioned above, the account A administrator needs to create an IAM role and then attach a permissions policy. So, this option is incorrect."
      },
      {
        "answer": "",
        "explanation": "<strong>The account A administrator delegates the permission to assume the role to any users in account A</strong> - This is irrelevant, as users in account B need to be given access."
      },
      {
        "answer": "",
        "explanation": "<strong>The account A administrator attaches a trust policy to the role that identifies account B as the AWS service principal who can assume the role</strong> - AWS service principal is given as principal in the trust policy when you need to grant the permission to assume the role to an AWS service. The given use case talks about giving permission to another account. So, service principal is not an option here."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-overview-of-managing-access.html"
    ]
  },
  {
    "id": 51,
    "question": "<p>An IT company is using AWS CloudFormation to manage its IT infrastructure. It has created a template to provision a stack with a VPC and a subnet. The output value of this subnet has to be used in another stack.</p>\n\n<p>As a Developer Associate, which of the following options would you suggest to provide this information to another stack?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use Fn::ImportValue</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Use 'Expose' field in the Output section of the stack's template</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Use 'Export' field in the Output section of the stack's template</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Use Fn::Transform</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Deployment",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Use 'Export' field in the Output section of the stack's template</strong></p>\n\n<p>To share information between stacks, export a stack's output values. Other stacks that are in the same AWS account and region can import the exported values.</p>\n\n<p>To export a stack's output value, use the Export field in the Output section of the stack's template. To import those values, use the Fn::ImportValue function in the template for the other stacks.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Use 'Expose' field in the Output section of the stack's template</strong> - 'Expose' is a made-up option, and only given as a distractor.</p>\n\n<p><strong>Use Fn::ImportValue</strong> - To import the values exported by another stack, we use the Fn::ImportValue function in the template for the other stacks. This function is not useful for the current scenario.</p>\n\n<p><strong>Use Fn::Transform</strong> - The intrinsic function Fn::Transform specifies a macro to perform custom processing on part of a stack template. Macros enable you to perform custom processing on templates, from simple actions like find-and-replace operations to extensive transformations of entire templates. This function is not useful for the current scenario.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html\">https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Use 'Export' field in the Output section of the stack's template</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "To share information between stacks, export a stack's output values. Other stacks that are in the same AWS account and region can import the exported values."
      },
      {
        "answer": "",
        "explanation": "To export a stack's output value, use the Export field in the Output section of the stack's template. To import those values, use the Fn::ImportValue function in the template for the other stacks."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Use 'Expose' field in the Output section of the stack's template</strong> - 'Expose' is a made-up option, and only given as a distractor."
      },
      {
        "answer": "",
        "explanation": "<strong>Use Fn::ImportValue</strong> - To import the values exported by another stack, we use the Fn::ImportValue function in the template for the other stacks. This function is not useful for the current scenario."
      },
      {
        "answer": "",
        "explanation": "<strong>Use Fn::Transform</strong> - The intrinsic function Fn::Transform specifies a macro to perform custom processing on part of a stack template. Macros enable you to perform custom processing on templates, from simple actions like find-and-replace operations to extensive transformations of entire templates. This function is not useful for the current scenario."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"
    ]
  },
  {
    "id": 52,
    "question": "<p>A developer is migrating an on-premises application to AWS Cloud. The application currently processes user uploads and uploads them to a local directory on the server. All such file uploads must be saved and then made available to all instances in an Auto Scaling group.</p>\n\n<p>As a Developer Associate, which of the following options would you recommend for this use-case?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use Instance Store type of EC2 instances and share the files via file synchronization software</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Use Amazon EBS as the storage volume and share the files via file synchronization software</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Use Amazon EBS and configure the application AMI to use a snapshot of the same EBS instance while launching new instances</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Use Amazon S3 and make code changes in the application so all uploads are put on S3</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Use Amazon S3 and make code changes in the application so all uploads are put on S3</strong></p>\n\n<p>Amazon S3 is an object storage built to store and retrieve any amount of data from anywhere on the Internet. It’s a simple storage service that offers an extremely durable, highly available, and infinitely scalable data storage infrastructure at very low costs.</p>\n\n<p>Amazon S3 provides a simple web service interface that you can use to store and retrieve any amount of data, at any time, from anywhere on the web. Using this web service, you can easily build applications that make use of Internet storage.</p>\n\n<p>You can use S3 PutObject API from the application to upload the objects in a single bucket, which is then accessible from all instances.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Use Amazon EBS and configure the application AMI to use a snapshot of the same EBS instance while launching new instances</strong> - Using EBS to share data between instances is not possible because EBS volume is tied to an instance by definition. Creating a snapshot would only manage to move the stale data into the new instances.</p>\n\n<p><strong>Use Instance Store type of EC2 instances and share the files via file synchronization software</strong></p>\n\n<p><strong>Use Amazon EBS as the storage volume and share the files via file synchronization software</strong></p>\n\n<p>Technically you could use file synchronization software on EC2 instances with EBS or Instance Store type, but that involves a lot of development effort and still would not be as production-ready as just using S3. So both these options are incorrect.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://aws.amazon.com/s3/faqs/\">https://aws.amazon.com/s3/faqs/</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Use Amazon S3 and make code changes in the application so all uploads are put on S3</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Amazon S3 is an object storage built to store and retrieve any amount of data from anywhere on the Internet. It’s a simple storage service that offers an extremely durable, highly available, and infinitely scalable data storage infrastructure at very low costs."
      },
      {
        "answer": "",
        "explanation": "Amazon S3 provides a simple web service interface that you can use to store and retrieve any amount of data, at any time, from anywhere on the web. Using this web service, you can easily build applications that make use of Internet storage."
      },
      {
        "answer": "",
        "explanation": "You can use S3 PutObject API from the application to upload the objects in a single bucket, which is then accessible from all instances."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Use Amazon EBS and configure the application AMI to use a snapshot of the same EBS instance while launching new instances</strong> - Using EBS to share data between instances is not possible because EBS volume is tied to an instance by definition. Creating a snapshot would only manage to move the stale data into the new instances."
      },
      {
        "answer": "<strong>Use Instance Store type of EC2 instances and share the files via file synchronization software</strong>",
        "explanation": ""
      },
      {
        "answer": "<strong>Use Amazon EBS as the storage volume and share the files via file synchronization software</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Technically you could use file synchronization software on EC2 instances with EBS or Instance Store type, but that involves a lot of development effort and still would not be as production-ready as just using S3. So both these options are incorrect."
      }
    ],
    "references": [
      "https://aws.amazon.com/s3/faqs/"
    ]
  },
  {
    "id": 53,
    "question": "<p>The development team at a company wants to insert vendor records into an Amazon DynamoDB table as soon as the vendor uploads a new file into an Amazon S3 bucket.</p>\n\n<p>As a Developer Associate, which set of steps would you recommend to achieve this?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Write a cron job that will execute a Lambda function at a scheduled time and insert the records into DynamoDB</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Set up an event with Amazon CloudWatch Events that will monitor the S3 bucket and then insert the records into DynamoDB</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Develop a Lambda function that will poll the S3 bucket and then insert the records into DynamoDB</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Create an S3 event to invoke a Lambda function that inserts records into DynamoDB</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Create an S3 event to invoke a Lambda function that inserts records into DynamoDB</strong></p>\n\n<p>The Amazon S3 notification feature enables you to receive notifications when certain events happen in your bucket. To enable notifications, you must first add a notification configuration that identifies the events you want Amazon S3 to publish and the destinations where you want Amazon S3 to send the notifications. You store this configuration in the notification subresource that is associated with a bucket.</p>\n\n<p>Amazon S3 APIs such as PUT, POST, and COPY can create an object. Using these event types, you can enable notification when an object is created using a specific API, or you can use the s3:ObjectCreated:* event type to request notification regardless of the API that was used to create an object.</p>\n\n<p>For the given use-case, you would create an S3 event notification that triggers a Lambda function whenever we have a PUT object operation in the S3 bucket. The Lambda function in turn would execute custom code to inserts records into DynamoDB.</p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q15-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q15-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html\">https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Write a cron job that will execute a Lambda function at a scheduled time and insert the records into DynamoDB</strong> - This is not efficient because there may not be any unprocessed file in the S3 bucket when the cron triggers the Lambda on schedule. So this is not the correct option.</p>\n\n<p><strong>Set up an event with Amazon CloudWatch Events that will monitor the S3 bucket and then insert the records into DynamoDB</strong> - The CloudWatch event cannot directly insert records into DynamoDB as it's not a supported target type. The CloudWatch event needs to use something like a Lambda function to insert the records into DynamoDB.</p>\n\n<p><strong>Develop a Lambda function that will poll the S3 bucket and then insert the records into DynamoDB</strong> - This is not efficient because there may not be any unprocessed file in the S3 bucket when the Lambda function polls the S3 bucket at a given time interval. So this is not the correct option.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html\">https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Create an S3 event to invoke a Lambda function that inserts records into DynamoDB</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "The Amazon S3 notification feature enables you to receive notifications when certain events happen in your bucket. To enable notifications, you must first add a notification configuration that identifies the events you want Amazon S3 to publish and the destinations where you want Amazon S3 to send the notifications. You store this configuration in the notification subresource that is associated with a bucket."
      },
      {
        "answer": "",
        "explanation": "Amazon S3 APIs such as PUT, POST, and COPY can create an object. Using these event types, you can enable notification when an object is created using a specific API, or you can use the s3:ObjectCreated:* event type to request notification regardless of the API that was used to create an object."
      },
      {
        "answer": "",
        "explanation": "For the given use-case, you would create an S3 event notification that triggers a Lambda function whenever we have a PUT object operation in the S3 bucket. The Lambda function in turn would execute custom code to inserts records into DynamoDB."
      },
      {
        "link": "https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Write a cron job that will execute a Lambda function at a scheduled time and insert the records into DynamoDB</strong> - This is not efficient because there may not be any unprocessed file in the S3 bucket when the cron triggers the Lambda on schedule. So this is not the correct option."
      },
      {
        "answer": "",
        "explanation": "<strong>Set up an event with Amazon CloudWatch Events that will monitor the S3 bucket and then insert the records into DynamoDB</strong> - The CloudWatch event cannot directly insert records into DynamoDB as it's not a supported target type. The CloudWatch event needs to use something like a Lambda function to insert the records into DynamoDB."
      },
      {
        "answer": "",
        "explanation": "<strong>Develop a Lambda function that will poll the S3 bucket and then insert the records into DynamoDB</strong> - This is not efficient because there may not be any unprocessed file in the S3 bucket when the Lambda function polls the S3 bucket at a given time interval. So this is not the correct option."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html"
    ]
  },
  {
    "id": 54,
    "question": "<p>You have a Java-based application running on EC2 instances loaded with AWS CodeDeploy agents. You are considering different options for deployment, one is the flexibility that allows for incremental deployment of your new application versions and replaces existing versions in the EC2 instances. The other option is a strategy in which an Auto Scaling group is used to perform a deployment.</p>\n\n<p>Which of the following options will allow you to deploy in this manner? (Select two)</p>",
    "corrects": [
      1,
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>In-place Deployment</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Pilot Light Deployment</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Blue/green Deployment</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Warm Standby Deployment</p>",
        "correct": false
      },
      {
        "id": 5,
        "answer": "<p>Cattle Deployment</p>",
        "correct": false
      }
    ],
    "multiple": true,
    "domain": "Deployment",
    "explanation": "<p>Correct options:</p>\n\n<p><strong>In-place Deployment</strong></p>\n\n<p>The application on each instance in the deployment group is stopped, the latest application revision is installed, and the new version of the application is started and validated. You can use a load balancer so that each instance is deregistered during its deployment and then restored to service after the deployment is complete.</p>\n\n<p><strong>Blue/green Deployment</strong></p>\n\n<p>With a blue/green deployment, you provision a new set of instances on which CodeDeploy installs the latest version of your application. CodeDeploy then re-routes load balancer traffic from an existing set of instances running the previous version of your application to the new set of instances running the latest version. After traffic is re-routed to the new instances, the existing instances can be terminated.</p>\n\n<p>CodeDeploy Deployment Types:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q45-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q45-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/deployments.html\">https://docs.aws.amazon.com/codedeploy/latest/userguide/deployments.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Cattle Deployment</strong> - This is a good option if you have cattle in a farm</p>\n\n<p><strong>Warm Standby Deployment</strong> - This is not a valid CodeDeploy deployment option. The term \"Warm Standby\" is used to describe a Disaster Recovery scenario in which a scaled-down version of a fully functional environment is always running in the cloud.</p>\n\n<p><strong>Pilot Light Deployment</strong> - This is not a valid CodeDeploy deployment option. \"Pilot Light\" is a Disaster Recovery approach where you simply replicate part of your IT structure for a limited set of core services so that the AWS cloud environment seamlessly takes over in the event of a disaster.</p>\n\n<p>References:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/deployments.html\">https://docs.aws.amazon.com/codedeploy/latest/userguide/deployments.html</a></p>\n\n<p><a href=\"https://aws.amazon.com/blogs/publicsector/rapidly-recover-mission-critical-systems-in-a-disaster/\">https://aws.amazon.com/blogs/publicsector/rapidly-recover-mission-critical-systems-in-a-disaster/</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>In-place Deployment</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "The application on each instance in the deployment group is stopped, the latest application revision is installed, and the new version of the application is started and validated. You can use a load balancer so that each instance is deregistered during its deployment and then restored to service after the deployment is complete."
      },
      {
        "answer": "<strong>Blue/green Deployment</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "With a blue/green deployment, you provision a new set of instances on which CodeDeploy installs the latest version of your application. CodeDeploy then re-routes load balancer traffic from an existing set of instances running the previous version of your application to the new set of instances running the latest version. After traffic is re-routed to the new instances, the existing instances can be terminated."
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q45-i1.jpg",
        "answer": "",
        "explanation": "CodeDeploy Deployment Types:"
      },
      {
        "link": "https://docs.aws.amazon.com/codedeploy/latest/userguide/deployments.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Cattle Deployment</strong> - This is a good option if you have cattle in a farm"
      },
      {
        "answer": "",
        "explanation": "<strong>Warm Standby Deployment</strong> - This is not a valid CodeDeploy deployment option. The term \"Warm Standby\" is used to describe a Disaster Recovery scenario in which a scaled-down version of a fully functional environment is always running in the cloud."
      },
      {
        "answer": "",
        "explanation": "<strong>Pilot Light Deployment</strong> - This is not a valid CodeDeploy deployment option. \"Pilot Light\" is a Disaster Recovery approach where you simply replicate part of your IT structure for a limited set of core services so that the AWS cloud environment seamlessly takes over in the event of a disaster."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/codedeploy/latest/userguide/deployments.html",
      "https://aws.amazon.com/blogs/publicsector/rapidly-recover-mission-critical-systems-in-a-disaster/"
    ]
  },
  {
    "id": 55,
    "question": "<p>You are a system administrator whose company recently moved its production application to AWS and migrated data from MySQL to AWS DynamoDB. You are adding new tables to AWS DynamoDB and need to allow your application to query your data by the primary key and an alternate key. This option must be added when first creating tables otherwise changes cannot be made afterward.</p>\n\n<p>Which of the following actions should you take?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Call Scan</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Create a LSI</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Migrate away from DynamoDB</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Create a GSI</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Create an LSI</strong></p>\n\n<p>LSI stands for Local Secondary Index. Some applications only need to query data using the base table's primary key; however, there may be situations where an alternate sort key would be helpful. To give your application a choice of sort keys, you can create one or more local secondary indexes on a table and issue Query or Scan requests against these indexes.</p>\n\n<p>Differences between GSI and LSI:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q24-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q24-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SecondaryIndexes.html\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SecondaryIndexes.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Call Scan</strong> - Scan is an operation on the data. Once you create your local secondary indexes on a table you can then issue Scan requests again.</p>\n\n<p><strong>Create a GSI</strong> - GSI (Global Secondary Index) is an index with a partition key and a sort key that can be different from those on the base table.</p>\n\n<p><strong>Migrate away from DynamoDB</strong> - Migrating to another database that is not NoSQL may cause you to make changes that require substantial code changes.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SecondaryIndexes.html\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SecondaryIndexes.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Create an LSI</strong>"
      },
      {
        "answer": "",
        "explanation": "LSI stands for Local Secondary Index. Some applications only need to query data using the base table's primary key; however, there may be situations where an alternate sort key would be helpful. To give your application a choice of sort keys, you can create one or more local secondary indexes on a table and issue Query or Scan requests against these indexes."
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q24-i1.jpg",
        "answer": "",
        "explanation": "Differences between GSI and LSI:"
      },
      {
        "link": "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SecondaryIndexes.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Call Scan</strong> - Scan is an operation on the data. Once you create your local secondary indexes on a table you can then issue Scan requests again."
      },
      {
        "answer": "",
        "explanation": "<strong>Create a GSI</strong> - GSI (Global Secondary Index) is an index with a partition key and a sort key that can be different from those on the base table."
      },
      {
        "answer": "",
        "explanation": "<strong>Migrate away from DynamoDB</strong> - Migrating to another database that is not NoSQL may cause you to make changes that require substantial code changes."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SecondaryIndexes.html"
    ]
  },
  {
    "id": 56,
    "question": "<p>You have configured a Network ACL and a Security Group for the load balancer and Amazon EC2 instances to allow inbound traffic on port 80. However, users are still unable to connect to your website after launch.</p>\n\n<p>Which additional configuration is required to make the website accessible to all users over the internet?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Add a rule to the Network ACLs to allow outbound traffic on ports 1025 - 5000</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Add a rule to the Network ACLs to allow outbound traffic on ports 1024 - 65535</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Add a rule to the Network ACLs to allow outbound traffic on ports 32768 - 61000</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Add a rule to the Security Group allowing outbound traffic on port 80</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Add a rule to the Network ACLs to allow outbound traffic on ports 1024 - 65535</strong></p>\n\n<p>A Network Access Control List (ACL) is an optional layer of security for your VPC that acts as a firewall for controlling traffic in and out of one or more subnets. You might set up network ACLs with rules similar to your security groups in order to add an additional layer of security to your VPC.</p>\n\n<p>When you create a custom Network ACL and associate it with a subnet, by default, this custom Network ACL denies all inbound and outbound traffic until you add rules. A network ACL has separate inbound and outbound rules, and each rule can either allow or deny traffic. Network ACLs are stateless, which means that responses to allowed inbound traffic are subject to the rules for outbound traffic (and vice versa).</p>\n\n<p>The client that initiates the request chooses the ephemeral port range. The range varies depending on the client's operating system. Requests originating from Elastic Load Balancing use ports 1024-65535. List of ephemeral port ranges:</p>\n\n<ol>\n<li><p>Many Linux kernels (including the Amazon Linux kernel) use ports 32768-61000.</p></li>\n<li><p>Requests originating from Elastic Load Balancing use ports 1024-65535.</p></li>\n<li><p>Windows operating systems through Windows Server 2003 use ports 1025-5000.</p></li>\n<li><p>Windows Server 2008 and later versions use ports 49152-65535.</p></li>\n<li><p>A NAT gateway uses ports 1024-65535.</p></li>\n</ol>\n\n<p>AWS Lambda functions use ports 1024-65535.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Add a rule to the Network ACLs to allow outbound traffic on ports 1025 - 5000</strong> - As discussed above, Windows operating systems through Windows Server 2003 use ports 1025-5000. ELB uses the port range 1024-65535.</p>\n\n<p><strong>Add a rule to the Network ACLs to allow outbound traffic on ports 32768 - 61000</strong> - As discussed above, Linux kernels (including the Amazon Linux kernel) use ports 1025-5000. ELB uses the port range 1024-65535.</p>\n\n<p><strong>Add a rule to the Security Group allowing outbound traffic on port 80</strong> - A security group acts as a virtual firewall for your instance to control inbound and outbound traffic. Security groups act at the instance level, not the subnet level. Security groups are stateful — if you send a request from your instance, the response traffic for that request is allowed to flow in regardless of inbound security group rules. Responses to allowed inbound traffic are allowed to flow out, regardless of outbound rules.</p>\n\n<p>References:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html\">https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html</a></p>\n\n<p><a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html\">https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Add a rule to the Network ACLs to allow outbound traffic on ports 1024 - 65535</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "A Network Access Control List (ACL) is an optional layer of security for your VPC that acts as a firewall for controlling traffic in and out of one or more subnets. You might set up network ACLs with rules similar to your security groups in order to add an additional layer of security to your VPC."
      },
      {
        "answer": "",
        "explanation": "When you create a custom Network ACL and associate it with a subnet, by default, this custom Network ACL denies all inbound and outbound traffic until you add rules. A network ACL has separate inbound and outbound rules, and each rule can either allow or deny traffic. Network ACLs are stateless, which means that responses to allowed inbound traffic are subject to the rules for outbound traffic (and vice versa)."
      },
      {
        "answer": "",
        "explanation": "The client that initiates the request chooses the ephemeral port range. The range varies depending on the client's operating system. Requests originating from Elastic Load Balancing use ports 1024-65535. List of ephemeral port ranges:"
      },
      {
        "answer": "",
        "explanation": "<ol>\n<li><p>Many Linux kernels (including the Amazon Linux kernel) use ports 32768-61000.</p></li>\n<li><p>Requests originating from Elastic Load Balancing use ports 1024-65535.</p></li>\n<li><p>Windows operating systems through Windows Server 2003 use ports 1025-5000.</p></li>\n<li><p>Windows Server 2008 and later versions use ports 49152-65535.</p></li>\n<li><p>A NAT gateway uses ports 1024-65535.</p></li>\n</ol>"
      },
      {
        "answer": "",
        "explanation": "AWS Lambda functions use ports 1024-65535."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Add a rule to the Network ACLs to allow outbound traffic on ports 1025 - 5000</strong> - As discussed above, Windows operating systems through Windows Server 2003 use ports 1025-5000. ELB uses the port range 1024-65535."
      },
      {
        "answer": "",
        "explanation": "<strong>Add a rule to the Network ACLs to allow outbound traffic on ports 32768 - 61000</strong> - As discussed above, Linux kernels (including the Amazon Linux kernel) use ports 1025-5000. ELB uses the port range 1024-65535."
      },
      {
        "answer": "",
        "explanation": "<strong>Add a rule to the Security Group allowing outbound traffic on port 80</strong> - A security group acts as a virtual firewall for your instance to control inbound and outbound traffic. Security groups act at the instance level, not the subnet level. Security groups are stateful — if you send a request from your instance, the response traffic for that request is allowed to flow in regardless of inbound security group rules. Responses to allowed inbound traffic are allowed to flow out, regardless of outbound rules."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
      "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"
    ]
  },
  {
    "id": 57,
    "question": "<p>An organization uses Alexa as its intelligent assistant to improve productivity throughout the organization. A group of developers manages custom Alexa Skills written in Node.Js to control conference-room equipment settings and start meetings using voice activation. The manager has requested developers that all functions code should be monitored for error rates with the possibility of creating alarms on top of them.</p>\n\n<p>Which of the following options should be chosen? (select two)</p>",
    "corrects": [
      1,
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>CloudWatch Alarms</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>X-Ray</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>SSM</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>CloudWatch Metrics</p>",
        "correct": true
      },
      {
        "id": 5,
        "answer": "<p>CloudTrail</p>",
        "correct": false
      }
    ],
    "multiple": true,
    "domain": "Troubleshooting and Optimization",
    "explanation": "<p>Correct options:</p>\n\n<p>CloudWatch collects monitoring and operational data in the form of logs, metrics, and events, and visualizes it using automated dashboards so you can get a unified view of your AWS resources, applications, and services that run in AWS and on-premises. You can correlate your metrics and logs to better understand the health and performance of your resources. You can also create alarms based on metric value thresholds you specify, or that can watch for anomalous metric behavior based on machine learning algorithms.</p>\n\n<p>How CloudWatch works:\n<img src=\"https://d1.awsstatic.com/product-marketing/cloudwatch/product-page-diagram_Cloudwatch_v4.55c15d1cc086395cbd5ad279a2f1fc37e8452e77.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://d1.awsstatic.com/product-marketing/cloudwatch/product-page-diagram_Cloudwatch_v4.55c15d1cc086395cbd5ad279a2f1fc37e8452e77.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://aws.amazon.com/cloudwatch/\">https://aws.amazon.com/cloudwatch/</a><p></p>\n\n<p><strong>CloudWatch Metrics</strong></p>\n\n<p>Amazon CloudWatch monitors your Amazon Web Services (AWS) resources and the applications you run on AWS in real-time. You can use CloudWatch to collect and track metrics, which are variables you can measure for your resources and applications. Metric data is kept for 15 months, enabling you to view both up-to-the-minute data and historical data.</p>\n\n<p>CloudWatch retains metric data as follows:</p>\n\n<p>Data points with a period of less than 60 seconds are available for 3 hours. These data points are high-resolution custom metrics.\nData points with a period of 60 seconds (1 minute) are available for 15 days\nData points with a period of 300 seconds (5 minute) are available for 63 days\nData points with a period of 3600 seconds (1 hour) are available for 455 days (15 months)</p>\n\n<p><strong>CloudWatch Alarms</strong></p>\n\n<p>You can use an alarm to automatically initiate actions on your behalf. An alarm watches a single metric over a specified time, and performs one or more specified actions, based on the value of the metric relative to a threshold over time. The action is a notification sent to an Amazon SNS topic or an Auto Scaling policy. You can also add alarms to dashboards.</p>\n\n<p>CloudWatch alarms send notifications or automatically make changes to the resources you are monitoring based on rules that you define. Alarms work together with CloudWatch Metrics.</p>\n\n<p>A metric alarm has the following possible states:</p>\n\n<p>OK – The metric or expression is within the defined threshold.</p>\n\n<p>ALARM – The metric or expression is outside of the defined threshold.</p>\n\n<p>INSUFFICIENT_DATA – The alarm has just started, the metric is not available, or not enough data is available for the metric to determine the alarm state.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>X-Ray</strong> - AWS X-Ray helps developers analyze and debug production, distributed applications, such as those built using a microservices architecture. With X-Ray, you can understand how your application and its underlying services are performing to identify and troubleshoot the root cause of performance issues and errors. X-Ray provides an end-to-end view of requests as they travel through your application, and shows a map of your application’s underlying components.</p>\n\n<p>How X-Ray Works:\n<img src=\"https://d1.awsstatic.com/Products/product-name/Images/product-page-diagram_AWS-X-Ray_how-it-works.2922edd4bfe011e997dbf32fdf8bd520bcbc85fb.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://d1.awsstatic.com/Products/product-name/Images/product-page-diagram_AWS-X-Ray_how-it-works.2922edd4bfe011e997dbf32fdf8bd520bcbc85fb.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://aws.amazon.com/xray/\">https://aws.amazon.com/xray/</a><p></p>\n\n<p>X-Ray cannot be used to capture metrics and set up alarms as per the given use-case, so this option is incorrect.</p>\n\n<p><strong>CloudTrail</strong> - CloudWatch is a monitoring service whereas CloudTrail is more of an audit service where you can find API calls made on services and by whom.</p>\n\n<p>How CloudTrail Works:\n<img src=\"https://d1.awsstatic.com/product-marketing/CloudTrail/Product-Page-Diagram-AWSX-CloudTrail_How-it-Works.d2f51f6e3ec3ea3b33d0c48d472f0e0b59b46e59.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://d1.awsstatic.com/product-marketing/CloudTrail/Product-Page-Diagram-AWSX-CloudTrail_How-it-Works.d2f51f6e3ec3ea3b33d0c48d472f0e0b59b46e59.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://aws.amazon.com/cloudtrail/\">https://aws.amazon.com/cloudtrail/</a><p></p>\n\n<p><strong>Systems Manager</strong> - Using AWS Systems Manager, you can group resources, like Amazon EC2 instances, Amazon S3 buckets, or Amazon RDS instances, by application, view operational data for monitoring and troubleshooting, and take action on your groups of resources. Systems Manager cannot be used to capture metrics and set up alarms as per the given use-case, so this option is incorrect.</p>\n\n<p>References:</p>\n\n<p><a href=\"https://aws.amazon.com/cloudwatch/\">https://aws.amazon.com/cloudwatch/</a></p>\n\n<p><a href=\"https://aws.amazon.com/cloudtrail/\">https://aws.amazon.com/cloudtrail/</a></p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html\">https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "",
        "explanation": "CloudWatch collects monitoring and operational data in the form of logs, metrics, and events, and visualizes it using automated dashboards so you can get a unified view of your AWS resources, applications, and services that run in AWS and on-premises. You can correlate your metrics and logs to better understand the health and performance of your resources. You can also create alarms based on metric value thresholds you specify, or that can watch for anomalous metric behavior based on machine learning algorithms."
      },
      {
        "image": "https://d1.awsstatic.com/product-marketing/cloudwatch/product-page-diagram_Cloudwatch_v4.55c15d1cc086395cbd5ad279a2f1fc37e8452e77.png",
        "answer": "",
        "explanation": "How CloudWatch works:"
      },
      {
        "link": "https://aws.amazon.com/cloudwatch/"
      },
      {
        "answer": "<strong>CloudWatch Metrics</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Amazon CloudWatch monitors your Amazon Web Services (AWS) resources and the applications you run on AWS in real-time. You can use CloudWatch to collect and track metrics, which are variables you can measure for your resources and applications. Metric data is kept for 15 months, enabling you to view both up-to-the-minute data and historical data."
      },
      {
        "answer": "",
        "explanation": "CloudWatch retains metric data as follows:"
      },
      {
        "answer": "",
        "explanation": "Data points with a period of less than 60 seconds are available for 3 hours. These data points are high-resolution custom metrics.\nData points with a period of 60 seconds (1 minute) are available for 15 days\nData points with a period of 300 seconds (5 minute) are available for 63 days\nData points with a period of 3600 seconds (1 hour) are available for 455 days (15 months)"
      },
      {
        "answer": "<strong>CloudWatch Alarms</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "You can use an alarm to automatically initiate actions on your behalf. An alarm watches a single metric over a specified time, and performs one or more specified actions, based on the value of the metric relative to a threshold over time. The action is a notification sent to an Amazon SNS topic or an Auto Scaling policy. You can also add alarms to dashboards."
      },
      {
        "answer": "",
        "explanation": "CloudWatch alarms send notifications or automatically make changes to the resources you are monitoring based on rules that you define. Alarms work together with CloudWatch Metrics."
      },
      {
        "answer": "",
        "explanation": "A metric alarm has the following possible states:"
      },
      {
        "answer": "",
        "explanation": "OK – The metric or expression is within the defined threshold."
      },
      {
        "answer": "",
        "explanation": "ALARM – The metric or expression is outside of the defined threshold."
      },
      {
        "answer": "",
        "explanation": "INSUFFICIENT_DATA – The alarm has just started, the metric is not available, or not enough data is available for the metric to determine the alarm state."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>X-Ray</strong> - AWS X-Ray helps developers analyze and debug production, distributed applications, such as those built using a microservices architecture. With X-Ray, you can understand how your application and its underlying services are performing to identify and troubleshoot the root cause of performance issues and errors. X-Ray provides an end-to-end view of requests as they travel through your application, and shows a map of your application’s underlying components."
      },
      {
        "image": "https://d1.awsstatic.com/Products/product-name/Images/product-page-diagram_AWS-X-Ray_how-it-works.2922edd4bfe011e997dbf32fdf8bd520bcbc85fb.png",
        "answer": "",
        "explanation": "How X-Ray Works:"
      },
      {
        "link": "https://aws.amazon.com/xray/"
      },
      {
        "answer": "",
        "explanation": "X-Ray cannot be used to capture metrics and set up alarms as per the given use-case, so this option is incorrect."
      },
      {
        "answer": "",
        "explanation": "<strong>CloudTrail</strong> - CloudWatch is a monitoring service whereas CloudTrail is more of an audit service where you can find API calls made on services and by whom."
      },
      {
        "image": "https://d1.awsstatic.com/product-marketing/CloudTrail/Product-Page-Diagram-AWSX-CloudTrail_How-it-Works.d2f51f6e3ec3ea3b33d0c48d472f0e0b59b46e59.png",
        "answer": "",
        "explanation": "How CloudTrail Works:"
      },
      {
        "link": "https://aws.amazon.com/cloudtrail/"
      },
      {
        "answer": "",
        "explanation": "<strong>Systems Manager</strong> - Using AWS Systems Manager, you can group resources, like Amazon EC2 instances, Amazon S3 buckets, or Amazon RDS instances, by application, view operational data for monitoring and troubleshooting, and take action on your groups of resources. Systems Manager cannot be used to capture metrics and set up alarms as per the given use-case, so this option is incorrect."
      }
    ],
    "references": [
      "https://aws.amazon.com/cloudwatch/",
      "https://aws.amazon.com/xray/",
      "https://aws.amazon.com/cloudtrail/",
      "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html"
    ]
  },
  {
    "id": 58,
    "question": "<p>A cybersecurity company is publishing critical log data to a log group in Amazon CloudWatch Logs, which was created 3 months ago. The company must encrypt the log data using an AWS KMS customer master key (CMK), so any future data can be encrypted to meet the company’s security guidelines.</p>\n\n<p>How can the company address this use-case?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use the AWS CLI <code>describe-log-groups</code> command and specify the KMS key ARN</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Use the AWS CLI <code>create-log-group</code> command and specify the KMS key ARN</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Enable the encrypt feature on the log group via the CloudWatch Logs console</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Use the AWS CLI <code>associate-kms-key</code> command and specify the KMS key ARN</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "Security",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Use the AWS CLI <code>associate-kms-key</code> command and specify the KMS key ARN</strong></p>\n\n<p>Log group data is always encrypted in CloudWatch Logs. You can optionally use AWS AWS Key Management Service for this encryption. If you do, the encryption is done using an AWS KMS (AWS KMS) customer master key (CMK). Encryption using AWS KMS is enabled at the log group level, by associating a CMK with a log group, either when you create the log group or after it exists.</p>\n\n<p>After you associate a CMK with a log group, all newly ingested data for the log group is encrypted using the CMK. This data is stored in an encrypted format throughout its retention period. CloudWatch Logs decrypts this data whenever it is requested. CloudWatch Logs must have permissions for the CMK whenever encrypted data is requested.</p>\n\n<p>To associate the CMK with an existing log group, you can use the <code>associate-kms-key</code> command.</p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q10-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q10-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html\">https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Enable the encrypt feature on the log group via the CloudWatch Logs console</strong> - CloudWatch Logs console does not have an option to enable encryption for a log group.</p>\n\n<p><strong>Use the AWS CLI <code>describe-log-groups</code> command and specify the KMS key ARN</strong> - You can use the <code>describe-log-groups</code> command to find whether a log group already has a CMK associated with it.</p>\n\n<p><strong>Use the AWS CLI <code>create-log-group</code> command and specify the KMS key ARN</strong> - You can use the <code>create-log-group</code> command to associate the CMK with a log group when you create it.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html\">https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Use the AWS CLI <code>associate-kms-key</code> command and specify the KMS key ARN</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Log group data is always encrypted in CloudWatch Logs. You can optionally use AWS AWS Key Management Service for this encryption. If you do, the encryption is done using an AWS KMS (AWS KMS) customer master key (CMK). Encryption using AWS KMS is enabled at the log group level, by associating a CMK with a log group, either when you create the log group or after it exists."
      },
      {
        "answer": "",
        "explanation": "After you associate a CMK with a log group, all newly ingested data for the log group is encrypted using the CMK. This data is stored in an encrypted format throughout its retention period. CloudWatch Logs decrypts this data whenever it is requested. CloudWatch Logs must have permissions for the CMK whenever encrypted data is requested."
      },
      {
        "answer": "",
        "explanation": "To associate the CMK with an existing log group, you can use the <code>associate-kms-key</code> command."
      },
      {
        "link": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Enable the encrypt feature on the log group via the CloudWatch Logs console</strong> - CloudWatch Logs console does not have an option to enable encryption for a log group."
      },
      {
        "answer": "",
        "explanation": "<strong>Use the AWS CLI <code>describe-log-groups</code> command and specify the KMS key ARN</strong> - You can use the <code>describe-log-groups</code> command to find whether a log group already has a CMK associated with it."
      },
      {
        "answer": "",
        "explanation": "<strong>Use the AWS CLI <code>create-log-group</code> command and specify the KMS key ARN</strong> - You can use the <code>create-log-group</code> command to associate the CMK with a log group when you create it."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html"
    ]
  },
  {
    "id": 59,
    "question": "<p>Your development team uses the AWS SDK for Java on a web application that uploads files to several Amazon Simple Storage Service (S3) buckets using the SSE-KMS encryption mechanism. Developers are reporting that they are receiving permission errors when trying to push their objects over HTTP. Which of the following headers should they include in their request?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>'x-amz-server-side-encryption': 'SSE-S3'</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>'x-amz-server-side-encryption': 'SSE-KMS'</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>'x-amz-server-side-encryption': 'AES256'</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>'x-amz-server-side-encryption': 'aws:kms'</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "Security",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>'x-amz-server-side-encryption': 'aws:kms'</strong></p>\n\n<p>Server-side encryption is the encryption of data at its destination by the application or service that receives it. AWS Key Management Service (AWS KMS) is a service that combines secure, highly available hardware and software to provide a key management system scaled for the cloud. Amazon S3 uses AWS KMS customer master keys (CMKs) to encrypt your Amazon S3 objects. AWS KMS encrypts only the object data. Any object metadata is not encrypted.</p>\n\n<p>If the request does not include the x-amz-server-side-encryption header, then the request is denied.</p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q22-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q22-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html\">https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>'x-amz-server-side-encryption': 'SSE-S3'</strong> - This is an invalid header value. The correct value is 'x-amz-server-side-encryption': 'AES256'. This refers to Server-Side Encryption with Amazon S3-Managed Encryption Keys (SSE-S3).</p>\n\n<p><strong>'x-amz-server-side-encryption': 'SSE-KMS'</strong> - Invalid header value. SSE-KMS is an encryption option.</p>\n\n<p><strong>'x-amz-server-side-encryption': 'AES256'</strong> - This is the correct header value if you are using SSE-S3 server-side encryption.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html\">https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>'x-amz-server-side-encryption': 'aws:kms'</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Server-side encryption is the encryption of data at its destination by the application or service that receives it. AWS Key Management Service (AWS KMS) is a service that combines secure, highly available hardware and software to provide a key management system scaled for the cloud. Amazon S3 uses AWS KMS customer master keys (CMKs) to encrypt your Amazon S3 objects. AWS KMS encrypts only the object data. Any object metadata is not encrypted."
      },
      {
        "answer": "",
        "explanation": "If the request does not include the x-amz-server-side-encryption header, then the request is denied."
      },
      {
        "link": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>'x-amz-server-side-encryption': 'SSE-S3'</strong> - This is an invalid header value. The correct value is 'x-amz-server-side-encryption': 'AES256'. This refers to Server-Side Encryption with Amazon S3-Managed Encryption Keys (SSE-S3)."
      },
      {
        "answer": "",
        "explanation": "<strong>'x-amz-server-side-encryption': 'SSE-KMS'</strong> - Invalid header value. SSE-KMS is an encryption option."
      },
      {
        "answer": "",
        "explanation": "<strong>'x-amz-server-side-encryption': 'AES256'</strong> - This is the correct header value if you are using SSE-S3 server-side encryption."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html"
    ]
  },
  {
    "id": 60,
    "question": "<p>You have a popular web application that accesses data stored in an Amazon Simple Storage Service (S3) bucket. Developers use the SDK to maintain the application and add new features. Security compliance requests that all new objects uploaded to S3 be encrypted using SSE-S3 at the time of upload. Which of the following headers must the developers add to their request?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>'x-amz-server-side-encryption': 'SSE-S3'</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>'x-amz-server-side-encryption': 'AES256'</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>'x-amz-server-side-encryption': 'SSE-KMS'</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>'x-amz-server-side-encryption': 'aws:kms'</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Security",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>'x-amz-server-side-encryption': 'AES256'</strong></p>\n\n<p>Server-side encryption protects data at rest. Amazon S3 encrypts each object with a unique key. As an additional safeguard, it encrypts the key itself with a master key that it rotates regularly. Amazon S3 server-side encryption uses one of the strongest block ciphers available to encrypt your data, 256-bit Advanced Encryption Standard (AES-256).</p>\n\n<p>SSE-S3 Overview:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q21-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q21-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html\">https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html</a><p></p>\n\n<p><strong>'x-amz-server-side-encryption': 'SSE-S3'</strong> - SSE-S3 (Amazon S3-Managed Keys) is an option available but it's not a valid header value.</p>\n\n<p><strong>'x-amz-server-side-encryption': 'SSE-KMS'</strong> - SSE-KMS (AWS KMS-Managed Keys) is an option available but it's not a valid header value. A valid value would be 'aws:kms'</p>\n\n<p><strong>'x-amz-server-side-encryption': 'aws:kms'</strong> - Server-side encryption is the encryption of data at its destination by the application or service that receives it. AWS Key Management Service (AWS KMS) is a service that combines secure, highly available hardware and software to provide a key management system scaled for the cloud. Amazon S3 uses AWS KMS customer master keys (CMKs) to encrypt your Amazon S3 objects. AWS KMS encrypts only the object data. Any object metadata is not encrypted.</p>\n\n<p>This is a valid header value and you can use if you need more control over your keys like create, rotating, disabling them using AWS KMS. Otherwise, if you wish to let AWS S3 manage your keys just stick with SSE-S3.</p>\n\n<p>References:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html\">https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html</a></p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingEncryption.html\">https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingEncryption.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>'x-amz-server-side-encryption': 'AES256'</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Server-side encryption protects data at rest. Amazon S3 encrypts each object with a unique key. As an additional safeguard, it encrypts the key itself with a master key that it rotates regularly. Amazon S3 server-side encryption uses one of the strongest block ciphers available to encrypt your data, 256-bit Advanced Encryption Standard (AES-256)."
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q21-i1.jpg",
        "answer": "",
        "explanation": "SSE-S3 Overview:"
      },
      {
        "link": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html"
      },
      {
        "answer": "",
        "explanation": "<strong>'x-amz-server-side-encryption': 'SSE-S3'</strong> - SSE-S3 (Amazon S3-Managed Keys) is an option available but it's not a valid header value."
      },
      {
        "answer": "",
        "explanation": "<strong>'x-amz-server-side-encryption': 'SSE-KMS'</strong> - SSE-KMS (AWS KMS-Managed Keys) is an option available but it's not a valid header value. A valid value would be 'aws:kms'"
      },
      {
        "answer": "",
        "explanation": "<strong>'x-amz-server-side-encryption': 'aws:kms'</strong> - Server-side encryption is the encryption of data at its destination by the application or service that receives it. AWS Key Management Service (AWS KMS) is a service that combines secure, highly available hardware and software to provide a key management system scaled for the cloud. Amazon S3 uses AWS KMS customer master keys (CMKs) to encrypt your Amazon S3 objects. AWS KMS encrypts only the object data. Any object metadata is not encrypted."
      },
      {
        "answer": "",
        "explanation": "This is a valid header value and you can use if you need more control over your keys like create, rotating, disabling them using AWS KMS. Otherwise, if you wish to let AWS S3 manage your keys just stick with SSE-S3."
      }
    ],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html",
      "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingEncryption.html"
    ]
  },
  {
    "id": 61,
    "question": "<p>Your company has been hired to build a resilient mobile voting app for an upcoming music award show that expects to have 5 to 20 million viewers. The mobile voting app will be marketed heavily months in advance so you are expected to handle millions of messages in the system. You are configuring Amazon Simple Queue Service (SQS) queues for your architecture that should receive messages from 20 KB to 200 KB.</p>\n\n<p>Is it possible to send these messages to SQS?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Yes, the max message size is 512KB</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>No, the max message size is 64KB</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>No, the max message size is 128KB</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Yes, the max message size is 256KB</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Yes, the max message size is 256KB</strong></p>\n\n<p>The minimum message size is 1 byte (1 character). The maximum is 262,144 bytes (256 KB).</p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q43-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q43-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://aws.amazon.com/sqs/faqs/\">https://aws.amazon.com/sqs/faqs/</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Yes, the max message size is 512KB</strong> - The max size is 256KB</p>\n\n<p><strong>No, the max message size is 128KB</strong> - The max size is 256KB</p>\n\n<p><strong>No, the max message size is 64KB</strong> - The max size is 256KB</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://aws.amazon.com/sqs/faqs/\">https://aws.amazon.com/sqs/faqs/</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Yes, the max message size is 256KB</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "The minimum message size is 1 byte (1 character). The maximum is 262,144 bytes (256 KB)."
      },
      {
        "link": "https://aws.amazon.com/sqs/faqs/"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Yes, the max message size is 512KB</strong> - The max size is 256KB"
      },
      {
        "answer": "",
        "explanation": "<strong>No, the max message size is 128KB</strong> - The max size is 256KB"
      },
      {
        "answer": "",
        "explanation": "<strong>No, the max message size is 64KB</strong> - The max size is 256KB"
      }
    ],
    "references": [
      "https://aws.amazon.com/sqs/faqs/"
    ]
  },
  {
    "id": 62,
    "question": "<p>A development team uses the AWS SDK for Java to maintain an application that stores data in AWS DynamoDB. The application makes use of <code>Scan</code> operations to return several items from a 25 GB table. There is no possibility of creating indexes to retrieve these items predictably. Developers are trying to get these specific rows from DynamoDB as fast as possible.</p>\n\n<p>Which of the following options can be used to improve the performance of the Scan operation?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use parallel scans</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Use a FilterExpression</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Use a ProjectionExpression</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Use a Query</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Troubleshooting and Optimization",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Use parallel scans</strong></p>\n\n<p>By default, the Scan operation processes data sequentially. Amazon DynamoDB returns data to the application in 1 MB increments, and an application performs additional Scan operations to retrieve the next 1 MB of data. The larger the table or index being scanned, the more time the Scan takes to complete. To address these issues, the Scan operation can logically divide a table or secondary index into multiple segments, with multiple application workers scanning the segments in parallel.</p>\n\n<p>To make use of a parallel Scan feature, you will need to run multiple worker threads or processes in parallel. Each worker will be able to scan a separate partition of a table concurrently with the other workers.</p>\n\n<p>How DynamoDB parallel Scan works:\n<img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q11-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q11-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Scan.html#Scan.ParallelScan\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Scan.html#Scan.ParallelScan</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Use a ProjectionExpression</strong> - A projection expression is a string that identifies the attributes you want. To retrieve a single attribute, specify its name. For multiple attributes, the names must be comma-separated</p>\n\n<p><strong>Use a FilterExpression</strong> - If you need to further refine the Scan results, you can optionally provide a filter expression. A filter expression determines which items within the Scan results should be returned to you. All of the other results are discarded.</p>\n\n<p>A filter expression is applied after a Scan finishes, but before the results are returned. Therefore, a Scan consumes the same amount of read capacity, regardless of whether a filter expression is present.</p>\n\n<p><strong>Use a Query</strong> - This could work if we were able to create an index, but the question says: \"There is no possibility of creating indexes to retrieve these items predictably\". As such, we cannot use a Query.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Scan.html#Scan.ParallelScan\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Scan.html#Scan.ParallelScan</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Use parallel scans</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "By default, the Scan operation processes data sequentially. Amazon DynamoDB returns data to the application in 1 MB increments, and an application performs additional Scan operations to retrieve the next 1 MB of data. The larger the table or index being scanned, the more time the Scan takes to complete. To address these issues, the Scan operation can logically divide a table or secondary index into multiple segments, with multiple application workers scanning the segments in parallel."
      },
      {
        "answer": "",
        "explanation": "To make use of a parallel Scan feature, you will need to run multiple worker threads or processes in parallel. Each worker will be able to scan a separate partition of a table concurrently with the other workers."
      },
      {
        "image": "https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q11-i1.jpg",
        "answer": "",
        "explanation": "How DynamoDB parallel Scan works:"
      },
      {
        "link": "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Scan.html#Scan.ParallelScan"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Use a ProjectionExpression</strong> - A projection expression is a string that identifies the attributes you want. To retrieve a single attribute, specify its name. For multiple attributes, the names must be comma-separated"
      },
      {
        "answer": "",
        "explanation": "<strong>Use a FilterExpression</strong> - If you need to further refine the Scan results, you can optionally provide a filter expression. A filter expression determines which items within the Scan results should be returned to you. All of the other results are discarded."
      },
      {
        "answer": "",
        "explanation": "A filter expression is applied after a Scan finishes, but before the results are returned. Therefore, a Scan consumes the same amount of read capacity, regardless of whether a filter expression is present."
      },
      {
        "answer": "",
        "explanation": "<strong>Use a Query</strong> - This could work if we were able to create an index, but the question says: \"There is no possibility of creating indexes to retrieve these items predictably\". As such, we cannot use a Query."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Scan.html#Scan.ParallelScan"
    ]
  },
  {
    "id": 63,
    "question": "<p>As a Full-stack Web Developer, you are involved with every aspect of a company’s platform from development with PHP and JavaScript to the configuration of NoSQL databases with Amazon DynamoDB. You are not concerned about your response receiving stale data from your database and need to perform 16 eventually consistent reads per second of 12 KB in size each.</p>\n\n<p>How many read capacity units (RCUs) do you need?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>12</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>192</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>24</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>48</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct option:</p>\n\n<p>Before proceeding with the calculations, please review the following:</p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q64-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q64-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q64-i2.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q64-i2.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p>\n\n<p>via - <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html</a></p>\n\n<p><strong>24</strong></p>\n\n<p>One read capacity unit represents <strong>two</strong> eventually consistent reads per second, for an item up to <strong>4 KB</strong> in size.\nSo that means that for an item of 12KB in size, we need 3 RCU (12 KB / 4 KB) for <strong>two</strong> eventually consistent reads per second. As we need 16 eventually consistent reads per second, we need 3 * (16 / 2) = 24 RCU.</p>\n\n<p>Incorrect options:</p>\n\n<p><strong>12</strong></p>\n\n<p><strong>192</strong></p>\n\n<p><strong>48</strong></p>\n\n<p>These three options contradict the details provided in the explanation above, so these are incorrect.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ProvisionedThroughput.html\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ProvisionedThroughput.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "",
        "explanation": "Before proceeding with the calculations, please review the following:"
      },
      {
        "link": "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html",
        "answer": "",
        "explanation": "via - <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html</a>"
      },
      {
        "answer": "<strong>24</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "One read capacity unit represents <strong>two</strong> eventually consistent reads per second, for an item up to <strong>4 KB</strong> in size.\nSo that means that for an item of 12KB in size, we need 3 RCU (12 KB / 4 KB) for <strong>two</strong> eventually consistent reads per second. As we need 16 eventually consistent reads per second, we need 3 * (16 / 2) = 24 RCU."
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "<strong>12</strong>",
        "explanation": ""
      },
      {
        "answer": "<strong>192</strong>",
        "explanation": ""
      },
      {
        "answer": "<strong>48</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "These three options contradict the details provided in the explanation above, so these are incorrect."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html",
      "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ProvisionedThroughput.html"
    ]
  },
  {
    "id": 64,
    "question": "<p>A firm maintains a highly available application that receives HTTPS traffic from mobile devices and web browsers. The main Developer would like to set up the Load Balancer routing to route traffic from web servers to smart.com/api and from mobile devices to smart.com/mobile. A developer advises that the previous recommendation is not needed and that requests should be sent to api.smart.com and mobile.smart.com instead.</p>\n\n<p>Which of the following routing options were discussed in the given use-case? (select two)</p>",
    "corrects": [
      1,
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Path based</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Web browser version</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Host based</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Client IP</p>",
        "correct": false
      },
      {
        "id": 5,
        "answer": "<p>Cookie value</p>",
        "correct": false
      }
    ],
    "multiple": true,
    "domain": "Development with AWS Services",
    "explanation": "<p>Correct options:</p>\n\n<p><strong>Path based</strong></p>\n\n<p>You can create a listener with rules to forward requests based on the URL path. This is known as path-based routing. If you are running microservices, you can route traffic to multiple back-end services using path-based routing. For example, you can route general requests to one target group and request to render images to another target group.</p>\n\n<p>This path-based routing allows you to route requests to, for example, /api to one set of servers (also known as target groups) and /mobile to another set. Segmenting your traffic in this way gives you the ability to control the processing environment for each category of requests. Perhaps /api requests are best processed on Compute Optimized instances, while /mobile requests are best handled by Memory Optimized instances.</p>\n\n<p><strong>Host based</strong></p>\n\n<p>You can create Application Load Balancer rules that route incoming traffic based on the domain name specified in the Host header. Requests to api.example.com can be sent to one target group, requests to mobile.example.com to another, and all others (by way of a default rule) can be sent to a third. You can also create rules that combine host-based routing and path-based routing. This would allow you to route requests to api.example.com/production and api.example.com/sandbox to distinct target groups.</p>\n\n<p><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q54-i1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://assets-pt.media.datacumulus.com/aws-dva-pt/assets/pt4-q54-i1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div>\nvia - <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types\">https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types</a><p></p>\n\n<p>Incorrect options:</p>\n\n<p><strong>Client IP</strong> - This option has been added as a distractor. Routing is not based on the client's IP address.</p>\n\n<p><strong>Web browser version</strong> - Routing has nothing to do with the client's web browser, if it was then there is something sneaky going on.</p>\n\n<p><strong>Cookie value</strong> - Application Load Balancers support load balancer-generated cookies only and you cannot modify them. When routing sticky sessions to route requests to the same target then cookies are needed to be supported by the client's browser.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://aws.amazon.com/blogs/aws/new-host-based-routing-support-for-aws-application-load-balancers/\">https://aws.amazon.com/blogs/aws/new-host-based-routing-support-for-aws-application-load-balancers/</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Path based</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "You can create a listener with rules to forward requests based on the URL path. This is known as path-based routing. If you are running microservices, you can route traffic to multiple back-end services using path-based routing. For example, you can route general requests to one target group and request to render images to another target group."
      },
      {
        "answer": "",
        "explanation": "This path-based routing allows you to route requests to, for example, /api to one set of servers (also known as target groups) and /mobile to another set. Segmenting your traffic in this way gives you the ability to control the processing environment for each category of requests. Perhaps /api requests are best processed on Compute Optimized instances, while /mobile requests are best handled by Memory Optimized instances."
      },
      {
        "answer": "<strong>Host based</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "You can create Application Load Balancer rules that route incoming traffic based on the domain name specified in the Host header. Requests to api.example.com can be sent to one target group, requests to mobile.example.com to another, and all others (by way of a default rule) can be sent to a third. You can also create rules that combine host-based routing and path-based routing. This would allow you to route requests to api.example.com/production and api.example.com/sandbox to distinct target groups."
      },
      {
        "link": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Client IP</strong> - This option has been added as a distractor. Routing is not based on the client's IP address."
      },
      {
        "answer": "",
        "explanation": "<strong>Web browser version</strong> - Routing has nothing to do with the client's web browser, if it was then there is something sneaky going on."
      },
      {
        "answer": "",
        "explanation": "<strong>Cookie value</strong> - Application Load Balancers support load balancer-generated cookies only and you cannot modify them. When routing sticky sessions to route requests to the same target then cookies are needed to be supported by the client's browser."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#rule-condition-types",
      "https://aws.amazon.com/blogs/aws/new-host-based-routing-support-for-aws-application-load-balancers/"
    ]
  },
  {
    "id": 65,
    "question": "<p>A developer has pushed a Lambda function that pushes data into an RDS MySQL database with the following Python code:</p>\n\n<pre><code>def handler(event, context):\n    mysql = mysqlclient.connect()\n    data = event['data']\n    mysql.execute(f\"INSERT INTO foo (bar) VALUES (${data});\")\n    mysql.close()\n    return\n</code></pre>\n\n<p>On the first execution, the Lambda function takes 2 seconds to execute. On the second execution and all the subsequent ones, the Lambda function takes 1.9 seconds to execute.</p>\n\n<p>What can be done to improve the execution time of the Lambda function?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Increase the Lambda function RAM</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Upgrade the MySQL instance type</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Move the database connection out of the handler</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Change the runtime to Node.js</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "Troubleshooting and Optimization",
    "explanation": "<p>Correct option:</p>\n\n<p><strong>Move the database connection out of the handler</strong></p>\n\n<p>Here at every Lambda function execution, the database connection handler will be created, and then closed. These connections steps are expensive in terms of time, and thus should be moved out of the <code>handler</code> function so that they are kept in the function execution context, and re-used across function calls. This is what the function should look like in the end:</p>\n\n<pre><code>mysql = mysqlclient.connect()\n\ndef handler(event, context):\n    data = event['data']\n    mysql.execute(f\"INSERT INTO foo (bar) VALUES (${data});\")\n    return\n</code></pre>\n\n<p>Incorrect options:</p>\n\n<p><strong>Upgrade the MySQL instance type</strong> - The bottleneck here is the MySQL connection object, not the MySQL instance itself.</p>\n\n<p><strong>Change the runtime to Node.js</strong> - Re-writing the function in another runtime won't improve the performance.</p>\n\n<p><strong>Increase the Lambda function RAM</strong> - While this may help speed-up the Lambda function, as increasing the RAM also increases the CPU allocated to your function, it only makes sense if RAM or CPU is a critical factor in the Lambda function performance. Here, the connection object is at fault.</p>\n\n<p>Reference:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/running-lambda-code.html\">https://docs.aws.amazon.com/lambda/latest/dg/running-lambda-code.html</a></p>\n",
    "correctAnswerExplanations": [
      {
        "answer": "<strong>Move the database connection out of the handler</strong>",
        "explanation": ""
      },
      {
        "answer": "",
        "explanation": "Here at every Lambda function execution, the database connection handler will be created, and then closed. These connections steps are expensive in terms of time, and thus should be moved out of the <code>handler</code> function so that they are kept in the function execution context, and re-used across function calls. This is what the function should look like in the end:"
      },
      {
        "answer": "",
        "explanation": "<pre><code>mysql = mysqlclient.connect()\n\ndef handler(event, context):\n    data = event['data']\n    mysql.execute(f\"INSERT INTO foo (bar) VALUES (${data});\")\n    return\n</code></pre>"
      }
    ],
    "incorrectAnswerExplanations": [
      {
        "answer": "",
        "explanation": "<strong>Upgrade the MySQL instance type</strong> - The bottleneck here is the MySQL connection object, not the MySQL instance itself."
      },
      {
        "answer": "",
        "explanation": "<strong>Change the runtime to Node.js</strong> - Re-writing the function in another runtime won't improve the performance."
      },
      {
        "answer": "",
        "explanation": "<strong>Increase the Lambda function RAM</strong> - While this may help speed-up the Lambda function, as increasing the RAM also increases the CPU allocated to your function, it only makes sense if RAM or CPU is a critical factor in the Lambda function performance. Here, the connection object is at fault."
      }
    ],
    "references": [
      "https://docs.aws.amazon.com/lambda/latest/dg/running-lambda-code.html"
    ]
  }
]