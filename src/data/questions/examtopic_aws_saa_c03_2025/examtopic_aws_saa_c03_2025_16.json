[
  {
    "id": 977,
    "question": "A financial services company plans to launch a new application on AWS to handle sensitive financial transactions. The company will deploy the application on Amazon EC2 instances. The company will use Amazon RDS for MySQL as the database. The company’s security policies mandate that data must be encrypted at rest and in transit.<br><br>Which solution will meet these requirements with the LEAST operational overhead?",
    "answers": [
      {
        "id": 1,
        "answer": "Configure encryption at rest for Amazon RDS for MySQL by using AWS KMS managed keys. Configure AWS Certificate Manager (ACM) SSL/TLS certificates for encryption in transit.",
        "correct": true
      },
      {
        "id": 2,
        "answer": "Configure encryption at rest for Amazon RDS for MySQL by using AWS KMS managed keys. Configure IPsec tunnels for encryption in transit.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Implement third-party application-level data encryption before storing data in Amazon RDS for MySQL. Configure AWS Certificate Manager (ACM) SSL/TLS certificates for encryption in transit.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Configure encryption at rest for Amazon RDS for MySQL by using AWS KMS managed keys. Configure a VPN connection to enable private connectivity to encrypt data in transit.",
        "correct": false
      }
    ],
    "corrects": [
      1
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 978,
    "question": "A company is migrating its on-premises Oracle database to an Amazon RDS for Oracle database. The company needs to retain data for 90 days to meet regulatory requirements. The company must also be able to restore the database to a specific point in time for up to 14 days.<br><br>Which solution will meet these requirements with the LEAST operational overhead?",
    "answers": [
      {
        "id": 1,
        "answer": "Create Amazon RDS automated backups. Set the retention period to 90 days.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Create an Amazon RDS manual snapshot every day. Delete manual snapshots that are older than 90 days.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Use the Amazon Aurora Clone feature for Oracle to create a point-in-time restore. Delete clones that are older than 90 days.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Create a backup plan that has a retention period of 90 days by using AWS Backup for Amazon RDS.",
        "correct": true
      }
    ],
    "corrects": [
      4
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 979,
    "question": "A company is developing a new application that uses a relational database to store user data and application configurations. The company expects the application to have steady user growth. The company expects the database usage to be variable and read-heavy, with occasional writes.<br><br>The company wants to cost-optimize the database solution. The company wants to use an AWS managed database solution that will provide the necessary performance.<br><br>Which solution will meet these requirements MOST cost-effectively?",
    "answers": [
      {
        "id": 1,
        "answer": "Deploy the database on Amazon RDS. Use Provisioned IOPS SSD storage to ensure consistent performance for read and write operations.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Deploy the database on Amazon Aurora Serverless to automatically scale the database capacity based on actual usage to accommodate the workload.",
        "correct": true
      },
      {
        "id": 3,
        "answer": "Deploy the database on Amazon DynamoDB. Use on-demand capacity mode to automatically scale throughput to accommodate the workload.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Deploy the database on Amazon RDS. Use magnetic storage and use read replicas to accommodate the workload.",
        "correct": false
      }
    ],
    "corrects": [
      2
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 980,
    "question": "A company hosts its application on several Amazon EC2 instances inside a VPC. The company creates a dedicated Amazon S3 bucket for each customer to store their relevant information in Amazon S3.<br><br>The company wants to ensure that the application running on EC2 instances can securely access only the S3 buckets that belong to the company’s AWS account.<br><br>Which solution will meet these requirements with the LEAST operational overhead?",
    "answers": [
      {
        "id": 1,
        "answer": "Create a gateway endpoint for Amazon S3 that is attached to the VPC. Update the IAM instance profile policy to provide access to only the specific buckets that the application needs.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Create a NAT gateway in a public subnet with a security group that allows access to only Amazon S3. Update the route tables to use the NAT Gateway.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Create a gateway endpoint for Amazon S3 that is attached to the VPUpdate the IAM instance profile policy with a Deny action and the following condition key:<br><br><img src=\"https://img.examtopics.com/aws-certified-solutions-architect-associate-saa-c03/image12.png\"><br>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "Create a NAT Gateway in a public subnet. Update route tables to use the NAT Gateway. Assign bucket policies for all buckets with a Deny action and the following condition key:<br><br><img src=\"https://img.examtopics.com/aws-certified-solutions-architect-associate-saa-c03/image13.png\">",
        "correct": false
      }
    ],
    "corrects": [
      3
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 981,
    "question": "A company is building a cloud-based application on AWS that will handle sensitive customer data. The application uses Amazon RDS for the database, Amazon S3 for object storage, and S3 Event Notifications that invoke AWS Lambda for serverless processing.<br><br>The company uses AWS IAM Identity Center to manage user credentials. The development, testing, and operations teams need secure access to Amazon RDS and Amazon S3 while ensuring the confidentiality of sensitive customer data. The solution must comply with the principle of least privilege.<br><br>Which solution meets these requirements with the LEAST operational overhead?",
    "answers": [
      {
        "id": 1,
        "answer": "Use IAM roles with least privilege to grant all the teams access. Assign IAM roles to each team with customized IAM policies defining specific permission for Amazon RDS and S3 object access based on team responsibilities.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Enable IAM Identity Center with an Identity Center directory. Create and configure permission sets with granular access to Amazon RDS and Amazon S3. Assign all the teams to groups that have specific access with the permission sets.",
        "correct": true
      },
      {
        "id": 3,
        "answer": "Create individual IAM users for each member in all the teams with role-based permissions. Assign the IAM roles with predefined policies for RDS and S3 access to each user based on user needs. Implement IAM Access Analyzer for periodic credential evaluation.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Use AWS Organizations to create separate accounts for each team. Implement cross-account IAM roles with least privilege. Grant specific permission for RDS and S3 access based on team roles and responsibilities.",
        "correct": false
      }
    ],
    "corrects": [
      2
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 982,
    "question": "A company has an Amazon S3 bucket that contains sensitive data files. The company has an application that runs on virtual machines in an on-premises data center. The company currently uses AWS IAM Identity Center.<br><br>The application requires temporary access to files in the S3 bucket. The company wants to grant the application secure access to the files in the S3 bucket.<br><br>Which solution will meet these requirements?",
    "answers": [
      {
        "id": 1,
        "answer": "Create an S3 bucket policy that permits access to the bucket from the public IP address range of the company’s on-premises data center.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Use IAM Roles Anywhere to obtain security credentials in IAM Identity Center that grant access to the S3 bucket. Configure the virtual machines to assume the role by using the AWS CLI.",
        "correct": true
      },
      {
        "id": 3,
        "answer": "Install the AWS CLI on the virtual machine. Configure the AWS CLI with access keys from an IAM user that has access to the bucket.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Create an IAM user and policy that grants access to the bucket. Store the access key and secret key for the IAM user in AWS Secrets Manager. Configure the application to retrieve the access key and secret key at startup.",
        "correct": false
      }
    ],
    "corrects": [
      2
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 983,
    "question": "A company hosts its core network services, including directory services and DNS, in its on-premises data center. The data center is connected to the AWS Cloud using AWS Direct Connect (DX). Additional AWS accounts are planned that will require quick, cost-effective, and consistent access to these network services.<br><br>What should a solutions architect implement to meet these requirements with the LEAST amount of operational overhead?",
    "answers": [
      {
        "id": 1,
        "answer": "Create a DX connection in each new account. Route the network traffic to the on-premises servers.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Configure VPC endpoints in the DX VPC for all required services. Route the network traffic to the on-premises servers.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Create a VPN connection between each new account and the DX VPRoute the network traffic to the on-premises servers.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Configure AWS Transit Gateway between the accounts. Assign DX to the transit gateway and route network traffic to the on-premises servers.",
        "correct": true
      }
    ],
    "corrects": [
      4
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 984,
    "question": "A company hosts its main public web application in one AWS Region across multiple Availability Zones. The application uses an Amazon EC2 Auto Scaling group and an Application Load Balancer (ALB).<br><br>A web development team needs a cost-optimized compute solution to improve the company’s ability to serve dynamic content globally to millions of customers.<br><br>Which solution will meet these requirements?",
    "answers": [
      {
        "id": 1,
        "answer": "Create an Amazon CloudFront distribution. Configure the existing ALB as the origin.",
        "correct": true
      },
      {
        "id": 2,
        "answer": "Use Amazon Route 53 to serve traffic to the ALB and EC2 instances based on the geographic location of each customer.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Create an Amazon S3 bucket with public read access enabled. Migrate the web application to the S3 bucket. Configure the S3 bucket for website hosting.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Use AWS Direct Connect to directly serve content from the web application to the location of each customer.",
        "correct": false
      }
    ],
    "corrects": [
      1
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 985,
    "question": "A company stores user data in AWS. The data is used continuously with peak usage during business hours. Access patterns vary, with some data not being used for months at a time. A solutions architect must choose a cost-effective solution that maintains the highest level of durability while maintaining high availability.<br><br>Which storage solution meets these requirements?",
    "answers": [
      {
        "id": 1,
        "answer": "Amazon S3 Standard",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Amazon S3 Intelligent-Tiering",
        "correct": true
      },
      {
        "id": 3,
        "answer": "Amazon S3 Glacier Deep Archive",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Amazon S3 One Zone-Infrequent Access (S3 One Zone-IA)",
        "correct": false
      }
    ],
    "corrects": [
      2
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 986,
    "question": "A company is testing an application that runs on an Amazon EC2 Linux instance. A single 500 GB Amazon Elastic Block Store (Amazon EBS) General Purpose SSO (gp2) volume is attached to the EC2 instance.<br><br>The company will deploy the application on multiple EC2 instances in an Auto Scaling group. All instances require access to the data that is stored in the EBS volume. The company needs a highly available and resilient solution that does not introduce significant changes to the application's code.<br><br>Which solution will meet these requirements?",
    "answers": [
      {
        "id": 1,
        "answer": "Provision an EC2 instance that uses NFS server software. Attach a single 500 GB gp2 EBS volume to the instance.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Provision an Amazon FSx for Windows File Server file system. Configure the file system as an SMB file store within a single Availability Zone.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Provision an EC2 instance with two 250 GB Provisioned IOPS SSD EBS volumes.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Provision an Amazon Elastic File System (Amazon EFS) file system. Configure the file system to use General Purpose performance mode.",
        "correct": true
      }
    ],
    "corrects": [
      4
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 987,
    "question": "A company recently launched a new application for its customers. The application runs on multiple Amazon EC2 instances across two Availability Zones. End users use TCP to communicate with the application.<br><br>The application must be highly available and must automatically scale as the number of users increases.<br><br>Which combination of steps will meet these requirements MOST cost-effectively? (Choose two.)",
    "answers": [
      {
        "id": 1,
        "answer": "Add a Network Load Balancer in front of the EC2 instances.",
        "correct": true
      },
      {
        "id": 2,
        "answer": "Configure an Auto Scaling group for the EC2 instances.",
        "correct": true
      },
      {
        "id": 3,
        "answer": "Add an Application Load Balancer in front of the EC2 instances.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Manually add more EC2 instances for the application.",
        "correct": false
      },
      {
        "id": 5,
        "answer": "Add a Gateway Load Balancer in front of the EC2 instances.",
        "correct": false
      }
    ],
    "corrects": [
      1,
      2
    ],
    "multiple": true,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 988,
    "question": "A company is designing the architecture for a new mobile app that uses the AWS Cloud. The company uses organizational units (OUs) in AWS Organizations to manage its accounts. The company wants to tag Amazon EC2 instances with data sensitivity by using values of sensitive and nonsensitive. IAM identities must not be able to delete a tag or create instances without a tag.<br><br>Which combination of steps will meet these requirements? (Choose two.)",
    "answers": [
      {
        "id": 1,
        "answer": "In Organizations, create a new tag policy that specifies the data sensitivity tag key and the required values. Enforce the tag values for the EC2 instances. Attach the tag policy to the appropriate OU.",
        "correct": true
      },
      {
        "id": 2,
        "answer": "In Organizations, create a new service control policy (SCP) that specifies the data sensitivity tag key and the required tag values. Enforce the tag values for the EC2 instances. Attach the SCP to the appropriate OU.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Create a tag policy to deny running instances when a tag key is not specified. Create another tag policy that prevents identities from deleting tags. Attach the tag policies to the appropriate OU.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Create a service control policy (SCP) to deny creating instances when a tag key is not specified. Create another SCP that prevents identities from deleting tags. Attach the SCPs to the appropriate OU.",
        "correct": true
      },
      {
        "id": 5,
        "answer": "Create an AWS Config rule to check if EC2 instances use the data sensitivity tag and the specified values. Configure an AWS Lambda function to delete the resource if a noncompliant resource is found.",
        "correct": false
      }
    ],
    "corrects": [
      1,
      4
    ],
    "multiple": true,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 989,
    "question": "A company runs database workloads on AWS that are the backend for the company's customer portals. The company runs a Multi-AZ database cluster on Amazon RDS for PostgreSQL.<br><br>The company needs to implement a 30-day backup retention policy. The company currently has both automated RDS backups and manual RDS backups. The company wants to maintain both types of existing RDS backups that are less than 30 days old.<br><br>Which solution will meet these requirements MOST cost-effectively?",
    "answers": [
      {
        "id": 1,
        "answer": "Configure the RDS backup retention policy to 30 days for automated backups by using AWS Backup. Manually delete manual backups that are older than 30 days.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Disable RDS automated backups. Delete automated backups and manual backups that are older than 30 days. Configure the RDS backup retention policy to 30 days for automated backups.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Configure the RDS backup retention policy to 30 days for automated backups. Manually delete manual backups that are older than 30 days.",
        "correct": true
      },
      {
        "id": 4,
        "answer": "Disable RDS automated backups. Delete automated backups and manual backups that are older than 30 days automatically by using AWS CloudFormation. Configure the RDS backup retention policy to 30 days for automated backups.",
        "correct": false
      }
    ],
    "corrects": [
      3
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 990,
    "question": "A company is planning to migrate a legacy application to AWS. The application currently uses NFS to communicate to an on-premises storage solution to store application data. The application cannot be modified to use any other communication protocols other than NFS for this purpose.<br><br>Which storage solution should a solutions architect recommend for use after the migration?",
    "answers": [
      {
        "id": 1,
        "answer": "AWS DataSync",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Amazon Elastic Block Store (Amazon EBS)",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Amazon Elastic File System (Amazon EFS)",
        "correct": true
      },
      {
        "id": 4,
        "answer": "Amazon EMR File System (Amazon EMRFS)",
        "correct": false
      }
    ],
    "corrects": [
      3
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 991,
    "question": "A company uses GPS trackers to document the migration patterns of thousands of sea turtles. The trackers check every 5 minutes to see if a turtle has moved more than 100 yards (91.4 meters). If a turtle has moved, its tracker sends the new coordinates to a web application running on three Amazon EC2 instances that are in multiple Availability Zones in one AWS Region.<br><br>Recently, the web application was overwhelmed while processing an unexpected volume of tracker data. Data was lost with no way to replay the events. A solutions architect must prevent this problem from happening again and needs a solution with the least operational overhead.<br><br>What should the solutions architect do to meet these requirements?",
    "answers": [
      {
        "id": 1,
        "answer": "Create an Amazon S3 bucket to store the data. Configure the application to scan for new data in the bucket for processing.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Create an Amazon API Gateway endpoint to handle transmitted location coordinates. Use an AWS Lambda function to process each item concurrently.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Create an Amazon Simple Queue Service (Amazon SQS) queue to store the incoming data. Configure the application to poll for new messages for processing.",
        "correct": true
      },
      {
        "id": 4,
        "answer": "Create an Amazon DynamoDB table to store transmitted location coordinates. Configure the application to query the table for new data for processing. Use TTL to remove data that has been processed.",
        "correct": false
      }
    ],
    "corrects": [
      3
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 992,
    "question": "A company's software development team needs an Amazon RDS Multi-AZ cluster. The RDS cluster will serve as a backend for a desktop client that is deployed on premises. The desktop client requires direct connectivity to the RDS cluster.<br><br>The company must give the development team the ability to connect to the cluster by using the client when the team is in the office.<br><br>Which solution provides the required connectivity MOST securely?",
    "answers": [
      {
        "id": 1,
        "answer": "Create a VPC and two public subnets. Create the RDS cluster in the public subnets. Use AWS Site-to-Site VPN with a customer gateway in the company's office.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Create a VPC and two private subnets. Create the RDS cluster in the private subnets. Use AWS Site-to-Site VPN with a customer gateway in the company's office.",
        "correct": true
      },
      {
        "id": 3,
        "answer": "Create a VPC and two private subnets. Create the RDS cluster in the private subnets. Use RDS security groups to allow the company's office IP ranges to access the cluster.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Create a VPC and two public subnets. Create the RDS cluster in the public subnets. Create a cluster user for each developer. Use RDS security groups to allow the users to access the cluster.",
        "correct": false
      }
    ],
    "corrects": [
      2
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 993,
    "question": "A solutions architect is creating an application that will handle batch processing of large amounts of data. The input data will be held in Amazon S3 and the output data will be stored in a different S3 bucket. For processing, the application will transfer the data over the network between multiple Amazon EC2 instances.<br><br>What should the solutions architect do to reduce the overall data transfer costs?",
    "answers": [
      {
        "id": 1,
        "answer": "Place all the EC2 instances in an Auto Scaling group.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Place all the EC2 instances in the same AWS Region.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Place all the EC2 instances in the same Availability Zone.",
        "correct": true
      },
      {
        "id": 4,
        "answer": "Place all the EC2 instances in private subnets in multiple Availability Zones.",
        "correct": false
      }
    ],
    "corrects": [
      3
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 994,
    "question": "A company hosts a multi-tier web application that uses an Amazon Aurora MySQL DB cluster for storage. The application tier is hosted on Amazon EC2 instances. The company's IT security guidelines mandate that the database credentials be encrypted and rotated every 14 days.<br><br>What should a solutions architect do to meet this requirement with the LEAST operational effort?",
    "answers": [
      {
        "id": 1,
        "answer": "Create a new AWS Key Management Service (AWS KMS) encryption key. Use AWS Secrets Manager to create a new secret that uses the KMS key with the appropriate credentials. Associate the secret with the Aurora DB cluster. Configure a custom rotation period of 14 days.",
        "correct": true
      },
      {
        "id": 2,
        "answer": "Create two parameters in AWS Systems Manager Parameter Store: one for the user name as a string parameter and one that uses the SecureString type for the password. Select AWS Key Management Service (AWS KMS) encryption for the password parameter, and load these parameters in the application tier. Implement an AWS Lambda function that rotates the password every 14 days.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Store a file that contains the credentials in an AWS Key Management Service (AWS KMS) encrypted Amazon Elastic File System (Amazon EFS) file system. Mount the EFS file system in all EC2 instances of the application tier. Restrict the access to the file on the file system so that the application can read the file and that only super users can modify the file. Implement an AWS Lambda function that rotates the key in Aurora every 14 days and writes new credentials into the file.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Store a file that contains the credentials in an AWS Key Management Service (AWS KMS) encrypted Amazon S3 bucket that the application uses to load the credentials. Download the file to the application regularly to ensure that the correct credentials are used. Implement an AWS Lambda function that rotates the Aurora credentials every 14 days and uploads these credentials to the file in the S3 bucket.",
        "correct": false
      }
    ],
    "corrects": [
      1
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 995,
    "question": "A streaming media company is rebuilding its infrastructure to accommodate increasing demand for video content that users consume daily.<br><br>The company needs to process terabyte-sized videos to block some content in the videos. Video processing can take up to 20 minutes.<br><br>The company needs a solution that will scale with demand and remain cost-effective.<br><br>Which solution will meet these requirements?",
    "answers": [
      {
        "id": 1,
        "answer": "Use AWS Lambda functions to process videos. Store video metadata in Amazon DynamoDB. Store video content in Amazon S3 Intelligent-Tiering.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Use Amazon Elastic Container Service (Amazon ECS) and AWS Fargate to implement microservices to process videos. Store video metadata in Amazon Aurora. Store video content in Amazon S3 Intelligent-Tiering.",
        "correct": true
      },
      {
        "id": 3,
        "answer": "Use Amazon EC2 instances in an Auto Scaling group behind an Application Load Balancer (ALB) to process videos. Store video content in Amazon S3 Standard. Use Amazon Simple Queue Service (Amazon SQS) for queuing and to decouple processing tasks.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Deploy a containerized video processing application on Amazon Elastic Kubernetes Service (Amazon EKS) on Amazon EC2. Store video metadata in Amazon RDS in a single Availability Zone. Store video content in Amazon S3 Glacier Deep Archive.",
        "correct": false
      }
    ],
    "corrects": [
      2
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 996,
    "question": "A company runs an on-premises application on a Kubernetes cluster. The company recently added millions of new customers. The company's existing on-premises infrastructure is unable to handle the large number of new customers. The company needs to migrate the on-premises application to the AWS Cloud.<br><br>The company will migrate to an Amazon Elastic Kubernetes Service (Amazon EKS) cluster. The company does not want to manage the underlying compute infrastructure for the new architecture on AWS.<br><br>Which solution will meet these requirements with the LEAST operational overhead?",
    "answers": [
      {
        "id": 1,
        "answer": "Use a self-managed node to supply compute capacity. Deploy the application to the new EKS cluster.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Use managed node groups to supply compute capacity. Deploy the application to the new EKS cluster.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Use AWS Fargate to supply compute capacity. Create a Fargate profile. Use the Fargate profile to deploy the application.",
        "correct": true
      },
      {
        "id": 4,
        "answer": "Use managed node groups with Karpenter to supply compute capacity. Deploy the application to the new EKS cluster.",
        "correct": false
      }
    ],
    "corrects": [
      3
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 997,
    "question": "A company is launching a new application that requires a structured database to store user profiles, application settings, and transactional data. The database must be scalable with application traffic and must offer backups.<br><br>Which solution will meet these requirements MOST cost-effectively?",
    "answers": [
      {
        "id": 1,
        "answer": "Deploy a self-managed database on Amazon EC2 instances by using open source software. Use Spot Instances for cost optimization. Configure automated backups to Amazon S3.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Use Amazon RDS. Use on-demand capacity mode for the database with General Purpose SSD storage. Configure automatic backups with a retention period of 7 days.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Use Amazon Aurora Serverless for the database. Use serverless capacity scaling. Configure automated backups to Amazon S3.",
        "correct": true
      },
      {
        "id": 4,
        "answer": "Deploy a self-managed NoSQL database on Amazon EC2 instances. Use Reserved Instances for cost optimization. Configure automated backups directly to Amazon S3 Glacier Flexible Retrieval.",
        "correct": false
      }
    ],
    "corrects": [
      3
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 998,
    "question": "A company runs its legacy web application on AWS. The web application server runs on an Amazon EC2 instance in the public subnet of a VPC. The web application server collects images from customers and stores the image files in a locally attached Amazon Elastic Block Store (Amazon EBS) volume. The image files are uploaded every night to an Amazon S3 bucket for backup.<br><br>A solutions architect discovers that the image files are being uploaded to Amazon S3 through the public endpoint. The solutions architect needs to ensure that traffic to Amazon S3 does not use the public endpoint.<br><br>Which solution will meet these requirements?",
    "answers": [
      {
        "id": 1,
        "answer": "Create a gateway VPC endpoint for the S3 bucket that has the necessary permissions for the VPC. Configure the subnet route table to use the gateway VPC endpoint.",
        "correct": true
      },
      {
        "id": 2,
        "answer": "Move the S3 bucket inside the VPC. Configure the subnet route table to access the S3 bucket through private IP addresses.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Create an Amazon S3 access point for the Amazon EC2 instance inside the VPConfigure the web application to upload by using the Amazon S3 access point.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Configure an AWS Direct Connect connection between the VPC that has the Amazon EC2 instance and Amazon S3 to provide a dedicated network path.",
        "correct": false
      }
    ],
    "corrects": [
      1
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 999,
    "question": "A company is creating a prototype of an ecommerce website on AWS. The website consists of an Application Load Balancer, an Auto Scaling group of Amazon EC2 instances for web servers, and an Amazon RDS for MySQL DB instance that runs with the Single-AZ configuration.<br><br>The website is slow to respond during searches of the product catalog. The product catalog is a group of tables in the MySQL database that the company does not update frequently. A solutions architect has determined that the CPU utilization on the DB instance is high when product catalog searches occur.<br><br>What should the solutions architect recommend to improve the performance of the website during searches of the product catalog?",
    "answers": [
      {
        "id": 1,
        "answer": "Migrate the product catalog to an Amazon Redshift database. Use the COPY command to load the product catalog tables.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Implement an Amazon ElastiCache for Redis cluster to cache the product catalog. Use lazy loading to populate the cache.",
        "correct": true
      },
      {
        "id": 3,
        "answer": "Add an additional scaling policy to the Auto Scaling group to launch additional EC2 instances when database response is slow.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Turn on the Multi-AZ configuration for the DB instance. Configure the EC2 instances to throttle the product catalog queries that are sent to the database.",
        "correct": false
      }
    ],
    "corrects": [
      2
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 1000,
    "question": "A company currently stores 5 TB of data in on-premises block storage systems. The company's current storage solution provides limited space for additional data. The company runs applications on premises that must be able to retrieve frequently accessed data with low latency. The company requires a cloud-based storage solution.<br><br>Which solution will meet these requirements with the MOST operational efficiency?",
    "answers": [
      {
        "id": 1,
        "answer": "Use Amazon S3 File Gateway. Integrate S3 File Gateway with the on-premises applications to store and directly retrieve files by using the SMB file system.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Use an AWS Storage Gateway Volume Gateway with cached volumes as iSCSI targets.",
        "correct": true
      },
      {
        "id": 3,
        "answer": "Use an AWS Storage Gateway Volume Gateway with stored volumes as iSCSI targets.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Use an AWS Storage Gateway Tape Gateway. Integrate Tape Gateway with the on-premises applications to store virtual tapes in Amazon S3.",
        "correct": false
      }
    ],
    "corrects": [
      2
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 1001,
    "question": "A company operates a food delivery service. Because of recent growth, the company's order processing system is experiencing scaling problems during peak traffic hours. The current architecture includes Amazon EC2 instances in an Auto Scaling group that collect orders from an application. A second group of EC2 instances in an Auto Scaling group fulfills the orders.<br><br>The order collection process occurs quickly, but the order fulfillment process can take longer. Data must not be lost because of a scaling event.<br><br>A solutions architect must ensure that the order collection process and the order fulfillment process can both scale adequately during peak traffic hours.<br><br>Which solution will meet these requirements?",
    "answers": [
      {
        "id": 1,
        "answer": "Use Amazon CloudWatch to monitor the CPUUtilization metric for each instance in both Auto Scaling groups. Configure each Auto Scaling group's minimum capacity to meet its peak workload value.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Use Amazon CloudWatch to monitor the CPUUtilization metric for each instance in both Auto Scaling groups. Configure a CloudWatch alarm to invoke an Amazon Simple Notification Service (Amazon SNS) topic to create additional Auto Scaling groups on demand.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Provision two Amazon Simple Queue Service (Amazon SQS) queues. Use one SQS queue for order collection. Use the second SQS queue for order fulfillment. Configure the EC2 instances to poll their respective queues. Scale the Auto Scaling groups based on notifications that the queues send.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Provision two Amazon Simple Queue Service (Amazon SQS) queues. Use one SQS queue for order collection. Use the second SQS queue for order fulfillment. Configure the EC2 instances to poll their respective queues. Scale the Auto Scaling groups based on the number of messages in each queue.",
        "correct": true
      }
    ],
    "corrects": [
      4
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 1002,
    "question": "An online gaming company is transitioning user data storage to Amazon DynamoDB to support the company's growing user base. The current architecture includes DynamoDB tables that contain user profiles, achievements, and in-game transactions.<br><br>The company needs to design a robust, continuously available, and resilient DynamoDB architecture to maintain a seamless gaming experience for users.<br><br>Which solution will meet these requirements MOST cost-effectively?",
    "answers": [
      {
        "id": 1,
        "answer": "Create DynamoDB tables in a single AWS Region. Use on-demand capacity mode. Use global tables to replicate data across multiple Regions.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Use DynamoDB Accelerator (DAX) to cache frequently accessed data. Deploy tables in a single AWS Region and enable auto scaling. Configure Cross-Region Replication manually to additional Regions.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Create DynamoDB tables in multiple AWS Regions. Use on-demand capacity mode. Use DynamoDB Streams for Cross-Region Replication between Regions.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Use DynamoDB global tables for automatic multi-Region replication. Deploy tables in multiple AWS Regions. Use provisioned capacity mode. Enable auto scaling.",
        "correct": true
      }
    ],
    "corrects": [
      4
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 1003,
    "question": "A company runs its media rendering application on premises. The company wants to reduce storage costs and has moved all data to Amazon S3. The on-premises rendering application needs low-latency access to storage.<br><br>The company needs to design a storage solution for the application. The storage solution must maintain the desired application performance.<br><br>Which storage solution will meet these requirements in the MOST cost-effective way?",
    "answers": [
      {
        "id": 1,
        "answer": "Use Mountpoint for Amazon S3 to access the data in Amazon S3 for the on-premises application.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Configure an Amazon S3 File Gateway to provide storage for the on-premises application.",
        "correct": true
      },
      {
        "id": 3,
        "answer": "Copy the data from Amazon S3 to Amazon FSx for Windows File Server. Configure an Amazon FSx File Gateway to provide storage for the on-premises application.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Configure an on-premises file server. Use the Amazon S3 API to connect to S3 storage. Configure the application to access the storage from the on-premises file server.",
        "correct": false
      }
    ],
    "corrects": [
      2
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 1004,
    "question": "A company hosts its enterprise resource planning (ERP) system in the us-east-1 Region. The system runs on Amazon EC2 instances. Customers use a public API that is hosted on the EC2 instances to exchange information with the ERP system. International customers report slow API response times from their data centers.<br><br>Which solution will improve response times for the international customers MOST cost-effectively?",
    "answers": [
      {
        "id": 1,
        "answer": "Create an AWS Direct Connect connection that has a public virtual interface (VIF) to provide connectivity from each customer's data center to us-east-1. Route customer API requests by using a Direct Connect gateway to the ERP system API.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Set up an Amazon CloudFront distribution in front of the API. Configure the CachingOptimized managed cache policy to provide improved cache efficiency.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Set up AWS Global Accelerator. Configure listeners for the necessary ports. Configure endpoint groups for the appropriate Regions to distribute traffic. Create an endpoint in the group for the API.",
        "correct": true
      },
      {
        "id": 4,
        "answer": "Use AWS Site-to-Site VPN to establish dedicated VPN tunnels between Regions and customer networks. Route traffic to the API over the VPN connections.",
        "correct": false
      }
    ],
    "corrects": [
      3
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 1005,
    "question": "A company tracks customer satisfaction by using surveys that the company hosts on its website. The surveys sometimes reach thousands of customers every hour. Survey results are currently sent in email messages to the company so company employees can manually review results and assess customer sentiment.<br><br>The company wants to automate the customer survey process. Survey results must be available for the previous 12 months.<br><br>Which solution will meet these requirements in the MOST scalable way?",
    "answers": [
      {
        "id": 1,
        "answer": "Send the survey results data to an Amazon API Gateway endpoint that is connected to an Amazon Simple Queue Service (Amazon SQS) queue. Create an AWS Lambda function to poll the SQS queue, call Amazon Comprehend for sentiment analysis, and save the results to an Amazon DynamoDB table. Set the TTL for all records to 365 days in the future.",
        "correct": true
      },
      {
        "id": 2,
        "answer": "Send the survey results data to an API that is running on an Amazon EC2 instance. Configure the API to store the survey results as a new record in an Amazon DynamoDB table, call Amazon Comprehend for sentiment analysis, and save the results in a second DynamoDB table. Set the TTL for all records to 365 days in the future.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Write the survey results data to an Amazon S3 bucket. Use S3 Event Notifications to invoke an AWS Lambda function to read the data and call Amazon Rekognition for sentiment analysis. Store the sentiment analysis results in a second S3 bucket. Use S3 lifecycle policies on each bucket to expire objects after 365 days.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Send the survey results data to an Amazon API Gateway endpoint that is connected to an Amazon Simple Queue Service (Amazon SQS) queue. Configure the SQS queue to invoke an AWS Lambda function that calls Amazon Lex for sentiment analysis and saves the results to an Amazon DynamoDB table. Set the TTL for all records to 365 days in the future.",
        "correct": false
      }
    ],
    "corrects": [
      1
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 1006,
    "question": "A company uses AWS Systems Manager for routine management and patching of Amazon EC2 instances. The EC2 instances are in an IP address type target group behind an Application Load Balancer (ALB).<br><br>New security protocols require the company to remove EC2 instances from service during a patch. When the company attempts to follow the security protocol during the next patch, the company receives errors during the patching window.<br><br>Which combination of solutions will resolve the errors? (Choose two.)",
    "answers": [
      {
        "id": 1,
        "answer": "Change the target type of the target group from IP address type to instance type.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Continue to use the existing Systems Manager document without changes because it is already optimized to handle instances that are in an IP address type target group behind an ALB.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Implement the AWSEC2-PatchLoadBalanacerInstance Systems Manager Automation document to manage the patching process.",
        "correct": true
      },
      {
        "id": 4,
        "answer": "Use Systems Manager Maintenance Windows to automatically remove the instances from service to patch the instances.",
        "correct": true
      },
      {
        "id": 5,
        "answer": "Configure Systems Manager State Manager to remove the instances from service and manage the patching schedule. Use ALB health checks to re-route traffic.",
        "correct": false
      }
    ],
    "corrects": [
      3,
      4
    ],
    "multiple": true,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 1007,
    "question": "A medical company wants to perform transformations on a large amount of clinical trial data that comes from several customers. The company must extract the data from a relational database that contains the customer data. Then the company will transform the data by using a series of complex rules. The company will load the data to Amazon S3 when the transformations are complete.<br><br>All data must be encrypted where it is processed before the company stores the data in Amazon S3. All data must be encrypted by using customer-specific keys.<br><br>Which solution will meet these requirements with the LEAST amount of operational effort?",
    "answers": [
      {
        "id": 1,
        "answer": "Create one AWS Glue job for each customer. Attach a security configuration to each job that uses server-side encryption with Amazon S3 managed keys (SSE-S3) to encrypt the data.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Create one Amazon EMR cluster for each customer. Attach a security configuration to each cluster that uses client-side encryption with a custom client-side root key (CSE-Custom) to encrypt the data.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Create one AWS Glue job for each customer. Attach a security configuration to each job that uses client-side encryption with AWS KMS managed keys (CSE-KMS) to encrypt the data.",
        "correct": true
      },
      {
        "id": 4,
        "answer": "Create one Amazon EMR cluster for each customer. Attach a security configuration to each cluster that uses server-side encryption with AWS KMS keys (SSE-KMS) to encrypt the data.",
        "correct": false
      }
    ],
    "corrects": [
      3
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 1008,
    "question": "A company hosts a website analytics application on a single Amazon EC2 On-Demand Instance. The analytics application is highly resilient and is designed to run in stateless mode.<br><br>The company notices that the application is showing signs of performance degradation during busy times and is presenting 5xx errors. The company needs to make the application scale seamlessly.<br><br>Which solution will meet these requirements MOST cost-effectively?",
    "answers": [
      {
        "id": 1,
        "answer": "Create an Amazon Machine Image (AMI) of the web application. Use the AMI to launch a second EC2 On-Demand Instance. Use an Application Load Balancer to distribute the load across the two EC2 instances.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Create an Amazon Machine Image (AMI) of the web application. Use the AMI to launch a second EC2 On-Demand Instance. Use Amazon Route 53 weighted routing to distribute the load across the two EC2 instances.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Create an AWS Lambda function to stop the EC2 instance and change the instance type. Create an Amazon CloudWatch alarm to invoke the Lambda function when CPU utilization is more than 75%.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Create an Amazon Machine Image (AMI) of the web application. Apply the AMI to a launch template. Create an Auto Scaling group that includes the launch template. Configure the launch template to use a Spot Fleet. Attach an Application Load Balancer to the Auto Scaling group.",
        "correct": true
      }
    ],
    "corrects": [
      4
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 1009,
    "question": "A company runs an environment where data is stored in an Amazon S3 bucket. The objects are accessed frequently throughout the day. The company has strict da ta encryption requirements for data that is stored in the S3 bucket. The company currently uses AWS Key Management Service (AWS KMS) for encryption.<br><br>The company wants to optimize costs associated with encrypting S3 objects without making additional calls to AWS KMS.<br><br>Which solution will meet these requirements?",
    "answers": [
      {
        "id": 1,
        "answer": "Use server-side encryption with Amazon S3 managed keys (SSE-S3).",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Use an S3 Bucket Key for server-side encryption with AWS KMS keys (SSE-KMS) on the new objects.",
        "correct": true
      },
      {
        "id": 3,
        "answer": "Use client-side encryption with AWS KMS customer managed keys.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Use server-side encryption with customer-provided keys (SSE-C) stored in AWS KMS.",
        "correct": false
      }
    ],
    "corrects": [
      2
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 1010,
    "question": "A company runs multiple workloads on virtual machines (VMs) in an on-premises data center. The company is expanding rapidly. The on-premises data center is not able to scale fast enough to meet business needs. The company wants to migrate the workloads to AWS.<br><br>The migration is time sensitive. The company wants to use a lift-and-shift strategy for non-critical workloads.<br><br>Which combination of steps will meet these requirements? (Choose three.)",
    "answers": [
      {
        "id": 1,
        "answer": "Use the AWS Schema Conversion Tool (AWS SCT) to collect data about the VMs.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Use AWS Application Migration Service. Install the AWS Replication Agent on the VMs.",
        "correct": true
      },
      {
        "id": 3,
        "answer": "Complete the initial replication of the VMs. Launch test instances to perform acceptance tests on the VMs.",
        "correct": true
      },
      {
        "id": 4,
        "answer": "Stop all operations on the VMs. Launch a cutover instance.",
        "correct": true
      },
      {
        "id": 5,
        "answer": "Use AWS App2Container (A2C) to collect data about the VMs.",
        "correct": false
      },
      {
        "id": 6,
        "answer": "Use AWS Database Migration Service (AWS DMS) to migrate the VMs.",
        "correct": false
      }
    ],
    "corrects": [
      2,
      3,
      4
    ],
    "multiple": true,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 1011,
    "question": "A company hosts an application in a private subnet. The company has already integrated the application with Amazon Cognito. The company uses an Amazon Cognito user pool to authenticate users.<br><br>The company needs to modify the application so the application can securely store user documents in an Amazon S3 bucket.<br><br>Which combination of steps will securely integrate Amazon S3 with the application? (Choose two.)",
    "answers": [
      {
        "id": 1,
        "answer": "Create an Amazon Cognito identity pool to generate secure Amazon S3 access tokens for users when they successfully log in.",
        "correct": true
      },
      {
        "id": 2,
        "answer": "Use the existing Amazon Cognito user pool to generate Amazon S3 access tokens for users when they successfully log in.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Create an Amazon S3 VPC endpoint in the same VPC where the company hosts the application.",
        "correct": true
      },
      {
        "id": 4,
        "answer": "Create a NAT gateway in the VPC where the company hosts the application. Assign a policy to the S3 bucket to deny any request that is not initiated from Amazon Cognito.",
        "correct": false
      },
      {
        "id": 5,
        "answer": "Attach a policy to the S3 bucket that allows access only from the users' IP addresses.",
        "correct": false
      }
    ],
    "corrects": [
      1,
      3
    ],
    "multiple": true,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 1012,
    "question": "A company has a three-tier web application that processes orders from customers. The web tier consists of Amazon EC2 instances behind an Application Load Balancer. The processing tier consists of EC2 instances. The company decoupled the web tier and processing tier by using Amazon Simple Queue Service (Amazon SQS). The storage layer uses Amazon DynamoDB.<br><br>At peak times, some users report order processing delays and halls. The company has noticed that during these delays, the EC2 instances are running at 100% CPU usage, and the SQS queue fills up. The peak times are variable and unpredictable.<br><br>The company needs to improve the performance of the application.<br><br>Which solution will meet these requirements?",
    "answers": [
      {
        "id": 1,
        "answer": "Use scheduled scaling for Amazon EC2 Auto Scaling to scale out the processing tier instances for the duration of peak usage times. Use the CPU Utilization metric to determine when to scale.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Use Amazon ElastiCache for Redis in front of the DynamoDB backend tier. Use target utilization as a metric to determine when to scale.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Add an Amazon CloudFront distribution to cache the responses for the web tier. Use HTTP latency as a metric to determine when to scale.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Use an Amazon EC2 Auto Scaling target tracking policy to scale out the processing tier instances. Use the ApproximateNumberOfMessages attribute to determine when to scale.",
        "correct": true
      }
    ],
    "corrects": [
      4
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 1013,
    "question": "A company's production environment consists of Amazon EC2 On-Demand Instances that run constantly between Monday and Saturday. The instances must run for only 12 hours on Sunday and cannot tolerate interruptions. The company wants to cost-optimize the production environment.<br><br>Which solution will meet these requirements MOST cost-effectively?",
    "answers": [
      {
        "id": 1,
        "answer": "Purchase Scheduled Reserved Instances for the EC2 instances that run for only 12 hours on Sunday. Purchase Standard Reserved Instances for the EC2 instances that run constantly between Monday and Saturday.",
        "correct": true
      },
      {
        "id": 2,
        "answer": "Purchase Convertible Reserved Instances for the EC2 instances that run for only 12 hours on Sunday. Purchase Standard Reserved Instances for the EC2 instances that run constantly between Monday and Saturday.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Use Spot Instances for the EC2 instances that run for only 12 hours on Sunday. Purchase Standard Reserved Instances for the EC2 instances that run constantly between Monday and Saturday.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Use Spot Instances for the EC2 instances that run for only 12 hours on Sunday. Purchase Convertible Reserved Instances for the EC2 instances that run constantly between Monday and Saturday.",
        "correct": false
      }
    ],
    "corrects": [
      1
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 1014,
    "question": "A digital image processing company wants to migrate its on-premises monolithic application to the AWS Cloud. The company processes thousands of images and generates large files as part of the processing workflow.<br><br>The company needs a solution to manage the growing number of image processing jobs. The solution must also reduce the manual tasks in the image processing workflow. The company does not want to manage the underlying infrastructure of the solution.<br><br>Which solution will meet these requirements with the LEAST operational overhead?",
    "answers": [
      {
        "id": 1,
        "answer": "Use Amazon Elastic Container Service (Amazon ECS) with Amazon EC2 Spot Instances to process the images. Configure Amazon Simple Queue Service (Amazon SQS) to orchestrate the workflow. Store the processed files in Amazon Elastic File System (Amazon EFS).",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Use AWS Batch jobs to process the images. Use AWS Step Functions to orchestrate the workflow. Store the processed files in an Amazon S3 bucket.",
        "correct": true
      },
      {
        "id": 3,
        "answer": "Use AWS Lambda functions and Amazon EC2 Spot Instances to process the images. Store the processed files in Amazon FSx.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Deploy a group of Amazon EC2 instances to process the images. Use AWS Step Functions to orchestrate the workflow. Store the processed files in an Amazon Elastic Block Store (Amazon EBS) volume.",
        "correct": false
      }
    ],
    "corrects": [
      2
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 1015,
    "question": "A company's image-hosting website gives users around the world the ability to up load, view, and download images from their mobile devices. The company currently hosts the static website in an Amazon S3 bucket.<br><br>Because of the website's growing popularity, the website's performance has decreased. Users have reported latency issues when they upload and download images.<br><br>The company must improve the performance of the website.<br><br>Which solution will meet these requirements with the LEAST implementation effort?",
    "answers": [
      {
        "id": 1,
        "answer": "Configure an Amazon CloudFront distribution for the S3 bucket to improve the download performance. Enable S3 Transfer Acceleration to improve the upload performance.",
        "correct": true
      },
      {
        "id": 2,
        "answer": "Configure Amazon EC2 instances of the right sizes in multiple AWS Regions. Migrate the application to the EC2 instances. Use an Application Load Balancer to distribute the website traffic equally among the EC2 instances. Configure AWS Global Accelerator to address global demand with low latency.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Configure an Amazon CloudFront distribution that uses the S3 bucket as an origin to improve the download performance. Configure the application to use CloudFront to upload images to improve the upload performance. Create S3 buckets in multiple AWS Regions. Configure replication rules for the buckets to replicate users' data based on the users' location. Redirect downloads to the S3 bucket that is closest to each user's location.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Configure AWS Global Accelerator for the S3 bucket to improve network performance. Create an endpoint for the application to use Global Accelerator instead of the S3 bucket.",
        "correct": false
      }
    ],
    "corrects": [
      1
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 1016,
    "question": "A company runs an application in a private subnet behind an Application Load Balancer (ALB) in a VPC. The VPC has a NAT gateway and an internet gateway. The application calls the Amazon S3 API to store objects.<br><br>According to the company's security policy, traffic from the application must not travel across the internet.<br><br>Which solution will meet these requirements MOST cost-effectively?",
    "answers": [
      {
        "id": 1,
        "answer": "Configure an S3 interface endpoint. Create a security group that allows outbound traffic to Amazon S3.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Configure an S3 gateway endpoint. Update the VPC route table to use the endpoint.",
        "correct": true
      },
      {
        "id": 3,
        "answer": "Configure an S3 bucket policy to allow traffic from the Elastic IP address that is assigned to the NAT gateway.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Create a second NAT gateway in the same subnet where the legacy application is deployed. Update the VPC route table to use the second NAT gateway.",
        "correct": false
      }
    ],
    "corrects": [
      2
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 1017,
    "question": "A company has an application that runs on an Amazon Elastic Kubernetes Service (Amazon EKS) cluster on Amazon EC2 instances. The application has a UI that uses Amazon DynamoDB and data services that use Amazon S3 as part of the application deployment.<br><br>The company must ensure that the EKS Pods for the UI can access only Amazon DynamoDB and that the EKS Pods for the data services can access only Amazon S3. The company uses AWS Identity and Access Management (IAM).<br><br>Which solution meals these requirements?",
    "answers": [
      {
        "id": 1,
        "answer": "Create separate IAM policies for Amazon S3 and DynamoDB access with the required permissions. Attach both IAM policies to the EC2 instance profile. Use role-based access control (RBAC) to control access to Amazon S3 or DynamoDB for the respective EKS Pods.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Create separate IAM policies for Amazon S3 and DynamoDB access with the required permissions. Attach the Amazon S3 IAM policy directly to the EKS Pods for the data services and the DynamoDB policy to the EKS Pods for the UI.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Create separate Kubernetes service accounts for the UI and data services to assume an IAM role. Attach the AmazonS3FullAccess policy to the data services account and the AmazonDynamoDBFullAccess policy to the UI service account.",
        "correct": true
      },
      {
        "id": 4,
        "answer": "Create separate Kubernetes service accounts for the UI and data services to assume an IAM role. Use IAM Role for Service Accounts (IRSA) to provide access to the EKS Pods for the UI to Amazon S3 and the EKS Pods for the data services to DynamoDB.",
        "correct": false
      }
    ],
    "corrects": [
      3
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 1018,
    "question": "A company needs to give a globally distributed development team secure access to the company's AWS resources in a way that complies with security policies.<br><br>The company currently uses an on-premises Active Directory for internal authentication. The company uses AWS Organizations to manage multiple AWS accounts that support multiple projects.<br><br>The company needs a solution to integrate with the existing infrastructure to provide centralized identity management and access control.<br><br>Which solution will meet these requirements with the LEAST operational overhead?",
    "answers": [
      {
        "id": 1,
        "answer": "Set up AWS Directory Service to create an AWS managed Microsoft Active Directory on AWS. Establish a trust relationship with the on-premises Active Directory. Use IAM rotes that are assigned to Active Directory groups to access AWS resources within the company's AWS accounts.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Create an IAM user for each developer. Manually manage permissions for each IAM user based on each user's involvement with each project. Enforce multi-factor authentication (MFA) as an additional layer of security.",
        "correct": false
      },
      {
        "id": 3,
        "answer": "Use AD Connector in AWS Directory Service to connect to the on-premises Active Directory. Integrate AD Connector with AWS IAM Identity Center. Configure permissions sets to give each AD group access to specific AWS accounts and resources.",
        "correct": true
      },
      {
        "id": 4,
        "answer": "Use Amazon Cognito to deploy an identity federation solution. Integrate the identity federation solution with the on-premises Active Directory. Use Amazon Cognito to provide access tokens for developers to access AWS accounts and resources.",
        "correct": false
      }
    ],
    "corrects": [
      3
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  },
  {
    "id": 1019,
    "question": "A company is developing an application in the AWS Cloud. The application's HTTP API contains critical information that is published in Amazon API Gateway. The critical information must be accessible from only a limited set of trusted IP addresses that belong to the company's internal network.<br><br>Which solution will meet these requirements?",
    "answers": [
      {
        "id": 1,
        "answer": "Set up an API Gateway private integration to restrict access to a predefined set of IP addresses.",
        "correct": false
      },
      {
        "id": 2,
        "answer": "Create a resource policy for the API that denies access to any IP address that is not specifically allowed.",
        "correct": true
      },
      {
        "id": 3,
        "answer": "Directly deploy the API in a private subnet. Create a network ACL. Set up rules to allow the traffic from specific IP addresses.",
        "correct": false
      },
      {
        "id": 4,
        "answer": "Modify the security group that is attached to API Gateway to allow inbound traffic from only the trusted IP addresses.",
        "correct": false
      }
    ],
    "corrects": [
      2
    ],
    "multiple": false,
    "domain": "",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": []
  }
]