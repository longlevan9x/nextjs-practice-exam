[
  {
    "id": 1,
    "question": "<p>An application is using Amazon DynamoDB as its data store and needs to be able to read 100 items per second as strongly consistent reads. Each item is 5 KB in size.<br>What value should be set for the table's provisioned throughput for reads?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>50 Read Capacity Units</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>200 Read Capacity Units</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>500 Read Capacity Units</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>250 Read Capacity Units</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Database",
    "explanation": "<p>With provisioned capacity mode, you specify the number of data reads and writes per second that you require for your application.</p><p><strong>Read capacity unit (RCU):</strong></p><p>• Each API call to read data from your table is a read request.</p><p>• Read requests can be strongly consistent, eventually consistent, or transactional.</p><p>• For items up to 4 KB in size, one RCU can perform one <em>strongly consistent</em> read request per second.</p><p>• Items larger than 4 KB require additional RCUs.</p><p>• For items up to 4 KB in size, one RCU can perform two <em>eventually consistent</em> read requests per second.</p><p>• <em>Transactional</em> read requests require two RCUs to perform one read per second for items up to 4 KB.</p><p>• For example, a strongly consistent read of an 8 KB item would require two RCUs, an eventually consistent read of an 8 KB item would require one RCU, and a transactional read of an 8 KB item would require four RCUs.</p><p><strong>Write capacity unit (WCU):</strong></p><p>• Each API call to write data to your table is a write request.</p><p>• For items up to 1 KB in size, one WCU can perform one<em> standard</em> write request per second.</p><p>• Items larger than 1 KB require additional WCUs.</p><p>• <em>Transactional</em> write requests require two WCUs to perform one write per second for items up to 1 KB.</p><p>• For example, a standard write request of a 1 KB item would require one WCU, a standard write request of a 3 KB item would require three WCUs, and a transactional write request of a 3 KB item would require six WCUs.</p><p><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_12-44-23-d450e4d38292096046a8f25b6106f284.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_12-44-23-d450e4d38292096046a8f25b6106f284.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p><p><strong>To determine the number of RCUs required to handle 100 strongly consistent reads per/second with an average item size of 5KB, perform the following steps:</strong></p><p><strong>1. Determine the average item size by rounding up the next multiple of 4KB (5KB rounds up to 8KB).</strong></p><p><strong>2. Determine the RCU per item by dividing the item size by 4KB (8KB/4KB = 2).</strong></p><p>3. <strong>Multiply the value from step 2 with the number of reads required per second (2x100 = 200).</strong></p><p><strong>CORRECT: </strong>\"200 Read Capacity Units\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"50 Read Capacity Units\" is incorrect.</p><p><strong>INCORRECT:</strong> \"250 Read Capacity Units\" is incorrect.</p><p><strong>INCORRECT:</strong> \"500 Read Capacity Units\" is incorrect.</p><p><strong>References:</strong></p><p><a href=\"https://aws.amazon.com/dynamodb/pricing/provisioned/\">https://aws.amazon.com/dynamodb/pricing/provisioned/</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-dynamodb/\">https://digitalcloud.training/amazon-dynamodb/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://aws.amazon.com/dynamodb/pricing/provisioned/",
      "https://digitalcloud.training/amazon-dynamodb/"
    ]
  },
  {
    "id": 2,
    "question": "<p>AWS CodeBuild builds code for an application, creates a Docker image, pushes the image to Amazon Elastic Container Registry (ECR), and tags the image with a unique identifier.</p><p>If the Developers already have AWS CLI configured on their workstations, how can the Docker images be pulled to the workstations?&nbsp; </p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Run the following: <code>docker pull REPOSITORY URI : TAG</code> </p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Run the output of the following: <code>aws ecr get-download-url-for-layer</code>, and then run: <code>docker pull REPOSITORY URI : TAG</code> </p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Run the following: <code>aws ecr get-login-password</code>, and then run: <code>docker pull REPOSITORY URI : TAG</code> </p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Run the output of the following: <code>aws ecr get-login-password</code>, and then run: <code>docker pull REPOSITORY URI : TAG </code> </p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "AWS Compute",
    "explanation": "<p>If you would like to run a Docker image that is available in Amazon ECR, you can pull it to your local environment with the docker pull command. You can do this from either your default registry or from a registry associated with another AWS account.</p><p>Docker CLI does not support standard AWS authentication methods, so client authentication must be handled so that ECR knows who is requesting to push or pull an image. To do this you can issue the <code>aws ecr get-login-password</code> AWS&nbsp;CLI&nbsp;command and then use the output to login using <code>docker login</code> and then issue a docker pull command specifying the image name using <code>registry/repository[:tag]</code>.</p><p><strong>CORRECT: </strong>\"Run the output of the following: <code>aws ecr get-login-password</code>, and then run <code>docker pull REPOSITORY URI : TAG</code>\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Run the following: docker pull REPOSITORY URI : TAG\" is incorrect as the Developers first need to authenticate before they can pull the image.</p><p><strong>INCORRECT:</strong> \"Run the following: <code>aws ecr get-login-password</code>, and then run: <code>docker pull REPOSITORY URI : TAG</code>\" is incorrect. The Developers need to not just run the login command but run the output of the login command which contains the authentication token required to log in.</p><p><strong>INCORRECT:</strong> \"Run the output of the following: <code>aws ecr get-download-url-for-layer</code>, and then run <code>docker pull REPOSITORY URI : TAG</code>\" is incorrect as this command retrieves a pre-signed Amazon S3 download URL corresponding to an image layer.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth\">https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth</a></p><p><a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-pull-ecr-image.html\">https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-pull-ecr-image.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-ecs-and-eks/\">https://digitalcloud.training/amazon-ecs-and-eks/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth",
      "https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-pull-ecr-image.html",
      "https://digitalcloud.training/amazon-ecs-and-eks/"
    ]
  },
  {
    "id": 3,
    "question": "<p>An application is running on an Amazon EC2 Linux instance. The instance needs to make AWS API calls to several AWS services. What is the MOST secure way to provide access to the AWS services with MINIMAL management overhead?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use AWS KMS to store and retrieve credentials</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Use EC2 instance profiles</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Store the credentials in AWS CloudHSM</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Store the credentials in the ~/.aws/credentials file</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Security, Identity, & Compliance",
    "explanation": "<p>An instance profile is a container for an IAM role that you can use to pass role information to an EC2 instance when the instance starts. Using an instance profile you can attach an IAM Role to an EC2 instance that the instance can then assume in order to gain access to AWS services.</p><p><strong>CORRECT: </strong>\"Use EC2 instance profiles\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Use AWS KMS to store and retrieve credentials\" is incorrect as KMS is used to manage encryption keys.</p><p><strong>INCORRECT:</strong> \"Store the credentials in AWS CloudHSM\" is incorrect as CloudHSM is also used to manage encryption keys. It is similar to KMS but uses a dedicated hardware device that is not multi-tenant.</p><p><strong>INCORRECT:</strong> \"Store the credentials in the ~/.aws/credentials file\" is incorrect as this is not the most secure option. The credentials file is associated with the AWS CLI and used for passing credentials in the form of an access key ID and secret access key when making programmatic requests from the command line.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2_instance-profiles.html\">https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2_instance-profiles.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-ec2/\">https://digitalcloud.training/amazon-ec2/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2_instance-profiles.html",
      "https://digitalcloud.training/amazon-ec2/"
    ]
  },
  {
    "id": 4,
    "question": "<p>A developer is creating a microservices application that includes and AWS Lambda function. The function generates a unique file for each execution and must commit the file to an AWS CodeCommit repository.</p><p>How should the developer accomplish this?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use an AWS SDK to instantiate a CodeCommit client. Invoke the PutFile method to add the file to the repository and execute a commit with CreateCommit.</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Upload the new file to an Amazon S3 bucket. Create an AWS Step Function to accept S3 events. Use AWS Lambda functions in the Step Function, to add the file to the repository and commit the change.</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>After the new file is created in Lambda, use CURL to invoke the CodeCommit API. Send the file to the repository and automatically commit the change.</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Send a message to an Amazon SQS queue with the file attached. Configure an AWS Step Function as a destination for messages in the queue. Configure the Step Function to add the new file to the repository and commit the change.</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Developer Tools",
    "explanation": "<p>The developer can instantiate a CodeCommit client using the AWS SDK. This provides the ability to programmatically work with the AWS CodeCommit repository. The PutFile method is used to add or modify a single file in a specified repository and branch. The CreateCommit method creates a commit for changes to a repository.</p><p><strong>CORRECT: </strong>\"Use an AWS SDK to instantiate a CodeCommit client. Invoke the PutFile method to add the file to the repository and execute a commit with CreateCommit\" is the correct answer (as explained above.)</p><p><strong>INCORRECT:</strong> \"Send a message to an Amazon SQS queue with the file attached. Configure an AWS Step Function as a destination for messages in the queue. Configure the Step Function to add the new file to the repository and commit the change\" is incorrect.</p><p>A Step Function cannot be a destination for messages in an SQS queue. There would need to be another Lambda function or other method to trigger the state machine and pass the information across. This would be a highly inefficient solution.</p><p><strong>INCORRECT:</strong> \"After the new file is created in Lambda, use CURL to invoke the CodeCommit API. Send the file to the repository and automatically commit the change\" is incorrect.</p><p>CURL cannot be used to work with the CodeCommit API. The developer must use the AWS SDK.</p><p><strong>INCORRECT:</strong> \"Upload the new file to an Amazon S3 bucket. Create an AWS Step Function to accept S3 events. Use AWS Lambda functions in the Step Function, to add the file to the repository and commit the change\" is incorrect.</p><p>Step Functions is not a supported destination for Amazon S3 event notifications. Supported destinations are SNS topics, SQS queues, Lambda functions, and EventBridge event buses.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/codecommit/AWSCodeCommitClient.html\">https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/codecommit/AWSCodeCommitClient.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-developer-tools/\">https://digitalcloud.training/aws-developer-tools/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/codecommit/AWSCodeCommitClient.html",
      "https://digitalcloud.training/aws-developer-tools/"
    ]
  },
  {
    "id": 5,
    "question": "<p>A Developer is storing sensitive documents in Amazon S3. The documents must be encrypted at rest and company policy mandates that the encryption keys must be rotated annually. What is the EASIEST way to achieve this?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use AWS KMS with automatic key rotation</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Export a key from AWS KMS to encrypt the data</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Encrypt the data before sending it to Amazon S3</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Import a custom key into AWS KMS with annual rotation enabled</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Security, Identity, & Compliance",
    "explanation": "<p>Cryptographic best practices discourage extensive reuse of encryption keys. To create new cryptographic material for your AWS Key Management Service (AWS KMS) customer master keys (CMKs), you can create new CMKs, and then change your applications or aliases to use the new CMKs. Or, you can enable automatic key rotation for an existing <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk\">customer managed CMK</a>.</p><p>When you enable <em>automatic key rotation</em> for a customer managed CMK, AWS KMS generates new cryptographic material for the CMK every year. AWS KMS also saves the CMK's older cryptographic material in perpetuity so it can be used to decrypt data that it encrypted. AWS KMS does not delete any rotated key material until you <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html\">delete the CMK</a>.</p><p>Key rotation changes only the CMK's <em>backing key</em>, which is the cryptographic material that is used in encryption operations. The CMK is the same logical resource, regardless of whether or how many times its backing key changes. The properties of the CMK do not change, as shown in the following image.</p><p><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_14-53-16-7305421dbc8087397f612758b56a8720.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_14-53-16-7305421dbc8087397f612758b56a8720.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p><p>Therefore, the easiest way to meet this requirement is to use AWS KMS with automatic key rotation.</p><p><strong>CORRECT: </strong>\"Use AWS KMS with automatic key rotation\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Encrypt the data before sending it to Amazon S3\" is incorrect as that requires managing your own encryption infrastructure which is not the easiest way to achieve the requirements.</p><p><strong>INCORRECT:</strong> \"Import a custom key into AWS KMS with annual rotation enabled\" is incorrect as when you import key material into AWS KMS you are still responsible for the key material while allowing KMS to use a copy of it. Therefore, this is not the easiest solution as you must manage the key materials.</p><p><strong>INCORRECT:</strong> \"Export a key from AWS KMS to encrypt the data\" is incorrect as when you export a data encryption key you are then responsible for using it and managing it.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html\">https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-kms/\">https://digitalcloud.training/aws-kms/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk",
      "https://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html",
      "https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html",
      "https://digitalcloud.training/aws-kms/"
    ]
  },
  {
    "id": 6,
    "question": "<p>A development team manage a high-traffic e-Commerce site with dynamic pricing that is updated in real-time. There have been incidents where multiple updates occur simultaneously and cause an original editor’s updates to be overwritten. How can the developers ensure that overwriting does not occur?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use concurrent writes</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Use batch operations</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Use atomic counters</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Use conditional writes</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "AWS Database",
    "explanation": "<p>By default, the DynamoDB write operations (PutItem, UpdateItem, DeleteItem) are <em>unconditional</em>: Each operation overwrites an existing item that has the specified primary key.</p><p>DynamoDB optionally supports conditional writes for these operations. A conditional write succeeds only if the item attributes meet one or more expected conditions. Otherwise, it returns an error. Conditional writes are helpful in many situations. For example, you might want a PutItem operation to succeed only if there is not already an item with the same primary key. Or you could prevent an UpdateItem operation from modifying an item if one of its attributes has a certain value.</p><p>Conditional writes can be <strong><em>idempotent</em></strong> if the conditional check is on the same attribute that is being updated. This means that DynamoDB performs a given write request only if certain attribute values in the item match what you expect them to be at the time of the request.</p><p>For example, suppose that you issue an UpdateItem request to increase the Price of an item by 3, but only if the Price is currently 20. After you send the request, but before you get the results back, a network error occurs, and you don't know whether the request was successful. Because this conditional write is idempotent, you can retry the same UpdateItem request, and DynamoDB updates the item only if the Price is currently 20.</p><p>The following example shows how to use the condition-expression parameter to achieve a conditional write with idempotence:</p><div class=\"ud-component--base-components--code-block\"><div><pre class=\"prettyprint linenums prettyprinted\" role=\"presentation\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><span class=\"pln\">aws dynamodb update</span><span class=\"pun\">-</span><span class=\"pln\">item \\</span></li><li class=\"L1\"><span class=\"pun\">--</span><span class=\"pln\">table</span><span class=\"pun\">-</span><span class=\"pln\">name </span><span class=\"typ\">ProductCatalog</span><span class=\"pln\"> \\</span></li><li class=\"L2\"><span class=\"pun\">--</span><span class=\"pln\">key </span><span class=\"str\">'{\"Id\":{\"N\":\"1\"}}'</span><span class=\"pln\"> \\</span></li><li class=\"L3\"><span class=\"pun\">--</span><span class=\"pln\">update</span><span class=\"pun\">-</span><span class=\"pln\">expression </span><span class=\"str\">\"SET Price = :newval\"</span><span class=\"pln\"> \\</span></li><li class=\"L4\"><span class=\"pun\">--</span><span class=\"pln\">condition</span><span class=\"pun\">-</span><span class=\"pln\">expression </span><span class=\"str\">\"Price = :currval\"</span><span class=\"pln\"> \\</span></li><li class=\"L5\"><span class=\"pun\">--</span><span class=\"pln\">expression</span><span class=\"pun\">-</span><span class=\"pln\">attribute</span><span class=\"pun\">-</span><span class=\"pln\">values file</span><span class=\"pun\">:</span><span class=\"com\">//expression-attribute-values.json</span></li></ol></pre></div></div><p>For this scenario, conditional writes with idempotence will mean that each writer can check the current price and update the price only if the price matches that price. If the price is updated by another writer before the write is made, it will fail as the item price has changed and will not reflect the expected price.</p><p><strong>CORRECT: </strong>\"Use conditional writes\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Use concurrent writes\" is incorrect as writing concurrently to the same items is exactly what we want to avoid.</p><p><strong>INCORRECT:</strong> \"Use atomic counters\" is incorrect. An atomic counter is a numeric attribute that is incremented, unconditionally, without interfering with other write requests. This is used for cases such as tracking visitors to a website. This does not prevent recent updated from being overwritten.</p><p><strong>INCORRECT:</strong> \"Use batch operations\" is incorrect. Batch operations can reduce the number of network round trips from your application to DynamoDB. However, this does not solve the problem of preventing recent updates from being overwritten.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html#WorkingWithItems.ConditionalUpdate\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html#WorkingWithItems.ConditionalUpdate</a></p><p><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.ConditionExpressions.html\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.ConditionExpressions.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-dynamodb/\">https://digitalcloud.training/amazon-dynamodb/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html#WorkingWithItems.ConditionalUpdate",
      "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.ConditionExpressions.html",
      "https://digitalcloud.training/amazon-dynamodb/"
    ]
  },
  {
    "id": 7,
    "question": "<p>A Developer wants to debug an application by searching and filtering log data. The application logs are stored in Amazon CloudWatch Logs. The Developer creates a new metric filter to count exceptions in the application logs. However, no results are returned from the logs.</p><p>What is the reason that no filtered results are being returned?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>The log group for CloudWatch Logs should be first streamed to Amazon Elasticsearch Service before filtering returns the results</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Metric data points to logs groups can be filtered only after they are exported to an Amazon S3 bucket</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>A setup of the Amazon CloudWatch interface VPC endpoint is required for filtering the CloudWatch Logs in the VPC</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>CloudWatch Logs only publishes metric data for events that happen after the filter is created</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "AWS Management & Governance",
    "explanation": "<p>After the CloudWatch Logs agent begins publishing log data to Amazon CloudWatch, you can begin searching and filtering the log data by creating one or more metric filters. Metric filters define the terms and patterns to look for in log data as it is sent to CloudWatch Logs.</p><p>CloudWatch Logs uses these metric filters to turn log data into numerical CloudWatch metrics that you can graph or set an alarm on. You can use any type of CloudWatch statistic, including percentile statistics, when viewing these metrics or setting alarms.</p><p>Filters do not retroactively filter data. Filters only publish the metric data points for events that happen after the filter was created. Filtered results return the first 50 lines, which will not be displayed if the timestamp on the filtered results is earlier than the metric creation time.</p><p>Therefore, the filtered results are not being returned as CloudWatch Logs only publishes metric data for events that happen after the filter is created.</p><p><strong>CORRECT: </strong>\"CloudWatch Logs only publishes metric data for events that happen after the filter is created\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"A setup of the Amazon CloudWatch interface VPC endpoint is required for filtering the CloudWatch Logs in the VPC\" is incorrect as a VPC endpoint is not required.</p><p><strong>INCORRECT:</strong> \"The log group for CloudWatch Logs should be first streamed to Amazon Elasticsearch Service before filtering returns the results\" is incorrect as you do not need to stream the results to Elasticsearch.</p><p><strong>INCORRECT:</strong> \"Metric data points to logs groups can be filtered only after they are exported to an Amazon S3 bucket\" is incorrect as it is not necessary to export the logs to an S3 bucket.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/MonitoringLogData.html\">https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/MonitoringLogData.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-cloudwatch/\">https://digitalcloud.training/amazon-cloudwatch/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/MonitoringLogData.html",
      "https://digitalcloud.training/amazon-cloudwatch/"
    ]
  },
  {
    "id": 8,
    "question": "<p>A Developer needs to create an instance profile for an Amazon EC2 instance using the AWS CLI. How can this be achieved? (Select THREE.)</p>",
    "corrects": [
      2,
      3,
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Run the <code>AssignInstanceProfile</code> API</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Run the <code>aws ec2 associate-instance-profile</code> command</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Run the <code>aws iam add-role-to-instance-profile</code> command</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Run the <code>aws iam create-instance-profile</code> command</p>",
        "correct": true
      },
      {
        "id": 5,
        "answer": "<p>Run the <code>AddRoleToInstanceProfile</code> API</p>",
        "correct": false
      },
      {
        "id": 6,
        "answer": "<p>Run the <code>CreateInstanceProfile</code> API</p>",
        "correct": false
      }
    ],
    "multiple": true,
    "domain": "AWS Compute",
    "explanation": "<p>To add a role to an Amazon EC2 instance using the AWS CLI you must first create an instance profile. Then you need to add the role to the instance profile and finally assign the instance profile to the Amazon EC2 instance.</p><p>The following example commands would achieve this outcome:</p><div class=\"ud-component--base-components--code-block\"><div><pre class=\"prettyprint linenums prettyprinted\" role=\"presentation\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><span class=\"pln\">aws iam create</span><span class=\"pun\">-</span><span class=\"pln\">instance</span><span class=\"pun\">-</span><span class=\"pln\">profile </span><span class=\"pun\">--</span><span class=\"pln\">instance</span><span class=\"pun\">-</span><span class=\"pln\">profile</span><span class=\"pun\">-</span><span class=\"pln\">name EXAMPLEPROFILENAME</span></li><li class=\"L1\"><span class=\"pln\">aws iam add</span><span class=\"pun\">-</span><span class=\"pln\">role</span><span class=\"pun\">-</span><span class=\"pln\">to</span><span class=\"pun\">-</span><span class=\"pln\">instance</span><span class=\"pun\">-</span><span class=\"pln\">profile </span><span class=\"pun\">--</span><span class=\"pln\">instance</span><span class=\"pun\">-</span><span class=\"pln\">profile</span><span class=\"pun\">-</span><span class=\"pln\">name EXAMPLEPROFILENAME </span><span class=\"pun\">--</span><span class=\"pln\">role</span><span class=\"pun\">-</span><span class=\"pln\">name EXAMPLEROLENAME</span></li><li class=\"L2\"><span class=\"pln\">aws ec2 associate</span><span class=\"pun\">-</span><span class=\"pln\">iam</span><span class=\"pun\">-</span><span class=\"pln\">instance</span><span class=\"pun\">-</span><span class=\"pln\">profile </span><span class=\"pun\">--</span><span class=\"pln\">iam</span><span class=\"pun\">-</span><span class=\"pln\">instance</span><span class=\"pun\">-</span><span class=\"pln\">profile </span><span class=\"typ\">Name</span><span class=\"pun\">=</span><span class=\"pln\">EXAMPLEPROFILENAME </span><span class=\"pun\">--</span><span class=\"pln\">instance</span><span class=\"pun\">-</span><span class=\"pln\">id i</span><span class=\"pun\">-</span><span class=\"lit\">012345678910abcde</span></li></ol></pre></div></div><p><strong>CORRECT: </strong>\"Run the <code>aws iam create-instance-profile</code> command\" is a correct answer.</p><p><strong>CORRECT: </strong>\"Run the <code>aws iam add-role-to-instance-profile</code> command\" is a correct answer.</p><p><strong>CORRECT: </strong>\"Run the <code>aws ec2 associate-instance-profile</code> command\" is a correct answer.</p><p><strong>INCORRECT:</strong> \"Run the <code>CreateInstanceProfile</code> API\" is incorrect as this is an API action, not an AWS CLI command.</p><p><strong>INCORRECT:</strong> \"Run the <code>AddRoleToInstanceProfile</code> API\" is incorrect as this is an API action, not an AWS CLI command.</p><p><strong>INCORRECT:</strong> \"Run the <code>AssignInstanceProfile</code> API\" is incorrect as this is an API action, not an AWS CLI command.</p><p><strong>References:</strong></p><p><a href=\"https://aws.amazon.com/premiumsupport/knowledge-center/attach-replace-ec2-instance-profile/\">https://aws.amazon.com/premiumsupport/knowledge-center/attach-replace-ec2-instance-profile/</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-iam/\">https://digitalcloud.training/aws-iam/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://aws.amazon.com/premiumsupport/knowledge-center/attach-replace-ec2-instance-profile/",
      "https://digitalcloud.training/aws-iam/"
    ]
  },
  {
    "id": 9,
    "question": "<p>An application runs on a fleet of Amazon EC2 instances and stores data in a Microsoft SQL Server database hosted on Amazon RDS. The developer wants to avoid storing database connection credentials the application code. The developer would also like a solution that automatically rotates the credentials.</p><p>What is the MOST secure way to store and access the database credentials?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use AWS Systems Manager Parameter store to store the credentials. Enable automatic rotation of the credentials.</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Create an IAM role that has permissions to access the database. Attach the role to the EC2 instance.</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Use AWS Secrets Manager to store the credentials. Retrieve the credentials from Secrets Manager as needed.</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Store the credentials in an encrypted source code repository. Retrieve the credentials from AWS CodeCommit as needed.</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Security, Identity, & Compliance",
    "explanation": "<p>AWS Secrets Manager can be used for secure storage of secrets such as database connection credentials. Automatic rotation is supported for several RDS database types including Microsoft SQL Server. This is the most secure solution for storing and retrieving the credentials.</p><p><strong>CORRECT: </strong>\"Use AWS Secrets Manager to store the credentials. Retrieve the credentials from Secrets Manager as needed\" is the correct answer (as explained above.)</p><p><strong>INCORRECT:</strong> \"Use AWS Systems Manager Parameter store to store the credentials. Enable automatic rotation of the credentials\" is incorrect.</p><p>With SSM Parameter Store you cannot enable automatic rotation. You can rotate the credentials but you would need to configure your own Lambda function.</p><p><strong>INCORRECT:</strong> \"Create an IAM role that has permissions to access the database. Attach the role to the EC2 instance\" is incorrect.</p><p>RDS for SQL Server does support windows authentication using a managed Microsoft AD with IAM roles for permissions to the AD service, but this is not described in the solution.</p><p><strong>INCORRECT:</strong> \"Store the credentials in an encrypted source code repository. Retrieve the credentials from AWS CodeCommit as needed\" is incorrect.</p><p>This is not a solution that is suitable for retrieving database connection credentials and it does not support automatic rotation.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html\">https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-secrets-manager/\">https://digitalcloud.training/aws-secrets-manager/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html",
      "https://digitalcloud.training/aws-secrets-manager/"
    ]
  },
  {
    "id": 10,
    "question": "<p>An engineer is constructing a web-based application that uses Amazon DynamoDB for storing data. The data is distributed across two tables: 'authors' and 'books'. The 'authors' table uses 'authorName' as its partition key, while the 'books' table has 'bookTitle' as the partition key and 'authorName' as the sort key.</p><p>The application requires the ability to fetch multiple books and authors simultaneously in a single database operation for effective performance. The engineer is seeking a solution that maximizes application efficiency and reduces network traffic.</p><p>What strategy should the engineer employ to achieve these requirements?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Execute individual GetItem operations for each book and author to be retrieved.</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>First query the 'books' table using 'bookTitle' as a key condition, then separately query the 'authors' table using 'authorName'.</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Utilize the DynamoDB BatchGetItem operation to fetch multiple items from both tables in a single network round trip.</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Use a DynamoDB Scan operation to fetch the required items from both tables.</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Database",
    "explanation": "<p>The BatchGetItem operation in DynamoDB permits the retrieval of multiple items from one or more tables in a single operation, thereby minimizing network traffic and improving overall application performance.</p><p><strong>CORRECT: </strong>\"Utilize the DynamoDB BatchGetItem operation to fetch multiple items from both tables in a single network round trip\" is the correct answer (as explained above.)</p><p><strong>INCORRECT:</strong> \"Execute individual GetItem operations for each book and author to be retrieved\" is incorrect.</p><p>Executing individual GetItem operations for each book and author would increase network traffic and slow down application performance.</p><p><strong>INCORRECT:</strong> \"Use a DynamoDB Scan operation to fetch the required items from both tables\" is incorrect.</p><p>A DynamoDB Scan operation retrieves every item in the table and then filters to provide the required result, making it inefficient in this context.</p><p><strong>INCORRECT:</strong> \"First query the 'books' table using 'bookTitle' as a key condition, then separately query the 'authors' table using 'authorName'\" is incorrect.</p><p>Querying the 'books' and 'authors' tables separately would increase the number of network operations and negatively affect the application's performance.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_BatchGetItem.html\">https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_BatchGetItem.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-dynamodb/\">https://digitalcloud.training/amazon-dynamodb/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_BatchGetItem.html",
      "https://digitalcloud.training/amazon-dynamodb/"
    ]
  },
  {
    "id": 11,
    "question": "<p>A gaming company is building an application to track the scores for their games using an Amazon DynamoDB table. Each item in the table is identified by a partition key<br>(user_id) and a sort key (game_name). The table also includes the attribute “TopScore”. The table design is shown below:</p><p><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_12-46-57-e4f332660cb93be84d6e7c81efbf4f49.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_12-46-57-e4f332660cb93be84d6e7c81efbf4f49.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p><p>A Developer has been asked to write a leaderboard application to display the highest achieved scores for each game (game_name), based on the score identified in the “TopScore” attribute.</p><p>What process will allow the Developer to extract results MOST efficiently from the DynamoDB table?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Create a global secondary index with a partition key of “game_name” and a sort key of “TopScore” and get the results based on the score attribute</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Use a DynamoDB scan operation to retrieve the scores for “game_name” using the “TopScore” attribute, and order the results based on the score attribute</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Create a local secondary index with a partition key of “game_name” and a sort key of “TopScore” and get the results based on the score attribute</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Create a global secondary index with a partition key of “user_id” and a sort key of “game_name” and get the results based on the “TopScore” attribute</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Database",
    "explanation": "<p>In an Amazon DynamoDB table, the primary key that uniquely identifies each item in the table can be composed not only of a partition key, but also of a sort key.</p><p>Well-designed sort keys have two key benefits:</p><p>- They gather related information together in one place where it can be queried efficiently. Careful design of the sort key lets you retrieve commonly needed groups of related items using range queries with operators such as begins_with, between, &gt;, &lt;, and so on.</p><p>- Composite sort keys let you define hierarchical (one-to-many) relationships in your data that you can query at any level of the hierarchy.</p><p>To speed up queries on non-key attributes, you can create a global secondary index. A global secondary index contains a selection of attributes from the base table, but they are organized by a primary key that is different from that of the table. The index key does not need to have any of the key attributes from the table. It doesn't even need to have the same key schema as a table.</p><p>For this scenario we need to identify the top achieved score for each game. The most efficient way to do this is to create a global secondary index using “game_name” as the partition key and “TopScore” as the sort key. We can then efficiently query the global secondary index to find the top achieved score for each game.</p><p><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_12-48-28-00f8197d84eb7e7e245b3858da7489b0.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_12-48-28-00f8197d84eb7e7e245b3858da7489b0.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p><p><strong>CORRECT: </strong>\"Create a global secondary index with a partition key of “game_name” and a sort key of “TopScore” and get the results based on the score attribute\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Create a local secondary index with a partition key of “game_name” and a sort key of “TopScore” and get the results based on the score attribute\" is incorrect. With a local secondary index you can have a different sort key but the partition key is the same.</p><p><strong>INCORRECT:</strong> \"Use a DynamoDB scan operation to retrieve the scores for “game_name” using the “TopScore” attribute, and order the results based on the score attribute\" is incorrect. This would be inefficient as it scans the whole table. First, we should create a global secondary index, and then use a query to efficiently retrieve the data.</p><p><strong>INCORRECT:</strong> \"Create a global secondary index with a partition key of “user_id” and a sort key of “game_name” and get the results based on the score attribute\" is incorrect as with a global secondary index you have a different partition key and sort key. Also, we don’t need “user_id”, we need “game_name” and “TopScore”.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-sort-keys.html\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-sort-keys.html</a></p><p><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-dynamodb/\">https://digitalcloud.training/amazon-dynamodb/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-sort-keys.html",
      "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html",
      "https://digitalcloud.training/amazon-dynamodb/"
    ]
  },
  {
    "id": 12,
    "question": "<p>A developer is planning the deployment of a new version of an application to AWS Elastic Beanstalk. The new version of the application should be deployed only to new EC2 instances.</p><p>Which deployment methods will meet these requirements? (Select TWO.)</p>",
    "corrects": [
      4,
      5
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>All at once</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Rolling</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Rolling with additional batch</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Immutable</p>",
        "correct": true
      },
      {
        "id": 5,
        "answer": "<p>Blue/green</p>",
        "correct": true
      }
    ],
    "multiple": true,
    "domain": "AWS Compute",
    "explanation": "<p>AWS Elastic Beanstalk provides several options for how deployments are processed, including deployment policies and options that let you configure batch size and health check behavior during deployments.</p><p>All at once:</p><p> • Deploys the new version to all instances simultaneously.</p><p>Rolling:</p><p> • Update a few instances at a time (bucket), and then move onto the next bucket once the first bucket is healthy (downtime for 1 bucket at a time).</p><p>Rolling with additional batch:</p><p>• Like Rolling but launches new instances in a batch ensuring that there is full availability.</p><p>Immutable:</p><p>• Launches new instances in a new ASG and deploys the version update to these instances before swapping traffic to these instances once healthy.</p><p>• Zero downtime.</p><p>Blue / Green deployment:</p><p> • Zero downtime and release facility.</p><p> • Create a new “stage” environment and deploy updates there.</p><p>The immutable and blue/green options both provide zero downtime as they will deploy the new version to a new version of the application. These are also the only two options that will ONLY deploy the updates to new EC2 instances.</p><p><strong>CORRECT: </strong>\"Immutable\" is the correct answer.</p><p><strong>CORRECT: </strong>\"Blue/green\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"All-at-once\" is incorrect as this will deploy the updates to existing instances.</p><p><strong>INCORRECT:</strong> \"Rolling\" is incorrect as this will deploy the updates to existing instances.</p><p><strong>INCORRECT:</strong> \"Rolling with additional batch\" is incorrect as this will launch new instances but will also update the existing instances as well (which is not allowed according to the requirements).</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.rolling-version-deploy.html\">https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.rolling-version-deploy.html</a></p><p><a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.deploy-existing-version.html\">https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.deploy-existing-version.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-elastic-beanstalk/\">https://digitalcloud.training/aws-elastic-beanstalk/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.rolling-version-deploy.html",
      "https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.deploy-existing-version.html",
      "https://digitalcloud.training/aws-elastic-beanstalk/"
    ]
  },
  {
    "id": 13,
    "question": "<p>A website is running on a single Amazon EC2 instance. A Developer wants to publish the website on the Internet and is creating an A record on Amazon Route 53 for the website’s public DNS name.</p><p>What type of IP address MUST be assigned to the EC2 instance and used in the A record to ensure ongoing connectivity?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Dynamic IP address</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Private IP address</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Elastic IP address</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Public IP address</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Networking & Content Delivery",
    "explanation": "<p>In Amazon Route 53 when you create an A record you must supply an IP address for the resource to connect to. For a public hosted zone this must be a public IP address.</p><p>There are three types of IP address that can be assigned to an Amazon EC2 instance:</p><p>• Public – public address that is assigned automatically to instances in public subnets and reassigned if instance is stopped/started.</p><p>• Private – private address assigned automatically to all instances.</p><p>• Elastic IP – public address that is static.</p><p>To ensure ongoing connectivity the Developer needs to use an Elastic IP address for the EC2 instance and DNS A record as this is the only type of static, public IP address you can assign to an Amazon EC2 instance.</p><p><strong>CORRECT: </strong>\"Elastic IP address\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Public IP address\" is incorrect as though this is a public IP address, it is not static and will change every time the EC2 instance restarts. Therefore, connectivity would be lost until you update the Route 53 A record.</p><p><strong>INCORRECT:</strong> \"Dynamic IP address\" is incorrect as a dynamic IP address is an IP address that will change over time. For this scenario a static, public address is required.</p><p><strong>INCORRECT:</strong> \"Private IP address\" is incorrect as a public IP address is required for the public DNS A record.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html\">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html</a></p><p><a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html\">https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-ec2/\">https://digitalcloud.training/amazon-ec2/</a></p><p><a href=\"https://digitalcloud.training/amazon-route-53/\">https://digitalcloud.training/amazon-route-53/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html",
      "https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html",
      "https://digitalcloud.training/amazon-ec2/",
      "https://digitalcloud.training/amazon-route-53/"
    ]
  },
  {
    "id": 14,
    "question": "<p>A company is deploying a new serverless application with an AWS Lambda function. A developer ran some test invocations using the AWS CLI. The function is invoking correctly and returning a success message, but not log data is being generated in Amazon CloudWatch Logs. The developer waited for 15 minutes but the log data is not showing up.</p><p>What is the most likely explanation for this issue?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>A log group and log stream has not been configured for the function in CloudWatch Logs.</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>The function configuration does not have CloudWatch Logs configured as a success destination.</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>The Lambda function does not have any explicit log statements for the log data to send it to CloudWatch Logs.</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>The function execution role does not have permission to write log data to CloudWatch Logs.</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "AWS Management & Governance",
    "explanation": "<p>AWS Lambda automatically monitors Lambda functions on your behalf, reporting metrics through Amazon CloudWatch. To help you troubleshoot failures in a function, after you set up permissions, Lambda logs all requests handled by your function and automatically stores logs generated by your code through Amazon CloudWatch Logs.</p><p>You can insert logging statements into your code to help you validate that your code is working as expected. Lambda automatically integrates with CloudWatch Logs and pushes all logs from your code to a CloudWatch Logs group associated with a Lambda function, which is named /aws/lambda/<em>&lt;function name&gt;</em>.</p><p>It can take 5-10 minutes for logs to show up after a function invocation. If your Lambda function code is executing, but you don't see any log data being generated after several minutes, this could mean that your execution role for the Lambda function didn't grant permissions to write log data to CloudWatch Logs.</p><p><br></p><p><strong>CORRECT: </strong>\"The function execution role does not have permission to write log data to CloudWatch Logs\" is the correct answer (as explained above.)</p><p><strong>INCORRECT:</strong> \"The Lambda function does not have any explicit log statements for the log data to send it to CloudWatch Logs\" is incorrect.</p><p>You do need to have logging statements in your code to send meaningful data to CloudWatch Logs. However, the most likely cause of having nothing show up is that the permissions were not assigned.</p><p><strong>INCORRECT:</strong> \"The function configuration does not have CloudWatch Logs configured as a success destination\" is incorrect.</p><p>CloudWatch Logs is not configured as a destination in a Lambda function.</p><p><strong>INCORRECT:</strong> \"A log group and log stream has not been configured for the function in CloudWatch Logs\" is incorrect.</p><p>The log group and log stream are automatically created as long as permissions are assigned.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-monitoring.html\">https://docs.aws.amazon.com/lambda/latest/dg/lambda-monitoring.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-lambda/\">https://digitalcloud.training/aws-lambda/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/lambda/latest/dg/lambda-monitoring.html",
      "https://digitalcloud.training/aws-lambda/"
    ]
  },
  {
    "id": 15,
    "question": "<p>An application writes items to an Amazon DynamoDB table. As the application scales to thousands of instances, calls to the DynamoDB API generate occasional <code>ThrottlingException</code> errors. The application is coded in a language incompatible with the AWS SDK.</p><p>How should the error be handled?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Pass API calls through Amazon API Gateway</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Add exponential backoff to the application logic</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Send the items to DynamoDB through Amazon Kinesis Data Firehose</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Use Amazon SQS as an API message bus</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Database",
    "explanation": "<p>Exponential backoff can improve an application's reliability by using progressively longer waits between retries. When using the AWS SDK, this logic is built‑in. However, in this case the application is incompatible with the AWS SDK so it is necessary to manually implement exponential backoff.</p><p><strong>CORRECT: </strong>\"Add exponential backoff to the application logic\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Use Amazon SQS as an API message bus\" is incorrect as SQS requires instances or functions to pick up and process the messages and put them in the DynamoDB table. This is unnecessary cost and complexity and will not improve performance.</p><p><strong>INCORRECT:</strong> \"Pass API calls through Amazon API Gateway\" is incorrect as this is not a suitable method of throttling the application. Exponential backoff logic in the application is a better solution.</p><p><strong>INCORRECT:</strong> \"Send the items to DynamoDB through Amazon Kinesis Data Firehose\" is incorrect as DynamoDB is not a destination for Kinesis Data Firehose.</p><p><strong>References:</strong></p><p><a href=\"https://aws.amazon.com/premiumsupport/knowledge-center/dynamodb-table-throttled/\">https://aws.amazon.com/premiumsupport/knowledge-center/dynamodb-table-throttled/</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-dynamodb/\">https://digitalcloud.training/amazon-dynamodb/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://aws.amazon.com/premiumsupport/knowledge-center/dynamodb-table-throttled/",
      "https://digitalcloud.training/amazon-dynamodb/"
    ]
  },
  {
    "id": 16,
    "question": "<p>An application is being migrated into the cloud. The application is stateless and will run on a fleet of Amazon EC2 instances. The application should scale elastically. How can a Developer ensure that the number of instances available is sufficient for current demand?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Create a launch configuration and use Amazon EC2 Auto Scaling</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Create a launch configuration and use Amazon CodeDeploy</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Create a task definition and use an Amazon ECS cluster</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Create a task definition and use an AWS Fargate cluster</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Compute",
    "explanation": "<p>Amazon EC2 Auto Scaling helps you maintain application availability and allows you to automatically add or remove EC2 instances according to conditions you define. You can use the fleet management features of EC2 Auto Scaling to maintain the health and availability of your fleet.</p><p>You can also use the dynamic and predictive scaling features of EC2 Auto Scaling to add or remove EC2 instances. Dynamic scaling responds to changing demand and predictive scaling automatically schedules the right number of EC2 instances based on predicted demand. Dynamic scaling and predictive scaling can be used together to scale faster.</p><p><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-23_00-36-03-e5bec27ced3332eb72a159f11d8848ec.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-23_00-36-03-e5bec27ced3332eb72a159f11d8848ec.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p><p>A <em>launch configuration</em> is an instance configuration template that an Auto Scaling group uses to launch EC2 instances. When you create a launch configuration, you specify information for the instances. Include the ID of the Amazon Machine Image (AMI), the instance type, a key pair, one or more security groups, and a block device mapping. If you've launched an EC2 instance before, you specified the same information in order to launch the instance.</p><p>You can specify your launch configuration with multiple Auto Scaling groups. However, you can only specify one launch configuration for an Auto Scaling group at a time, and you can't modify a launch configuration after you've created it. To change the launch configuration for an Auto Scaling group, you must create a launch configuration and then update your Auto Scaling group with it.</p><p>Therefore, the Developer should create a launch configuration and use Amazon EC2 Auto Scaling.</p><p><strong>CORRECT: </strong>\"Create a launch configuration and use Amazon EC2 Auto Scaling\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Create a launch configuration and use Amazon CodeDeploy\" is incorrect as CodeDeploy is not used for auto scaling of Amazon EC2 instances.</p><p><strong>INCORRECT:</strong> \"Create a task definition and use an Amazon ECS cluster\" is incorrect as the migrated application will be running on Amazon EC2 instances, not containers.</p><p><strong>INCORRECT:</strong> \"Create a task definition and use an AWS Fargate cluster\" is incorrect as the migrated application will be running on Amazon EC2 instances, not containers.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/what-is-amazon-ec2-auto-scaling.html\">https://docs.aws.amazon.com/autoscaling/ec2/userguide/what-is-amazon-ec2-auto-scaling.html</a></p><p><a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchConfiguration.html\">https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchConfiguration.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-ec2-auto-scaling/\">https://digitalcloud.training/amazon-ec2-auto-scaling/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/autoscaling/ec2/userguide/what-is-amazon-ec2-auto-scaling.html",
      "https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchConfiguration.html",
      "https://digitalcloud.training/amazon-ec2-auto-scaling/"
    ]
  },
  {
    "id": 17,
    "question": "<p>A Developer has created an Amazon Cognito user pool and configured a domain for it. The Developer wants to add sign-up and sign-in pages to an app with a company logo.</p><p>What should the Developer do to meet these requirements?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Customize the Amazon Cognito hosted web UI and add the company logo.</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Create a REST API using Amazon API Gateway and add a Cognito authorizer. Upload the company logo to a stage in the API.</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Upload the company logo to an Amazon S3 bucket. Specify the S3 object path in the app client settings in Amazon Cognito.</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Create a custom login page that includes the company logo and upload it to Amazon Cognito. Specify the login page in the app client settings.</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Security, Identity, & Compliance",
    "explanation": "<p>When you create a user pool in Amazon Cognito and then configure a domain for it, Amazon Cognito automatically provisions a hosted web UI to let you add sign-up and sign-in pages to your app. You can add a custom logo or customize the CSS for the hosted web UI.</p><p><strong>CORRECT: </strong>\"Customize the Amazon Cognito hosted web UI and add the company logo\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Create a REST API using Amazon API Gateway and add a Cognito authorizer. Upload the company logo to a stage in the API\" is incorrect. There is no need to add a REST API to this solution.</p><p><strong>INCORRECT:</strong> \"Upload the company logo to an Amazon S3 bucket. Specify the S3 object path in the app client settings in Amazon Cognito\" is incorrect. This is not required as the hosted web UI can be used.</p><p><strong>INCORRECT:</strong> \"Create a custom login page that includes the company logo and upload it to Amazon Cognito. Specify the login page in the app client settings\" is incorrect. This is not required as the hosted web UI can be used.</p><p><strong>References:</strong></p><p><a href=\"https://aws.amazon.com/premiumsupport/knowledge-center/cognito-hosted-web-ui/\">https://aws.amazon.com/premiumsupport/knowledge-center/cognito-hosted-web-ui/</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-cognito/\">https://digitalcloud.training/amazon-cognito/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://aws.amazon.com/premiumsupport/knowledge-center/cognito-hosted-web-ui/",
      "https://digitalcloud.training/amazon-cognito/"
    ]
  },
  {
    "id": 18,
    "question": "<p>An eCommerce application uses an Amazon RDS database with Amazon ElastiCache in front. Stock volume data is updated dynamically in listings as sales are made. Customers have complained that occasionally the stock volume data is incorrect, and they end up purchasing items that are out of stock. A Developer has checked the front end and indeed some items display the incorrect stock count.</p><p>What could be causing this issue?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>The Amazon RDS database has insufficient IOPS provisioned for its EBS volumes.</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>The stock volume data is being retrieved using a write-through ElastiCache cluster.</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>The Amazon RDS database is deployed as Multi-AZ and the standby is inconsistent.</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>The cache is not being invalidated when the stock volume data is changed.</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "AWS Database",
    "explanation": "<p>Amazon ElastiCache is being used to cache data from the Amazon RDS database to improve performance when performing queries. In this case the cache has stale stock volume data stored and is returning this information when customers are purchasing items.</p><p>The resolution is to ensure that the cache is invalidated whenever the stock volume data is changed. This can be done in the application layer.</p><p><strong>CORRECT: </strong>\"The cache is not being invalidated when the stock volume data is changed\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"The stock volume data is being retrieved using a write-through ElastiCache cluster\" is incorrect. If this was the case the data would not be stale.</p><p><strong>INCORRECT:</strong> \"The Amazon RDS database is deployed as Multi-AZ and the standby is inconsistent\" is incorrect. Multi-AZ standbys are not used for reading data and the replication is synchronous so it would not be inconsistent.</p><p><strong>INCORRECT:</strong> \"The Amazon RDS database has insufficient IOPS provisioned for its EBS volumes\" is incorrect. This is not the issue here; the stale data is being retrieved from the ElastiCache database.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Strategies.html\">https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Strategies.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-elasticache/\">https://digitalcloud.training/amazon-elasticache/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Strategies.html",
      "https://digitalcloud.training/amazon-elasticache/"
    ]
  },
  {
    "id": 19,
    "question": "<p>An application will use AWS Lambda and an Amazon RDS database. The Developer needs to secure the database connection string and enable automatic rotation every 30 days. What is the SIMPLEST way to achieve this requirement?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Store a SecureString in Systems Manager Parameter Store and enable automatic rotation every 30 days</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Store a secret in AWS Secrets Manager and enable automatic rotation every 30 days</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Store the connection string as an encrypted environment variable in Lambda and create a separate function that rotates the connection string every 30 days</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Store the connection string in an encrypted Amazon S3 bucket and use a scheduled CloudWatch Event to update the connection string every 30 days</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Security, Identity, & Compliance",
    "explanation": "<p>AWS Secrets Manager encrypts secrets at rest using encryption keys that you own and store in AWS Key Management Service (KMS). When you retrieve a secret, Secrets Manager decrypts the secret and transmits it securely over TLS to your local environment.</p><p>With AWS Secrets Manager, you can rotate secrets on a schedule or on demand by using the Secrets Manager console, AWS SDK, or AWS CLI.</p><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-23_00-40-22-078df4f6ca2e21741c5dfb063b474201.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-23_00-40-22-078df4f6ca2e21741c5dfb063b474201.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div></span><p>For example, to rotate a database password, you provide the database type, rotation frequency, and master database credentials when storing the password in Secrets Manager. Secrets Manager natively supports rotating credentials for databases hosted on Amazon RDS and Amazon DocumentDB and clusters hosted on Amazon Redshift.</p><p><strong>CORRECT: </strong>\"Store a secret in AWS Secrets Manager and enable automatic rotation every 30 days\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Store a SecureString in Systems Manager Parameter Store and enable automatic rotation every 30 days\" is incorrect as SSM Parameter Store does not support automatic key rotation.</p><p><strong>INCORRECT:</strong> \"Store the connection string as an encrypted environment variable in Lambda and create a separate function that rotates the connection string every 30 days\" is incorrect as this is not the simplest solution. In this scenario using AWS Secrets Manager would be easier to implement as it provides native features for rotating the secret.</p><p><strong>INCORRECT:</strong> \"Store the connection string in an encrypted Amazon S3 bucket and use a scheduled CloudWatch Event to update the connection string every 30 days\" is incorrect. There is no native capability of CloudWatch to update connection strings so you would need some other service such as a Lambda function to execute and rotate the connection string which is missing from this answer.</p><p><strong>References:</strong></p><p><a href=\"https://aws.amazon.com/secrets-manager/features/\">https://aws.amazon.com/secrets-manager/features/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://aws.amazon.com/secrets-manager/features/"
    ]
  },
  {
    "id": 20,
    "question": "<p>An application reads data from Amazon S3 and makes 55,000 read requests per second. A Developer must design the storage solution to ensure the performance requirements are met cost-effectively.</p><p>How can the storage be optimized to meet these requirements?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Move the files to Amazon DynamoDB. Index the files with S3 metadata.</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Move the files to Amazon EFS. Index the files with S3 metadata.</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Create at least 10 prefixes and split the files across the prefixes.</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Create at least 10 S3 buckets and split the files across the buckets.</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Storage",
    "explanation": "<p>To avoid throttling in Amazon S3 you must ensure you do not exceed certain limits on a per-prefix basis. You can send 3,500 PUT/COPY/POST/DELETE or 5,500 GET/HEAD requests per second per prefix in an Amazon S3 bucket. There are no limits to the number of prefixes that you can have in your bucket.</p><p>In this case the Developer would need to split the files across at least 10 prefixes in a single Amazon S3 bucket. The application should then read the files across the prefixes in parallel.</p><p><strong>CORRECT: </strong>\"Create at least 10 prefixes and split the files across the prefixes\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Create at least 10 S3 buckets and split the files across the buckets\" is incorrect. Performance is improved based on splitting reads across prefixes, not buckets.</p><p><strong>INCORRECT:</strong> \"Move the files to Amazon EFS. Index the files with S3 metadata\" is incorrect. This is not cost-effective.</p><p><strong>INCORRECT:</strong> \"Move the files to Amazon DynamoDB. Index the files with S3 metadata\" is incorrect. This is not cost-effective.</p><p><strong>References:</strong></p><p><a href=\"https://aws.amazon.com/premiumsupport/knowledge-center/s3-request-limit-avoid-throttling/\">https://aws.amazon.com/premiumsupport/knowledge-center/s3-request-limit-avoid-throttling/</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-s3-and-glacier/\">https://digitalcloud.training/amazon-s3-and-glacier/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://aws.amazon.com/premiumsupport/knowledge-center/s3-request-limit-avoid-throttling/",
      "https://digitalcloud.training/amazon-s3-and-glacier/"
    ]
  },
  {
    "id": 21,
    "question": "<p>A company is creating a serverless application that uses AWS Lambda functions. The developer has written the code to initialize the AWS SDK outside of the Lambda handler function.</p><p>What is PRIMARY benefit of this action?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Takes advantage of execution environment reuse.</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Creates a new SDK instance for each invocation.</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Improves readability and reduces complexity.</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>It minimizes the deployment package size.</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Compute",
    "explanation": "<p>You should initialize SDK clients and database connections outside of the function handler, and cache static assets locally in the /tmp directory. Subsequent invocations processed by the same instance of your function can reuse these resources. This saves cost by reducing function run time.</p><p>The primary benefit of this technique is to take advantage of execution environment reuse to improve the performance of your function.</p><p><strong>CORRECT: </strong>\"Takes advantage of execution environment reuse\" is the correct answer (as explained above.)</p><p><strong>INCORRECT:</strong> \"Creates a new SDK instance for each invocation\" is incorrect.</p><p>This is the opposite of what we are trying to achieve here.</p><p><strong>INCORRECT:</strong> \"It minimizes the deployment package size\" is incorrect.</p><p>This technique does not affect the deployment package size.</p><p><strong>INCORRECT:</strong> \"Improves readability and reduces complexity\" is incorrect.</p><p>It may improve readability but that is debatable. This is not the primary reason you would use this technique.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/best-practices.html\">https://docs.aws.amazon.com/lambda/latest/dg/best-practices.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-lambda/\">https://digitalcloud.training/aws-lambda/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/lambda/latest/dg/best-practices.html",
      "https://digitalcloud.training/aws-lambda/"
    ]
  },
  {
    "id": 22,
    "question": "<p>The source code for an application is stored in a file named index.js that is in a folder along with a template file that includes the following code:</p><div class=\"ud-component--base-components--code-block\"><div><pre class=\"prettyprint linenums prettyprinted\" role=\"presentation\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><span class=\"typ\">AWSTemplateFormatVersion</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'2010-09-09'</span></li><li class=\"L1\"><span class=\"typ\">Transform</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'AWS::Serverless-2016-10-31'</span></li><li class=\"L2\"><span class=\"typ\">Resources</span><span class=\"pun\">:</span></li><li class=\"L3\"><span class=\"typ\">LambdaFunctionWithAPI</span><span class=\"pun\">:</span></li><li class=\"L4\"><span class=\"typ\">Type</span><span class=\"pun\">:</span><span class=\"pln\"> AWS</span><span class=\"pun\">::</span><span class=\"typ\">Serverless</span><span class=\"pun\">::</span><span class=\"typ\">Function</span></li><li class=\"L5\"><span class=\"typ\">Properties</span><span class=\"pun\">:</span></li><li class=\"L6\"><span class=\"typ\">Handler</span><span class=\"pun\">:</span><span class=\"pln\"> index</span><span class=\"pun\">.</span><span class=\"pln\">handler</span></li><li class=\"L7\"><span class=\"typ\">Runtime</span><span class=\"pun\">:</span><span class=\"pln\"> nodejs12</span><span class=\"pun\">.</span><span class=\"pln\">x</span></li></ol></pre></div></div><p>What does a Developer need to do to prepare the template so it can be deployed using an AWS CLI command?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Run the <code>aws cloudformation package</code> command to upload the source code to an Amazon S3 bucket and produce a modified CloudFormation template</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Run the <code>aws cloudformation compile</code> command to base64 encode and embed the source file into a modified CloudFormation template</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Run the <code>aws lambda zip</code> command to package the source file together with the CloudFormation template and deploy the resulting zip archive</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Run the <code>aws serverless create-package</code> command to embed the source file directly into the existing CloudFormation template</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Management & Governance",
    "explanation": "<p>The template shown is an AWS SAM template for deploying a serverless application. This can be identified by the template header: <em>Transform: 'AWS::Serverless-2016-10-31'</em></p><p>The Developer will need to package and then deploy the template. To do this the source code must be available in the same directory or referenced using the “codeuri” parameter. Then, the Developer can use the “aws cloudformation package” or “sam package” commands to prepare the local artifacts (local paths) that your AWS CloudFormation template references.</p><p>The command uploads local artifacts, such as source code for an AWS Lambda function or a Swagger file for an AWS API Gateway REST API, to an S3 bucket. The command returns a copy of your template, replacing references to local artifacts with the S3 location where the command uploaded the artifacts.</p><p>Once that is complete the template can be deployed using the “aws cloudformation deploy” or “sam deploy” commands. Therefore, the next step in this scenario is for the Developer to run the “aws cloudformation” package command to upload the source code to an Amazon S3 bucket and produce a modified CloudFormation template. An example of this command is provided below:</p><p><em>aws cloudformation package --template-file /</em><code><em>path_to_template/template.json</em></code><em> --s3-bucket </em><code><em>bucket-name</em></code><em> --output-template-file </em><code><em>packaged-template.json</em></code></p><p><strong>CORRECT: </strong>\"Run the <code>aws cloudformation package</code> command to upload the source code to an Amazon S3 bucket and produce a modified CloudFormation template\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Run the aws cloudformation compile command to base64 encode and embed the source file into a modified CloudFormation template\" is incorrect as the Developer should run the “aws cloudformation package” command.</p><p><strong>INCORRECT:</strong> \"Run the <code>aws lambda zip</code> command to package the source file together with the CloudFormation template and deploy the resulting zip archive\" is incorrect as the Developer should run the “aws cloudformation package” command which will automatically copy the relevant files to Amazon S3.</p><p><strong>INCORRECT:</strong> \"Run the <code>aws serverless create-package</code> command to embed the source file directly into the existing CloudFormation template\" is incorrect as the Developer has the choice to run either “aws cloudformation package” or “sam package”, but not “aws serverless create-package”.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/cli/latest/reference/cloudformation/package.html\">https://docs.aws.amazon.com/cli/latest/reference/cloudformation/package.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-sam/\">https://digitalcloud.training/aws-sam/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/cli/latest/reference/cloudformation/package.html",
      "https://digitalcloud.training/aws-sam/"
    ]
  },
  {
    "id": 23,
    "question": "<p>A Developer is creating an AWS Lambda function that will process data from an Amazon Kinesis data stream. The function is expected to be invoked 50 times per second and take 100 seconds to complete each request.</p><p>What MUST the Developer do to ensure the functions runs without errors?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>No action is required as AWS Lambda can easily accommodate this requirement</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Implement exponential backoff in the function code</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Contact AWS and request to increase the limit for concurrent executions</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Increase the concurrency limit for the function</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Compute",
    "explanation": "<p>Concurrency is the number of requests that your function is serving at any given time. When your function is invoked, Lambda allocates an instance of it to process the event. When the function code finishes running, it can handle another request. If the function is invoked again while a request is still being processed, another instance is allocated, which increases the function's concurrency.</p><p>Concurrency is subject to a Regional limit that is shared by all functions in a Region. For an initial burst of traffic, your functions' cumulative concurrency in a Region can reach an initial level of between 500 and 3000, which varies per Region:</p><p>• <strong>3000</strong> – US West (Oregon), US East (N. Virginia), Europe (Ireland)</p><p>• <strong>1000</strong> – Asia Pacific (Tokyo), Europe (Frankfurt)</p><p>• <strong>500</strong> – Other Regions</p><p>After the initial burst, your functions' concurrency can scale by an additional 500 instances each minute. This continues until there are enough instances to serve all requests, or until a concurrency limit is reached. When requests come in faster than your function can scale, or when your function is at maximum concurrency, additional requests fail with a throttling error (429 status code).</p><p><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_14-11-32-36763214cd8269e631d16f5e21a39386.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_14-11-32-36763214cd8269e631d16f5e21a39386.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p><p>The function continues to scale until the account's concurrency limit for the function's Region is reached. The function catches up to demand, requests subside, and unused instances of the function are stopped after being idle for some time. Unused instances are frozen while they're waiting for requests and don't incur any charges.</p><p>The regional concurrency limit starts at 1,000. You can increase the limit by submitting a request in the Support Center console.</p><p><strong>Calculating concurrency requirements for this scenario</strong></p><p>To calculate the concurrency requirements for this scenario, simply multiply the invocation requests per second (50) with the average execution time in seconds (100). This calculation is 50 x 100 = 5,000.</p><p>Therefore, 5,000 concurrent executions is over the default limit and the Developer will need to request in the AWS Support Center console.</p><p><strong>CORRECT: </strong>\"Contact AWS and request to increase the limit for concurrent executions\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"No action is required as AWS Lambda can easily accommodate this requirement\" is incorrect as by default the AWS account will be limited. Lambda can easily scale to this level of demand however the account limits must first be increased.</p><p><strong>INCORRECT:</strong> \"Increase the concurrency limit for the function\" is incorrect as the default account limit of 1,000 concurrent executions will mean you can only assign up to 900 executions to the function (100 must be left unreserved). This is insufficient for this requirement to the account limit must be increased.</p><p><strong>INCORRECT:</strong> \"Implement exponential backoff in the function code\" is incorrect. Exponential backoff means configuring the application to wait longer between API calls, slowing the demand. However, this is not a good resolution to this issue as it will have negative effects on the application. The correct choice is to raise the account limits so the function can concurrently execute according to its requirements.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-scaling.html\">https://docs.aws.amazon.com/lambda/latest/dg/invocation-scaling.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-lambda/\">https://digitalcloud.training/aws-lambda/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/lambda/latest/dg/invocation-scaling.html",
      "https://digitalcloud.training/aws-lambda/"
    ]
  },
  {
    "id": 24,
    "question": "<p>A company needs a version control system for collaborative software development. The solution must include support for batches of changes across multiple files and parallel branching.</p><p>Which AWS service will meet these requirements?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>AWS CodePipeline</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>AWS CodeCommit</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>AWS CodeBuild</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Amazon S3</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Developer Tools",
    "explanation": "<p>AWS CodeCommit is a version control service hosted by Amazon Web Services that you can use to privately store and manage assets (such as documents, source code, and binary files) in the cloud.</p><p><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-23_00-44-09-6cbb7709f71b6cac81aa926b106f948d.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-23_00-44-09-6cbb7709f71b6cac81aa926b106f948d.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p><p>CodeCommit is optimized for team software development. It manages batches of changes across multiple files, which can occur in parallel with changes made by other developers.</p><p><strong>CORRECT: </strong>\"AWS CodeCommit\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"AWS CodeBuild\" is incorrect as it is a fully managed continuous integration service that compiles source code, runs tests, and produces software packages that are ready to deploy.</p><p><strong>INCORRECT:</strong> \"AWS CodePipeline\" is incorrect as it is a fully managed <a href=\"https://aws.amazon.com/devops/continuous-delivery/\">continuous delivery</a> service that helps you automate your release pipelines for fast and reliable application and infrastructure updates.</p><p><strong>INCORRECT:</strong> \"Amazon S3\" is incorrect. Amazon S3 versioning supports the recovery of past versions of files, but it's not focused on collaborative file tracking features that software development teams need.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html\">https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-developer-tools/\">https://digitalcloud.training/aws-developer-tools/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://aws.amazon.com/devops/continuous-delivery/",
      "https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html",
      "https://digitalcloud.training/aws-developer-tools/"
    ]
  },
  {
    "id": 25,
    "question": "<p>An application uses Amazon API Gateway, an AWS Lambda function and a DynamoDB table. The developer requires that another Lambda function is triggered when an item lifecycle activity occurs in the DynamoDB table.</p><p>How can this be achieved?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Configure an Amazon CloudWatch alarm that sends an Amazon SNS notification. Trigger the Lambda function asynchronously from the SNS notification</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Configure an Amazon CloudTrail API alarm that sends a message to an Amazon SQS queue. Configure the Lambda function to poll the queue and invoke the function synchronously</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Enable a DynamoDB stream and trigger the Lambda function synchronously from the stream</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Enable a DynamoDB stream and trigger the Lambda function asynchronously from the stream</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Database",
    "explanation": "<p>Amazon DynamoDB is integrated with AWS Lambda so that you can create <em>triggers</em>—pieces of code that automatically respond to events in DynamoDB Streams. With triggers, you can build applications that react to data modifications in DynamoDB tables.</p><p>If you enable DynamoDB Streams on a table, you can associate the stream Amazon Resource Name (ARN) with an AWS Lambda function that you write. Immediately after an item in the table is modified, a new record appears in the table's stream. AWS Lambda polls the stream and invokes your Lambda function synchronously when it detects new stream records.</p><p><strong>CORRECT: </strong>\"Enable a DynamoDB stream and trigger the Lambda function synchronously from the stream\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Enable a DynamoDB stream and trigger the Lambda function asynchronously from the stream\" is incorrect as the invocation should be synchronous.</p><p><strong>INCORRECT:</strong> \"Configure an Amazon CloudWatch alarm that sends an Amazon SNS notification. Trigger the Lambda function asynchronously from the SNS notification\" is incorrect as you cannot configure a CloudWatch alarm that notifies based on item lifecycle events. It is better to use DynamoDB streams and integrate Lambda.</p><p><strong>INCORRECT:</strong> \"Configure an Amazon CloudTrail API alarm that sends a message to an Amazon SQS queue. Configure the Lambda function to poll the queue and invoke the function synchronously\" is incorrect. There is no such alarm that notifies from Amazon CloudTrail relating to item lifecycle events.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.Lambda.html\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.Lambda.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-dynamodb/\">https://digitalcloud.training/amazon-dynamodb/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.Lambda.html",
      "https://digitalcloud.training/amazon-dynamodb/"
    ]
  },
  {
    "id": 26,
    "question": "<p>A Developer is using AWS SAM to create a template for deploying a serverless application. The Developer plans deploy an AWS Lambda function and an Amazon DynamoDB table using the template.</p><p>Which resource types should the Developer specify? (Select TWO.)</p>",
    "corrects": [
      1,
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p><code>AWS::Serverless::SimpleTable</code> </p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p><code>AWS::Serverless:Function</code> </p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p><code>AWS::Serverless::Application</code> </p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p><code>AWS::Serverless:API</code> </p>",
        "correct": false
      },
      {
        "id": 5,
        "answer": "<p><code>AWS::Serverless:LayerVersion </code> </p>",
        "correct": false
      }
    ],
    "multiple": true,
    "domain": "AWS Compute",
    "explanation": "<p>A <strong>serverless application</strong> is a combination of Lambda functions, event sources, and other resources that work together to perform tasks. Note that a serverless application is more than just a Lambda function—it can include additional resources such as APIs, databases, and event source mappings.</p><p>AWS SAM templates are an extension of AWS CloudFormation templates, with some additional components that make them easier to work with.</p><p>To create a Lambda function using an AWS SAM template the Developer can use the AWS::Serverless::Function resource type. The AWS::Serverless::Function resource type can be used to Create a Lambda function, IAM execution role, and event source mappings that trigger the function.</p><p>To create a DynamoDB table using an AWS SAM template the Developer can use the AWS::Serverless::SimpleTable resource type which creates a DynamoDB table with a single attribute primary key. It is useful when data only needs to be accessed via a primary key.</p><p><strong>CORRECT: </strong>\"<code>AWS::Serverless:Function</code>\" is a correct answer.</p><p><strong>CORRECT: </strong>\"<code>AWS::Serverless:SimpleTable</code>\" is also a correct answer.</p><p><strong>INCORRECT:</strong> \"<code>AWS::Serverless::Application</code>\" is incorrect as this embeds a serverless application from the <a href=\"https://serverlessrepo.aws.amazon.com/applications\">AWS Serverless Application Repository</a> or from an Amazon S3 bucket as a nested application.</p><p><strong>INCORRECT:</strong> \"<code>AWS::Serverless:LayerVersion</code>\" is incorrect as this creates a Lambda LayerVersion that contains library or runtime code needed by a Lambda Function.</p><p><strong>INCORRECT:</strong> \"<code>AWS::Serverless:API</code>\" is incorrect as this creates a collection of Amazon API Gateway resources and methods that can be invoked through HTTPS endpoints.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html\">https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-sam/\">https://digitalcloud.training/aws-sam/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://serverlessrepo.aws.amazon.com/applications",
      "https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html",
      "https://digitalcloud.training/aws-sam/"
    ]
  },
  {
    "id": 27,
    "question": "<p>A financial application is hosted on an Auto Scaling group of EC2 instance with an Elastic Load Balancer. A Developer needs to capture information about the IP traffic going to and from network interfaces in the VPC.</p><p>How can the Developer capture this information?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Capture the information using a Network ACL</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Capture the information directly into Amazon CloudWatch Logs</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Create a flow log in the VPC and publish data to Amazon S3</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Create a flow log in the VPC and publish data to Amazon CloudTrail</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Networking & Content Delivery",
    "explanation": "<p>VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. Flow log data can be published to Amazon CloudWatch Logs or Amazon S3. After you've created a flow log, you can retrieve and view its data in the chosen destination.</p><p>Flow logs can help you with a number of tasks, such as:</p><p>• Diagnosing overly restrictive security group rules</p><p>• Monitoring the traffic that is reaching your instance</p><p>• Determining the direction of the traffic to and from the network interfaces</p><p>As you can see in the image below, you can create a flow log for a VPC, a subnet, or a network interface. If you create a flow log for a subnet or VPC, each network interface in that subnet or VPC is monitored.</p><p><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-23_00-42-52-226385bbe097171e36f1e176fc58bea1.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-23_00-42-52-226385bbe097171e36f1e176fc58bea1.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p><p>Therefore, the Developer should create a flow log in the VPC and publish data to Amazon S3. The Developer could also choose CloudWatch Logs as a destination for publishing the data, but this is not presented as an option.</p><p><strong>CORRECT: </strong>\"Create a flow log in the VPC and publish data to Amazon S3\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Capture the information directly into Amazon CloudWatch Logs\" is incorrect as you cannot capture this information directly into CloudWatch Logs. You would need to capture with a flow log and then publish to CloudWatch Logs.</p><p><strong>INCORRECT:</strong> \"Capture the information using a Network ACL\" is incorrect as you cannot capture data using a Network ACL as it is a subnet-level firewall.</p><p><strong>INCORRECT:</strong> \"Create a flow log in the VPC and publish data to Amazon CloudTrail\" is incorrect as you cannot publish data from a flow log to CloudTrail. Amazon CloudTrail captures information about API calls.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html\">https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-vpc/\">https://digitalcloud.training/amazon-vpc/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html",
      "https://digitalcloud.training/amazon-vpc/"
    ]
  },
  {
    "id": 28,
    "question": "<p>A Developer is creating a DynamoDB table for storing application logs. The table has 5 write capacity units (WCUs). The Developer needs to configure the read capacity units (RCUs) for the table. Which of the following configurations represents the most efficient use of throughput?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Eventually consistent reads of 5 RCUs reading items that are 4 KB in size</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Eventually consistent reads of 15 RCUs reading items that are 1 KB in size</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Strongly consistent reads of 5 RCUs reading items that are 4 KB in size</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Strongly consistent reads of 15 RCUs reading items that are 1KB in size</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Database",
    "explanation": "<p>Among these options, the most cost-efficient in terms of maximizing the number of read operations per RCU is:</p><p>· <strong>Eventually consistent reads of 15 RCUs reading items that are 1 KB in size.</strong></p><p>This choice utilizes the RCU allocation most effectively because:</p><p>· It leverages the lower RCU consumption of eventually consistent reads.</p><p>· It takes advantage of the smaller item size (1 KB), which requires fewer RCUs for the same number of operations compared to items up to 4 KB.</p><p><strong>CORRECT: </strong>\"Strongly consistent reads of 15 RCUs reading items that are 1KB in size\" is correct as described above.</p><p><strong>INCORRECT:</strong> \"Eventually consistent reads of 15 RCUs reading items that are 1 KB in size\" is incorrect as described above.</p><p><strong>INCORRECT:</strong> \"Strongly consistent reads of 5 RCUs reading items that are 4 KB in size\" is incorrect as described above.</p><p><strong>INCORRECT:</strong> \"Eventually consistent reads of 5 RCUs reading items that are 4 KB in size\" is incorrect as described above.</p><p><strong>References:</strong></p><p><a href=\"https://docs.amazonaws.cn/en_us/amazondynamodb/latest/developerguide/ProvisionedThroughput.html\">https://docs.amazonaws.cn/en_us/amazondynamodb/latest/developerguide/ProvisionedThroughput.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-dynamodb/\">https://digitalcloud.training/amazon-dynamodb/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.amazonaws.cn/en_us/amazondynamodb/latest/developerguide/ProvisionedThroughput.html",
      "https://digitalcloud.training/amazon-dynamodb/"
    ]
  },
  {
    "id": 29,
    "question": "<p>A company is creating an application that will require users to access AWS services and allow them to reset their own passwords. Which of the following would allow the company to manage users and authorization while allowing users to reset their own passwords?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Amazon Cognito identity pools and AWS IAM</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Amazon Cognito user pools and AWS KMS</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Amazon Cognito user pools and identity pools</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Amazon Cognito identity pools and AWS STS</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Security, Identity, & Compliance",
    "explanation": "<p>There are two key requirements in this scenario. Firstly the company wants to manage user accounts using a system that allows users to reset their own passwords. The company also wants to authorize users to access AWS services.</p><p>The first requirement is provided by an Amazon Cognito User Pool. With a Cognito user pool you can add sign-up and sign-in to mobile and web apps and it also offers a user directory so user accounts can be created directly within the user pool. Users also have the ability to reset their passwords.</p><p>To access AWS services you need a Cognito Identity Pool. An identity pool can be used with a user pool and enables a user to obtain temporary limited-privilege credentials to access AWS services.</p><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-23_00-45-06-c12af29c40eeac5da22793dd2408937f.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-23_00-45-06-c12af29c40eeac5da22793dd2408937f.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div></span><p>Therefore, the best answer is to use Amazon Cognito user pools and identity pools.</p><p><strong>CORRECT: </strong>\"Amazon Cognito user pools and identity pools\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Amazon Cognito identity pools and AWS STS\" is incorrect as there is no user directory in this solution. A Cognito user pool is required.</p><p><strong>INCORRECT:</strong> \"Amazon Cognito identity pools and AWS IAM\" is incorrect as a Cognito user pool should be used as the directory source for creating and managing users. IAM is used for accounts that are used to administer AWS services, not for application user access.</p><p><strong>INCORRECT:</strong> \"Amazon Cognito user pools and AWS KMS\" is incorrect as KMS is used for encryption, not for authentication to AWS services.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html\">https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html</a></p><p><strong>Save time with our exam-specific cheat sheets:</strong></p><p><a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-identity.html\">https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-identity.html</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html",
      "https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-identity.html"
    ]
  },
  {
    "id": 30,
    "question": "<p>An engineer is constructing an AWS Lambda function and intends to log specific key events that transpire during the function's execution. To correlate the events with a particular function invocation, the engineer is looking to incorporate a unique identifier.</p><p>The following code segment has been added to the Lambda function:</p><p>function handler (event, context) {</p><p>}</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use <strong>context.invocationId</strong> to extract the unique identifier tied to each function run.</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Use <strong>context.awsRequestId</strong> within the function to fetch the unique identifier associated with each invocation.</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Use <strong>context.lambdaId</strong> to get the unique identifier corresponding to each function invocation.</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Use <strong>event.requestId</strong> to obtain the unique identifier for each function execution.</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Compute",
    "explanation": "<p>The <strong>context</strong> object in a Lambda function provides metadata about the function and the current invocation, including a unique identifier for the request, <strong>awsRequestId</strong>, which can be used to correlate logs from a specific invocation.</p><p><strong>CORRECT: </strong>\"Use <strong>context.awsRequestId</strong> within the function to fetch the unique identifier associated with each invocation\" is the correct answer (as explained above.)</p><p><strong>INCORRECT:</strong> \"Use <strong>event.requestId</strong> to obtain the unique identifier for each function execution\" is incorrect.</p><p><strong>event.requestId</strong> is incorrect as the event object does not contain a property called <strong>requestId</strong>.</p><p><strong>INCORRECT:</strong> \"Use <strong>context.invocationId</strong> to extract the unique identifier tied to each function run\" is incorrect.</p><p><strong>context.invocationId</strong> is not valid as there is no such property in the context object of a Lambda function.</p><p><strong>INCORRECT:</strong> \"Use <strong>context.lambdaId</strong> to get the unique identifier corresponding to each function invocation\" is incorrect.</p><p><strong>context.lambdaId</strong> is not a valid property within the context object for a Lambda function.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/nodejs-context.html\">https://docs.aws.amazon.com/lambda/latest/dg/nodejs-context.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-lambda/\">https://digitalcloud.training/aws-lambda/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/lambda/latest/dg/nodejs-context.html",
      "https://digitalcloud.training/aws-lambda/"
    ]
  },
  {
    "id": 31,
    "question": "<p>An application uses both Amazon EC2 instances and on-premises servers. The on-premises servers are a critical component of the application, and a developer wants to collect metrics and logs from these servers. The developer would like to use Amazon CloudWatch.</p><p>How can the developer accomplish this?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Install an AWS SDK on the on-premises servers that automatically sends logs to CloudWatch.</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Install the CloudWatch agent on the on-premises servers and specify IAM credentials with permissions to CloudWatch.</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Install the CloudWatch agent on the on-premises servers and specify an IAM role with permissions to CloudWatch.</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Write a batch script that uses system utilities to collect performance metrics and application logs. Upload the metrics and logs to CloudWatch.</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Management & Governance",
    "explanation": "<p>You can download the CloudWatch agent package using either Systems Manager Run Command or an Amazon S3 download link. You then install the agent and specify the IAM credentials to use. The IAM credentials are an access key and secret access key of an IAM user that has permissions to Amazon CloudWatch.</p><p>Once this has been completed the on-premises servers will automatically send metrics and log files to Amazon CloudWatch and can be centrally monitored along with AWS services.</p><p><strong>CORRECT: </strong>Install the CloudWatch agent on the on-premises servers and specify IAM credentials with permissions to CloudWatch\" is the correct answer (as explained above.)</p><p><strong>INCORRECT:</strong> \"Install the CloudWatch agent on the on-premises servers and specify an IAM role with permissions to CloudWatch\" is incorrect.</p><p>You cannot specify a role with an on-premises server so you must use access keys instead.</p><p><strong>INCORRECT:</strong> \"Write a batch script that uses system utilities to collect performance metrics and application logs. Upload the metrics and logs to CloudWatch\" is incorrect.</p><p>The CloudWatch agent would be a better solution and you must have permissions to send this information to CloudWatch.</p><p><strong>INCORRECT:</strong> \"Install an AWS SDK on the on-premises servers that automatically sends logs to CloudWatch\" is incorrect.</p><p>The CloudWatch agent would be a better solution and you must have permissions to send this information to CloudWatch.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/install-CloudWatch-Agent-on-premise.html\">https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/install-CloudWatch-Agent-on-premise.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-cloudwatch/\">https://digitalcloud.training/amazon-cloudwatch/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/install-CloudWatch-Agent-on-premise.html",
      "https://digitalcloud.training/amazon-cloudwatch/"
    ]
  },
  {
    "id": 32,
    "question": "<p>A company runs an application on a fleet of web servers running on Amazon EC2 instances. The web servers are behind an Elastic Load Balancer (ELB) and use an Amazon DynamoDB table for storing session state. A Developer has been asked to implement a mechanism for automatically deleting session state data that is older than 24 hours.</p><p>What is the SIMPLEST solution to this requirement?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Add an attribute with the expiration time; name the attribute ItemExpiration</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Write a script that deletes old records; schedule the scripts as a cron job on an Amazon EC2 instance</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Each day, create a new table to hold session data; delete the previous day's table</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Add an attribute with the expiration time; enable the Time To Live feature based on that attribute</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "AWS Database",
    "explanation": "<p>Time to Live (TTL) for Amazon DynamoDB lets you define when items in a table expire so that they can be automatically deleted from the database. With TTL enabled on a table, you can set a timestamp for deletion on a per-item basis, allowing you to limit storage usage to only those records that are relevant.</p><p>TTL is useful if you have continuously accumulating data that loses relevance after a specific time period (for example, session data, event logs, usage patterns, and other temporary data). If you have sensitive data that must be retained only for a certain amount of time according to contractual or regulatory obligations, TTL helps you ensure that it is removed promptly and as scheduled.</p><p><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_12-45-44-de98b590380f9976a6dfd87ff1f39e99.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_12-45-44-de98b590380f9976a6dfd87ff1f39e99.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p><p>When Time to Live (TTL) is enabled on a table in Amazon DynamoDB, a background job checks the TTL attribute of items to determine whether they are expired.</p><p>DynamoDB compares the current time, in <a href=\"https://en.wikipedia.org/wiki/Unix_time\">epoch time format</a>, to the value stored in the user-defined Number attribute of an item. If the attribute’s value is in the epoch time format, is less than the current time, and is not older than 5 years, the item is deleted.</p><p>Processing takes place automatically, in the background, and doesn't affect read or write traffic to the table. In addition, deletes performed via TTL are not counted towards capacity units or request units. TTL deletes are available at no additional cost.</p><p>For this requirement, the Developer must add an attribute to each item with the expiration time in epoch format and then enable the Time To Live (TTL) feature based on that attribute.</p><p><strong>CORRECT: </strong>\"Add an attribute with the expiration time; enable the Time To Live feature based on that attribute\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Each day, create a new table to hold session data; delete the previous day's table\" is incorrect. This solution would delete some data that is not 24 hours old as it would have to run at a specific time.</p><p><strong>INCORRECT:</strong> \"Write a script that deletes old records; schedule the scripts as a cron job on an Amazon EC2 instance\" is incorrect. This is not an elegant solution and would also cost more as it requires RCUs/WCUs to delete the items.</p><p><strong>INCORRECT:</strong> \"Add an attribute with the expiration time; name the attribute ItemExpiration\" is incorrect as this is not a complete solution. You also need to enable the TTL feature on the table.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/howitworks-ttl.html\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/howitworks-ttl.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-dynamodb/\">https://digitalcloud.training/amazon-dynamodb/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://en.wikipedia.org/wiki/Unix_time",
      "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/howitworks-ttl.html",
      "https://digitalcloud.training/amazon-dynamodb/"
    ]
  },
  {
    "id": 33,
    "question": "<p>A Development team has deployed several applications running on an Auto Scaling fleet of Amazon EC2 instances. The Operations team have asked for a display that shows a key performance metric for each application on a single screen for monitoring purposes.</p><p>What steps should a Developer take to deliver this capability using Amazon CloudWatch?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Create a custom alarm with a unique metric name for each application</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Create a custom event with a unique metric name for each application</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Create a custom dimension with a unique metric name for each application</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Create a custom namespace with a unique metric name for each application</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "AWS Management & Governance",
    "explanation": "<p>A <em>namespace</em> is a container for CloudWatch metrics. Metrics in different namespaces are isolated from each other, so that metrics from different applications are not mistakenly aggregated into the same statistics.</p><p>Therefore, the Developer should create a custom namespace with a unique metric name for each application. This namespace will then allow the metrics for each individual application to be shown in a single view through CloudWatch.</p><p><strong>CORRECT: </strong>\"Create a custom namespace with a unique metric name for each application\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Create a custom dimension with a unique metric name for each application\" is incorrect as a dimension further clarifies what a metric is and what data it stores.</p><p><strong>INCORRECT:</strong> \"Create a custom event with a unique metric name for each application\" is incorrect as an event is not used to organize metrics for display.</p><p><strong>INCORRECT:</strong> \"Create a custom alarm with a unique metric name for each application\" is incorrect as alarms are used to trigger actions when a threshold is reached, this is not relevant to organizing metrics for display.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html\">https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/certification-training/aws-developer-associate/aws-management-and-governance/amazon-cloudwatch/\">https://digitalcloud.training/amazon-cloudwatch/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html",
      "https://digitalcloud.training/certification-training/aws-developer-associate/aws-management-and-governance/amazon-cloudwatch/"
    ]
  },
  {
    "id": 34,
    "question": "<p>A company wants a serverless solution for phased release of static websites hosted on various version control systems. Deployments should be triggered by Git branch merges and all data exchange should be over HTTPS.</p><p>Which option offers the LOWEST operational overhead?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Deploy websites on separate Amazon EC2 instances for each environment, use AWS CodeDeploy for automation, and link it with the version control systems.</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Use AWS Amplify for hosting, connect corresponding repository branches, and initiate deployments by merging changes to the needed branch.</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Use AWS Elastic Beanstalk for hosting and use AWS CodeStar to manage deployments and workflows.</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Use Amazon S3 to host the websites, create a manual script to deploy changes when there are code merges in the version control systems.</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Developer Tools",
    "explanation": "<p>AWS Amplify is designed to host static websites with continuous deployment linked to Git repositories. It allows you to connect branches in your repository with environments in Amplify, and to automatically deploy changes when you merge code to those branches. This solution requires the least operational overhead among the options.</p><p><strong>CORRECT: </strong>\"Use AWS Amplify for hosting, connect corresponding repository branches, and initiate deployments by merging changes to the needed branch\" is the correct answer (as explained above.)</p><p><strong>INCORRECT:</strong> \"Deploy websites on separate Amazon EC2 instances for each environment, use AWS CodeDeploy for automation, and link it with the version control systems\" is incorrect.</p><p>While Amazon EC2 could host the websites and AWS CodeDeploy could manage deployments, this is not a serverless solution as requested. The EC2 instances would need to run continuously, creating more operational overhead.</p><p><strong>INCORRECT:</strong> \"Use Amazon S3 to host the websites, create a manual script to deploy changes when there are code merges in the version control systems\" is incorrect.</p><p>While Amazon S3 can host static websites, creating a manual script to deploy changes adds unnecessary complexity and operational overhead compared to a service like Amplify that automates this process.</p><p><strong>INCORRECT:</strong> \"Use AWS Elastic Beanstalk for hosting and use AWS CodeStar to manage deployments and workflows\" is incorrect.</p><p>AWS Elastic Beanstalk is typically used for dynamic, multi-tier web applications, and AWS CodeStar provides a unified user interface, enabling you to easily manage your software development activities in one place. However, this combination could be more complex and require more operational overhead than AWS Amplify for a static website.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html"
    ]
  },
  {
    "id": 35,
    "question": "<p>A legacy service has an XML-based SOAP interface. The Developer wants to expose the functionality of the service to external clients with the Amazon API Gateway. Which technique will accomplish this?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Create a RESTful API with the API Gateway; transform the incoming XML into a valid message for the SOAP interface using mapping templates</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Create a RESTful API with the API Gateway; pass the incoming XML to the SOAP interface through an Application Load Balancer</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Create a RESTful API with the API Gateway; pass the incoming JSON to the SOAP interface through an Application Load Balancer</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Create a RESTful API with the API Gateway; transform the incoming JSON into a valid XML message for the SOAP interface using mapping templates</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "AWS Networking & Content Delivery",
    "explanation": "<p>Amazon API Gateway is an AWS service for creating, publishing, maintaining, monitoring, and securing REST and WebSocket APIs at any scale. API developers can create APIs that access AWS or other web services as well as data stored in the AWS Cloud.</p><p>In API Gateway, an API's method request can take a payload in a different format from the corresponding integration request payload, as required in the backend. Similarly, the backend may return an integration response payload different from the method response payload, as expected by the frontend.</p><p>API Gateway lets you use mapping templates to map the payload from a method request to the corresponding integration request and from an integration response to the corresponding method response.</p><p>If an existing legacy service returns XML-style data, you can use the API Gateway to transform the output to JSON as part of your modernization effort. The API Gateway can be configured to transform the output of legacy services from XML to JSON, allowing them to make a move that is seamless and non-disruptive. The transformation is specified using JSON-Schema.</p><p>Therefore, the technique the Developer should use is to create a RESTful API with the API Gateway and transform the incoming JSON into a valid XML message for the SOAP interface using mapping templates.</p><p><strong>CORRECT: </strong>\"Create a RESTful API with the API Gateway; transform the incoming JSON into a valid XML message for the SOAP interface using mapping templates\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Create a RESTful API with the API Gateway; pass the incoming JSON to the SOAP interface through an Application Load Balancer\" is incorrect as we don’t need an ALB to do this, we can use a mapping template within the API Gateway which will be more cost-efficient.</p><p><strong>INCORRECT:</strong> \"Create a RESTful API with the API Gateway; pass the incoming XML to the SOAP interface through an Application Load Balancer\" is incorrect as the incoming data will be JSON, not XML as the Developer needs to publish a modern application interface. A mapping template should also be used in place of the ALB.</p><p><strong>INCORRECT:</strong> \"Create a RESTful API with the API Gateway; transform the incoming XML into a valid message for the SOAP interface using mapping templates\" is incorrect as the incoming data will be JSON, not XML as the Developer needs to publish a modern application interface.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html\">https://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-api-gateway/\">https://digitalcloud.training/amazon-api-gateway/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html",
      "https://digitalcloud.training/amazon-api-gateway/"
    ]
  },
  {
    "id": 36,
    "question": "<p>To include objects defined by the AWS Serverless Application Model (SAM) in an AWS CloudFormation template, in addition to Resources, what section MUST be included in the document root?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Properties</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Globals</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Conditions</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Transform</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "AWS Compute",
    "explanation": "<p>The primary differences between AWS SAM templates and AWS CloudFormation templates are the following:</p><p>• <strong>Transform declaration.</strong> The declaration Transform: AWS::Serverless-2016-10-31 is required for AWS SAM templates. This declaration identifies an AWS CloudFormation template as an AWS SAM template.</p><p>• <strong>Globals section. </strong>The Globals section is unique to AWS SAM. It defines properties that are common to all your serverless functions and APIs. All the AWS::Serverless::Function, AWS::Serverless::Api, and AWS::Serverless::SimpleTable resources inherit the properties that are defined in the Globals section.</p><p>• <strong>Resources section. </strong>In AWS SAM templates the Resources section can contain a combination of AWS CloudFormation resources and AWS SAM resources.</p><p>Of these three sections, only the Transform section and Resources sections are required; the Globals section is optional.</p><p><strong>CORRECT: </strong>\"<code>Transform</code>\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"<code>Globals</code>\" is incorrect as this is not a required section.</p><p><strong>INCORRECT:</strong> \"<code>Conditions</code>\" is incorrect as this is an optional section.</p><p><strong>INCORRECT:</strong> \"<code>Properties</code>\" is incorrect as this is not a section in a template, it is used within a resource.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy.html\">https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-sam/\">https://digitalcloud.training/aws-sam/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy.html",
      "https://digitalcloud.training/aws-sam/"
    ]
  },
  {
    "id": 37,
    "question": "<p>A Developer is designing a fault-tolerant environment where client sessions will be saved. How can the Developer ensure that no sessions are lost if an Amazon EC2 instance fails?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use Amazon DynamoDB to perform scalable session handling</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Use Elastic Load Balancer connection draining to stop sending requests to failing instances</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Use Amazon SQS to save session data</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Use sticky sessions with an Elastic Load Balancer target group</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Database",
    "explanation": "<p>The <strong>DynamoDB Session Handler</strong> is a custom session handler for PHP that allows developers to use Amazon DynamoDB as a session store. Using DynamoDB for session storage alleviates issues that occur with session handling in a distributed web application by moving sessions off of the local file system and into a shared location. DynamoDB is fast, scalable, easy to setup, and handles replication of your data automatically.</p><p><strong>CORRECT: </strong>\"Use Amazon DynamoDB to perform scalable session handling\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Use sticky sessions with an Elastic Load Balancer target group\" is incorrect as this involves maintaining session state data on the EC2 instances which means that data is lost if an instance fails.</p><p><strong>INCORRECT:</strong> \"Use Amazon SQS to save session data\" is incorrect as SQS is not used for session data, it is used for application component decoupling.</p><p><strong>INCORRECT:</strong> \"Use Elastic Load Balancer connection draining to stop sending requests to failing instances\" is incorrect as this does not solve the problem of ensuring the session data is available, the data will be on the failing instance and will be lost.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/aws-sdk-php/v2/guide/feature-dynamodb-session-handler.html\">https://docs.aws.amazon.com/aws-sdk-php/v2/guide/feature-dynamodb-session-handler.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-dynamodb/\">https://digitalcloud.training/amazon-dynamodb/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/aws-sdk-php/v2/guide/feature-dynamodb-session-handler.html",
      "https://digitalcloud.training/amazon-dynamodb/"
    ]
  },
  {
    "id": 38,
    "question": "<p>A company is planning to use AWS CodeDeploy to deploy a new AWS Lambda function</p><p>What are the MINIMUM properties required in the 'resources' section of the AppSpec file for CodeDeploy to deploy the function successfully?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>name, alias, currentversion, and targetversion</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>name, alias, PlatformVersion, and type</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>TaskDefinition, LoadBalancerInfo, and ContainerPort</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>TaskDefinition, PlatformVersion, and ContainerName</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Developer Tools",
    "explanation": "<p>The content in the 'resources' section of the AppSpec file varies, depending on the compute platform of your deployment. The 'resources' section for an AWS Lambda deployment contains the name, alias, current version, and target version of a Lambda function.</p><p>Here is an example of a 'resources' section with the minimum required properties:</p><img src=\"https://img-c.udemycdn.com/redactor/raw/test_question_description/2022-04-30_07-11-12-a81cd00fae3f3338c68bdeaa23ac61f5.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/test_question_description/2022-04-30_07-11-12-a81cd00fae3f3338c68bdeaa23ac61f5.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div></span><p><strong>CORRECT: </strong>\"name, alias, currentversion, and targetversion\" is the correct answer (as explained above.)</p><p><strong>INCORRECT:</strong> \"name, alias, PlatformVersion, and type\" is incorrect (as explained above.)</p><p><strong>INCORRECT:</strong> \"TaskDefinition, LoadBalancerInfo, and ContainerPort\" is incorrect.</p><p>These properties are related to ECS deployments.</p><p><strong>INCORRECT:</strong> \"TaskDefinition, PlatformVersion, and ContainerName\" is incorrect.</p><p>These properties are related to ECS deployments.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-resources.html\">https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-resources.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-developer-tools/\">https://digitalcloud.training/aws-developer-tools/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-resources.html",
      "https://digitalcloud.training/aws-developer-tools/"
    ]
  },
  {
    "id": 39,
    "question": "<p>A company runs a decoupled application that uses an Amazon SQS queue. The messages are processed by an AWS Lambda function. The function is not keeping up with the number of messages in the queue. A developer noticed that though the application can process multiple messages per invocation, it is only processing one at a time.</p><p>How can the developer configure the application to process messages more efficiently?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Call the ChangeMessageVisibility API for the queue and set MessageRetentionPeriod to a value greater than the default of 1.</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Call the ReceiveMessage API to set MaxNumberOfMessages to a value greater than the default of 1.</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Call the SetQueueAttributes API for the queue and set MaxNumberOfMessages to a value greater than the default of 1.</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Call the ReceiveMessage API to set MaximumMessageSize to a value greater than the default of 1.</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Application Integration",
    "explanation": "<p>The ReceiveMessage API retrieves one or more messages (up to 10), from the specified queue. The MaxNumberOfMessages specifies the maximum number of messages to return. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10. Default: 1.</p><p>Changing the MaxNumberOfMessages using the ReceiveMessage API to a value greater than 1 will therefore enable the application to process more messages in a single invocation, leading to greater efficiency.</p><p><strong>CORRECT: </strong>\"Call the ReceiveMessage API to set MaxNumberOfMessages to a value greater than the default of 1\" is the correct answer (as explained above.)</p><p><strong>INCORRECT:</strong> \"Call the ReceiveMessage API to set MaximumMessageSize to a value greater than the default of 1\" is incorrect.</p><p>MaximumMessageSize specifies the maximum bytes a message can contain before SQS rejects it.</p><p><strong>INCORRECT:</strong> \"Call the ChangeMessageVisibility API for the queue and set MessageRetentionPeriod to a value greater than the default of 1\" is incorrect.</p><p>ChangeMessageVisibility changes the visibility timeout of a specified message in a queue to a new value.</p><p><strong>INCORRECT:</strong> \"Call the SetQueueAttributes API for the queue and set MaxNumberOfMessages to a value greater than the default of 1\" is incorrect.</p><p>MaxNumberOfMessages is configured using the ReceiveMessage API, not the SetQueueAttributes API.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_ReceiveMessage.html\">https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_ReceiveMessage.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-application-integration-services/\">https://digitalcloud.training/aws-application-integration-services/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_ReceiveMessage.html",
      "https://digitalcloud.training/aws-application-integration-services/"
    ]
  },
  {
    "id": 40,
    "question": "<p>An application uses an Auto Scaling group of Amazon EC2 instances, an Application Load Balancer (ALB), and an Amazon Simple Queue Service (SQS) queue. An Amazon CloudFront distribution caches content for global users. A Developer needs to add in-transit encryption to the data by configuring end-to-end SSL between the CloudFront Origin and the end users.</p><p>How can the Developer meet this requirement? (Select TWO.)</p>",
    "corrects": [
      1,
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Configure the Origin Protocol Policy</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Create an Origin Access Identity (OAI)</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Configure the Viewer Protocol Policy</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Add a certificate to the Auto Scaling Group</p>",
        "correct": false
      },
      {
        "id": 5,
        "answer": "<p>Create an encrypted distribution</p>",
        "correct": false
      }
    ],
    "multiple": true,
    "domain": "AWS Networking & Content Delivery",
    "explanation": "<p>For web distributions, you can configure CloudFront to require that viewers use HTTPS to request your objects, so that connections are encrypted when CloudFront communicates with viewers. You also can configure CloudFront to use HTTPS to get objects from your origin, so that connections are encrypted when CloudFront communicates with your origin.</p><p>If you configure CloudFront to require HTTPS both to communicate with viewers and to communicate with your origin, here's what happens when CloudFront receives a request for an object:</p><p>1. A viewer submits an HTTPS request to CloudFront. There's some SSL/TLS negotiation here between the viewer and CloudFront. In the end, the viewer submits the request in an encrypted format.</p><p>2. If the object is in the CloudFront edge cache, CloudFront encrypts the response and returns it to the viewer, and the viewer decrypts it.</p><p>3. If the object is not in the CloudFront cache, CloudFront performs SSL/TLS negotiation with your origin and, when the negotiation is complete, forwards the request to your origin in an encrypted format.</p><p>4. Your origin decrypts the request, encrypts the requested object, and returns the object to CloudFront.</p><p>5. CloudFront decrypts the response, re-encrypts it, and forwards the object to the viewer. CloudFront also saves the object in the edge cache so that the object is available the next time it's requested.</p><p>6. The viewer decrypts the response.</p><p>To enable SSL between the origin and the distribution the Developer can configure the Origin Protocol Policy. Depending on the domain name used (CloudFront default or custom), the steps are different. To enable SSL between the end-user and CloudFront the Viewer Protocol Policy should be configured.</p><p><strong>CORRECT: </strong>\"Configure the Origin Protocol Policy\" is a correct answer.</p><p><strong>CORRECT: </strong>\"Configure the Viewer Protocol Policy\" is also a correct answer.</p><p><strong>INCORRECT:</strong> \"Create an Origin Access Identity (OAI)\" is incorrect as this is a special user used for securing objects in Amazon S3 origins.</p><p><strong>INCORRECT:</strong> \"Add a certificate to the Auto Scaling Group\" is incorrect as you do not add certificates to an ASG. The certificate should be located on the ALB listener in this scenario.</p><p><strong>INCORRECT:</strong> \"Create an encrypted distribution\" is incorrect as there’s no such thing as an encrypted distribution</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html\">https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html</a></p><p><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-cloudfront-to-custom-origin.html\">https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-cloudfront-to-custom-origin.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-cloudfront/\">https://digitalcloud.training/amazon-cloudfront/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html",
      "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-cloudfront-to-custom-origin.html",
      "https://digitalcloud.training/amazon-cloudfront/"
    ]
  },
  {
    "id": 41,
    "question": "<p>An application has been instrumented to use the AWS X-Ray SDK to collect data about the requests the application serves. The Developer has set the user field on segments to a string that identifies the <code>user</code> who sent the request.</p><p>How can the Developer search for segments associated with specific users?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>By using the <code>GetTraceGraph</code> API with a filter expression</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Use a filter expression to search for the <code>user</code> field in the segment metadata</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>By using the <code>GetTraceSummaries</code> API with a filter expression</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Use a filter expression to search for the<code> user</code> field in the segment annotations</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Developer Tools",
    "explanation": "<p>A <strong>segment document</strong> conveys information about a segment to X-Ray. A segment document can be up to 64 kB and contain a whole segment with subsegments, a fragment of a segment that indicates that a request is in progress, or a single subsegment that is sent separately. You can send segment documents directly to X-Ray by using the <a href=\"https://docs.aws.amazon.com/xray/latest/api/API_PutTraceSegments.html\">PutTraceSegments</a> API.</p><p>Example minimally complete segment:</p><div class=\"ud-component--base-components--code-block\"><div><pre class=\"prettyprint linenums prettyprinted\" role=\"presentation\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><span class=\"pun\">{</span></li><li class=\"L1\"><span class=\"str\">\"name\"</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"example.com\"</span><span class=\"pun\">,</span></li><li class=\"L2\"><span class=\"str\">\"id\"</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"70de5b6f19ff9a0a\"</span><span class=\"pun\">,</span></li><li class=\"L3\"><span class=\"str\">\"start_time\"</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">1.478293361271E9</span><span class=\"pun\">,</span></li><li class=\"L4\"><span class=\"str\">\"trace_id\"</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"1-581cf771-a006649127e371903a2de979\"</span><span class=\"pun\">,</span></li><li class=\"L5\"><span class=\"str\">\"end_time\"</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">1.478293361449E9</span></li><li class=\"L6\"><span class=\"pun\">}</span></li></ol></pre></div></div><p><br></p><p>A subset of segment fields are indexed by X-Ray for use with filter expressions. For example, if you set the user field on a segment to a unique identifier, you can search for segments associated with specific users in the X-Ray console or by using the <code>GetTraceSummaries</code> API.</p><p><strong>CORRECT: </strong>\"By using the <code>GetTraceSummaries </code>API with a filter expression\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"By using the <code>GetTraceGraph</code> API with a filter expression\" is incorrect as this API action retrieves a service graph for one or more specific trace IDs.</p><p><strong>INCORRECT:</strong> \"Use a filter expression to search for the <code>user</code> field in the segment metadata\" is incorrect as the <code>user</code> field is not part of the segment metadata and metadata is not is not indexed for search.</p><p><strong>INCORRECT:</strong> \"Use a filter expression to search for the <code>user</code> field in the segment annotations\" is incorrect as the <code>user</code> field is not part of the segment annotations.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html\">https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-developer-tools/\">https://digitalcloud.training/aws-developer-tools/</a></p><p><br></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/xray/latest/api/API_PutTraceSegments.html",
      "https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html",
      "https://digitalcloud.training/aws-developer-tools/"
    ]
  },
  {
    "id": 42,
    "question": "<p>A Developer has added a Global Secondary Index (GSI) to an existing Amazon DynamoDB table. The GSI is used mainly for read operations whereas the primary table is extremely write-intensive. Recently, the Developer has noticed throttling occurring under heavy write activity on the primary table. However, the write capacity units on the primary table are not fully utilized.</p><p>What is the best explanation for why the writes are being throttled on the primary table?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>There are insufficient read capacity units on the primary table</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>The Developer should have added an LSI instead of a GSI</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>There are insufficient write capacity units on the primary table</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>The write capacity units on the GSI are under provisioned</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "AWS Networking & Content Delivery",
    "explanation": "<p>Some applications might need to perform many kinds of queries, using a variety of different attributes as query criteria. To support these requirements, you can create one or more global secondary indexes and issue Query requests against these indexes in Amazon DynamoDB.</p><p>When items from a primary table are written to the GSI they consume write capacity units. It is essential to ensure the GSI has sufficient WCUs (typically, at least as many as the primary table). If writes are throttled on the GSI, the main table will be throttled (even if there’s enough WCUs on the main table). LSIs do not cause any special throttling considerations.</p><p>In this scenario, it is likely that the Developer assumed that the GSI would need fewer WCUs as it is more read-intensive and neglected to factor in the WCUs required for writing data into the GSI. Therefore, the most likely explanation is that the write capacity units on the GSI are under provisioned</p><p><strong>CORRECT: </strong>\"The write capacity units on the GSI are under provisioned\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"There are insufficient read capacity units on the primary table\" is incorrect as the table is being throttled due to writes, not reads.</p><p><strong>INCORRECT:</strong> \"The Developer should have added an LSI instead of a GSI\" is incorrect as a GSI has specific advantages and there was likely good reason for adding a GSI. Also, you cannot add an LSI to an existing table.</p><p><strong>INCORRECT:</strong> \"There are insufficient write capacity units on the primary table\" is incorrect as the question states that the WCUs are underutilized.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html"
    ]
  },
  {
    "id": 43,
    "question": "<p>A Development team are creating a new REST API that uses Amazon API Gateway and AWS Lambda. To support testing there need to be different versions of the service. What is the BEST way to provide multiple versions of the REST API?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Create an AWS Lambda authorizer to route API clients to the correct API version</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Create an API Gateway resource policy to isolate versions and provide context to the Lambda functions</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Deploy the API versions as unique stages with unique endpoints and use stage variables to provide further context</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Deploy an HTTP Proxy integration and configure the proxy with API versions</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Networking & Content Delivery",
    "explanation": "<p>A stage is a named reference to a deployment, which is a snapshot of the API. You use a Stage to manage and optimize a particular deployment. For example, you can set up stage settings to enable caching, customize request throttling, configure logging, define stage variables or attach a canary release for testing. APIs are deployed to stages:</p><p><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_14-09-05-3b0cb95d380260c409fecbb328aa738e.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_14-09-05-3b0cb95d380260c409fecbb328aa738e.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p><p>Stage variables are name-value pairs that you can define as configuration attributes associated with a deployment stage of a REST API. They act like environment variables and can be used in your API setup and mapping templates.</p><p>With deployment stages in API Gateway, you can manage multiple release stages for each API, such as alpha, beta, and production. Using stage variables you can configure an API deployment stage to interact with different backend endpoints. For example, your API can pass a GET request as an HTTP proxy to the backend web host (for example, <a href=\"http://example.com\">http://example.com</a>).</p><p><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_14-09-47-7ba07e9cb83954ecc11e5a91ba4d23b9.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_14-09-47-7ba07e9cb83954ecc11e5a91ba4d23b9.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p><p>In this case, the backend web host is configured in a stage variable so that when developers call your production endpoint, API Gateway calls example.com. When you call your beta endpoint, API Gateway uses the value configured in the stage variable for the beta stage, and calls a different web host (for example, beta.example.com). Similarly, stage variables can be used to specify a different AWS Lambda function name for each stage in your API.</p><p>Therefore, for this scenario the Developers can deploy the API versions as unique stages with unique endpoints and use stage variables to provide further context such as connections to different backend services.</p><p><strong>CORRECT: </strong>\"Deploy the API versions as unique stages with unique endpoints and use stage variables to provide further context\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Create an API Gateway resource policy to isolate versions and provide context to the Lambda functions\" is incorrect. API Gateway <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-resource-policies.html\">resource policies</a> are JSON policy documents that you attach to an API to control whether a specified principal (typically, an IAM user or role) can invoke the API.</p><p><strong>INCORRECT:</strong> \"Create an AWS Lambda authorizer to route API clients to the correct API version\" is incorrect. A <em>Lambda authorizer</em> (formerly known as a <em>custom authorizer</em>) is an API Gateway feature that uses a Lambda function to control access to your API. This is not used for routing API clients to different versions.</p><p><strong>INCORRECT:</strong> \"Deploy an HTTP Proxy integration and configure the proxy with API versions\" is incorrect. The HTTP proxy integration allows a client to access the backend HTTP endpoints with a streamlined integration setup on a single API method. This is not used for providing multiple versions of the API, use stages and stage variables instead.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-stages.html\">https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-stages.html</a></p><p><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/stage-variables.html\">https://docs.aws.amazon.com/apigateway/latest/developerguide/stage-variables.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-api-gateway/\">https://digitalcloud.training/amazon-api-gateway/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "http://example.com",
      "https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-resource-policies.html",
      "https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-stages.html",
      "https://docs.aws.amazon.com/apigateway/latest/developerguide/stage-variables.html",
      "https://digitalcloud.training/amazon-api-gateway/"
    ]
  },
  {
    "id": 44,
    "question": "<p>A team of Developers are building a continuous integration and delivery pipeline using AWS Developer Tools. Which services should they use for running tests against source code and installing compiled code on their AWS resources? (Select TWO.)</p>",
    "corrects": [
      3,
      5
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>AWS Cloud9 for running tests against source code</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>AWS CodePipeline for running tests against source code</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>AWS CodeBuild for running tests against source code</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>AWS CodeCommit for installing compiled code on their AWS resources</p>",
        "correct": false
      },
      {
        "id": 5,
        "answer": "<p>AWS CodeDeploy for installing compiled code on their AWS resources</p>",
        "correct": true
      }
    ],
    "multiple": true,
    "domain": "AWS Developer Tools",
    "explanation": "<p>AWS CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides pre-packaged build environments for popular programming languages and build tools such as Apache Maven, Gradle, and more.</p><p>CodeDeploy is a deployment service that automates application deployments to Amazon EC2 instances, on-premises instances, serverless Lambda functions, or Amazon ECS services.</p><p><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-25_00-32-50-133a07af320f839fc765901afcd858ff.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-25_00-32-50-133a07af320f839fc765901afcd858ff.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p><p><strong>CORRECT: </strong>\"AWS CodeBuild for running tests against source code\" is a correct answer.</p><p><strong>CORRECT: </strong>\"AWS CodeDeploy for installing compiled code on their AWS resources\" is also a correct answer.</p><p><strong>INCORRECT:</strong> \"AWS CodePipeline for running tests against source code\" is incorrect. AWS CodePipeline is a fully managed continuous delivery service that helps you automate your release pipelines for fast and reliable application and infrastructure updates. This service works with the other Developer Tools to create a pipeline.</p><p><strong>INCORRECT:</strong> \"AWS CodeCommit for installing compiled code on their AWS resources\" is incorrect as AWS CodeCommit is a fully-managed <a href=\"https://aws.amazon.com/devops/source-control/\">source control</a> service that hosts secure Git-based repositories.</p><p><strong>INCORRECT:</strong> \"AWS Cloud9 for running tests against source code\" is incorrect as AWS Cloud9 is a cloud-based integrated development environment (IDE) that lets you write, run, and debug your code with just a browser.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html</a></p><p><a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/welcome.html\">https://docs.aws.amazon.com/codedeploy/latest/userguide/welcome.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-developer-tools/\">https://digitalcloud.training/aws-developer-tools/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://aws.amazon.com/devops/source-control/",
      "https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html",
      "https://docs.aws.amazon.com/codedeploy/latest/userguide/welcome.html",
      "https://digitalcloud.training/aws-developer-tools/"
    ]
  },
  {
    "id": 45,
    "question": "<p>An Amazon API Gateway API developer aims to integrate request validation in a production setting but wants to test it before deployment. Which of the following methods offers the least operational overhead for testing via a tool by sending test requests?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Clone the existing API, add the request validation, run the tests, then modify the original API to include request validation before deploying to production.</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Create a new API from scratch with the necessary resources, methods, and request validation, run the tests, then modify and deploy the original API.</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>First export the current API to an OpenAPI file, create and modify a new API by importing the OpenAPI file and adding request validation, test it, then modify and deploy the original API.</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Modify the existing API to include request validation, deploy this to a new API Gateway stage, test it, then deploy it to the production stage.</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "AWS Networking & Content Delivery",
    "explanation": "<p>The primary concern here is reducing operational overhead. The correct answer is the most straightforward and efficient because it leverages the functionality of Amazon API Gateway stages.</p><p>By modifying the existing API to add request validation and deploying the updated API to a new API Gateway stage, it allows for testing in a controlled environment before deploying to production. It provides the least operational overhead because it does not involve creating a new API or exporting/importing an OpenAPI file.</p><p><strong>CORRECT: </strong>\"Modify the existing API to include request validation, deploy this to a new API Gateway stage, test it, then deploy it to the production stage\" is the correct answer (as explained above.)</p><p><strong>INCORRECT:</strong> \"Clone the existing API, add the request validation, run the tests, then modify the original API to include request validation before deploying to production\" is incorrect.</p><p>Cloning the API or exporting it to an OpenAPI file and importing into a new API both involve unnecessary steps that increase operational overhead.</p><p><strong>INCORRECT:</strong> \"First export the current API to an OpenAPI file, create and modify a new API by importing the OpenAPI file and adding request validation, test it, then modify and deploy the original API\" is incorrect.</p><p>Cloning the API or exporting it to an OpenAPI file and importing into a new API both involve unnecessary steps that increase operational overhead.</p><p><strong>INCORRECT:</strong> \"Create a new API from scratch with the necessary resources, methods and request validation, run the tests, then modify and deploy the original API\" is incorrect.</p><p>Creating a new API from scratch can be time-consuming and requires extra effort which again adds to operational overhead.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/stages.html\">https://docs.aws.amazon.com/apigateway/latest/developerguide/stages.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-api-gateway/\">https://digitalcloud.training/amazon-api-gateway/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/apigateway/latest/developerguide/stages.html",
      "https://digitalcloud.training/amazon-api-gateway/"
    ]
  },
  {
    "id": 46,
    "question": "<p>A programmer is creating an application that requires signed requests (Signature Version 4) for invoking other AWS services. Having constructed a canonical request, created the string to sign, and calculated the signing information, which strategies can the programmer apply to finalize a signed request? (Select TWO.)</p>",
    "corrects": [
      2,
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Embed the signature in an HTTP header labelled \"Authorization-Key\".</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Incorporate the signature into an HTTP header called \"Authorization\".</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Insert the signature into a query string parameter referred to as \"X-Amz-Signature\".</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Add the signature to a query string parameter named \"Signature-Token\".</p>",
        "correct": false
      },
      {
        "id": 5,
        "answer": "<p>Append the signature to a query string parameter known as \"X-Amz-Credentials\".</p>",
        "correct": false
      }
    ],
    "multiple": true,
    "domain": "AWS Security, Identity, & Compliance",
    "explanation": "<p>When sending a request to AWS services using Signature Version 4, the signature should be included in the \"Authorization\" HTTP header or as a parameter \"X-Amz-Signature\" in the query string.</p><p><strong>CORRECT: </strong>\"Incorporate the signature into an HTTP header called \"Authorization\"\" is a correct answer (as explained above.)</p><p><strong>CORRECT: </strong>\"Insert the signature into a query string parameter referred to as \"X-Amz-Signature\"\" is also a correct answer (as explained above.)</p><p><strong>INCORRECT:</strong> \"Append the signature to a query string parameter known as \"X-Amz-Credentials\"\" is incorrect.</p><p>\"X-Amz-Credentials\" is a query string parameter, but it's not meant for adding signatures. It's used to include access key ID and scoped credential details.</p><p><strong>INCORRECT:</strong> \"Embed the signature in an HTTP header labelled \"Authorization-Key\"\" is incorrect.</p><p>\"Authorization-Key\" is not a recognized HTTP header for adding AWS Signature Version 4.</p><p><strong>INCORRECT:</strong> \"Add the signature to a query string parameter named \"Signature-Token\"\" is incorrect.</p><p>\"Signature-Token\" is not a recognized query string parameter for adding AWS Signature Version 4.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\">https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html"
    ]
  },
  {
    "id": 47,
    "question": "<p>A developer plan to deploy an application on Amazon ECS that uses the AWS SDK to make API calls to Amazon DynamoDB. In the development environment the application was configured with access keys. The application is now ready for deployment to a production cluster.</p><p>How should the developer configure the application to securely authenticate to AWS services?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Configure the credentials file with a new access key/secret access key.</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Add the necessary AWS service permissions to an ECS instance profile.</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Configure an ECS task IAM role for the application to use.</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Add environment variables pointing to new access key credentials.</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Compute",
    "explanation": "<p>Your Amazon ECS tasks can have an IAM role associated with them. The permissions granted in the IAM role are assumed by the containers running in the task. The following explain the benefits of using IAM roles with your tasks.</p><p> • <strong>Credential Isolation:</strong> A container can only retrieve credentials for the IAM role that is defined in the task definition to which it belongs; a container never has access to credentials that are intended for another container that belongs to another task.</p><p><strong> </strong>• <strong>Authorization:</strong> Unauthorized containers cannot access IAM role credentials defined for other tasks.</p><p><strong> </strong>• <strong>Auditability:</strong> Access and event logging is available through CloudTrail to ensure retrospective auditing. Task credentials have a context of taskArn that is attached to the session, so CloudTrail logs show which task is using which role.</p><p><strong>CORRECT: </strong>\"Configure an ECS task IAM role for the application to use\" is the correct answer (as explained above.)</p><p><strong>INCORRECT:</strong> \"Add the necessary AWS service permissions to an ECS instance profile\" is incorrect.</p><p>The privileges assigned to instance profiles on the Amazon ECS instances are available to all tasks running on the instance. This is not secure and AWS recommend that you limit the permissions you assign to the instance profile.</p><p><strong>INCORRECT:</strong> \"Configure the credentials file with a new access key/secret access key\" is incorrect.</p><p>Access keys are not a secure way of providing authentication. It is better to use roles that obtain temporary security permissions using the AWS STS service.</p><p><strong>INCORRECT:</strong> \"Add environment variables pointing to new access key credentials\" is incorrect.</p><p>As above, access keys should not be used, IAM roles should be used instead.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html\">https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-iam/\">https://digitalcloud.training/aws-iam/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html",
      "https://digitalcloud.training/aws-iam/"
    ]
  },
  {
    "id": 48,
    "question": "<p>Messages produced by an application must be pushed to multiple Amazon SQS queues. What is the BEST solution for this requirement?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Publish the messages to an Amazon SQS queue and configure an AWS Lambda function to duplicate the message into multiple queues</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Create and AWS Step Functions state machine that uses multiple Lambda functions to process and push the messages into multiple SQS queues</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Publish the messages to an Amazon SNS topic and subscribe each SQS queue to the topic</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Create an Amazon SWF workflow that receives the messages and pushes them to multiple SQS queues</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Application Integration",
    "explanation": "<p><a href=\"https://aws.amazon.com/sns/\">Amazon SNS</a> works closely with Amazon Simple Queue Service (Amazon SQS). Both services provide different benefits for developers. Amazon SNS allows applications to send time-critical messages to multiple subscribers through a “push” mechanism, eliminating the need to periodically check or “poll” for updates.</p><p><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-25_00-34-37-1c1fb8b0a53bea8c2c644e7e8b79f1ab.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-25_00-34-37-1c1fb8b0a53bea8c2c644e7e8b79f1ab.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p><p>When you subscribe an Amazon SQS queue to an Amazon SNS topic, you can publish a message to the topic and Amazon SNS sends an Amazon SQS message to the subscribed queue. The Amazon SQS message contains the subject and message that were published to the topic along with metadata about the message in a JSON document.</p><p><strong>CORRECT: </strong>\"Publish the messages to an Amazon SNS topic and subscribe each SQS queue to the topic\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Publish the messages to an Amazon SQS queue and configure an AWS Lambda function to duplicate the message into multiple queues\" is incorrect as this seems like an inefficient solution. By using SNS we can eliminate the initial queue and Lambda function.</p><p><strong>INCORRECT:</strong> \"Create an Amazon SWF workflow that receives the messages and pushes them to multiple SQS queues\" is incorrect as this is not a workable solution. Amazon SWF is not suitable for pushing messages to SQS queues.</p><p><strong>INCORRECT:</strong> Create and AWS Step Functions state machine that uses multiple Lambda functions to process and push the messages into multiple SQS queues\"\" is incorrect as this is an inefficient solution and there is not mention on how the functions will be invoked with the message data</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sqs-as-subscriber.html\">https://docs.aws.amazon.com/sns/latest/dg/sns-sqs-as-subscriber.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-application-integration-services/\">https://digitalcloud.training/aws-application-integration-services/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://aws.amazon.com/sns/",
      "https://docs.aws.amazon.com/sns/latest/dg/sns-sqs-as-subscriber.html",
      "https://digitalcloud.training/aws-application-integration-services/"
    ]
  },
  {
    "id": 49,
    "question": "<p>A company needs to ingest several terabytes of data every hour from a large number of distributed sources. The messages are delivered continually 24 hrs a day. Messages must be delivered in real time for security analysis and live operational dashboards.</p><p>Which approach will meet these requirements?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use the Amazon S3 API to write messages to an S3 bucket, then process the messages by using Amazon RedShift</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Send the messages to an Amazon SQS queue, then process the messages by using a fleet of Amazon EC2 instances</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Use Amazon Kinesis Data Streams with Kinesis Client Library to ingest and deliver messages</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Use AWS Data Pipeline to automate the movement and transformation of data</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Application Integration",
    "explanation": "<p>You can use Amazon Kinesis Data Streams to collect and process large <a href=\"https://aws.amazon.com/streaming-data/\">streams</a> of data records in real time. You can create data-processing applications, known as <em>Kinesis Data Streams applications</em>. A typical Kinesis Data Streams application reads data from a <em>data stream</em> as data records.</p><p><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-23_00-47-32-5c696a2961e35feb923ac606485a5d12.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-23_00-47-32-5c696a2961e35feb923ac606485a5d12.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p><p>These applications can use the Kinesis Client Library, and they can run on Amazon EC2 instances. You can send the processed records to dashboards, use them to generate alerts, dynamically change pricing and advertising strategies, or send data to a variety of other AWS services.</p><p>This scenario is an ideal use case for Kinesis Data Streams as large volumes of real time streaming data are being ingested. Therefore, the best approach is to use Amazon Kinesis Data Streams with Kinesis Client Library to ingest and deliver messages</p><p><strong>CORRECT: </strong>\"Use Amazon Kinesis Data Streams with Kinesis Client Library to ingest and deliver messages\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Send the messages to an Amazon SQS queue, then process the messages by using a fleet of Amazon EC2 instances\" is incorrect as this is not an ideal use case for SQS because SQS is used for decoupling application components, not for ingesting streaming data. It would require more cost (lots of instances to process data) and introduce latency. Also, the message size limitations could be an issue.</p><p><strong>INCORRECT:</strong> \"Use the Amazon S3 API to write messages to an S3 bucket, then process the messages by using Amazon RedShift\" is incorrect as RedShift does not process messages from S3. RedShift is a data warehouse which is used for analytics.</p><p><strong>INCORRECT:</strong> \"Use AWS Data Pipeline to automate the movement and transformation of data\" is incorrect as the question is not asking for transformation of data. The scenario calls for a solution for ingesting and processing the real time streaming data for analytics and feeding some data into a system that generates an operational dashboard.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/streams/latest/dev/introduction.html\">https://docs.aws.amazon.com/streams/latest/dev/introduction.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-kinesis/\">https://digitalcloud.training/amazon-kinesis/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://aws.amazon.com/streaming-data/",
      "https://docs.aws.amazon.com/streams/latest/dev/introduction.html",
      "https://digitalcloud.training/amazon-kinesis/"
    ]
  },
  {
    "id": 50,
    "question": "<p>A company is releasing an updated version of its APIs for its new mobile application, which uses Amazon API Gateway. The developers aim to gradually and seamlessly roll out the new version of APIs.</p><p>What is the MOST straightforward method for them to introduce the new API version to a subset of users through API Gateway?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Develop a custom Lambda function to control the API traffic distribution between the two API versions.</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Utilize the canary release deployment feature in API Gateway. Configure the canarySettings to redirect a portion of the API traffic.</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Use an Amazon Route 53 failover routing policy to divert a certain percentage of traffic to the updated API version.</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Deploy the new API in a separate VPC and use Amazon CloudFront to distribute the API traffic between the old and new versions.</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Networking & Content Delivery",
    "explanation": "<p>The canary release deployment in API Gateway enables developers to roll out API changes gradually. By configuring the canarySettings, a percentage of the API traffic can be redirected to the new version, allowing for cautious and controlled rollout.</p><p><strong>CORRECT: </strong>\"Utilize the canary release deployment feature in API Gateway. Configure the canarySettings to redirect a portion of the API traffic\" is the correct answer (as explained above.)</p><p><strong>INCORRECT:</strong> \"Use an Amazon Route 53 failover routing policy to divert a certain percentage of traffic to the updated API version\" is incorrect.</p><p>Amazon Route 53 failover routing policy is used for routing internet traffic to a resource when the primary resource becomes unavailable. It is not a suitable solution for this scenario.</p><p><strong>INCORRECT:</strong> \"Deploy the new API in a separate VPC and use Amazon CloudFront to distribute the API traffic between the old and new versions\" is incorrect.</p><p>Deploying the new API in a separate VPC and using Amazon CloudFront for traffic distribution could work, but this approach is more complex and does not provide an out-of-the-box traffic control mechanism like canary releases.</p><p><strong>INCORRECT:</strong> \"Develop a custom Lambda function to control the API traffic distribution between the two API versions\" is incorrect.</p><p>Developing a custom Lambda function to control API traffic distribution can be overly complicated and might not provide the desired level of control, especially when compared to built-in solutions like canary releases.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/canary-release.html\">https://docs.aws.amazon.com/apigateway/latest/developerguide/canary-release.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-api-gateway/\">https://digitalcloud.training/amazon-api-gateway/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/apigateway/latest/developerguide/canary-release.html",
      "https://digitalcloud.training/amazon-api-gateway/"
    ]
  },
  {
    "id": 51,
    "question": "<p>An application is instrumented to generate traces using AWS X-Ray and generates a large amount of trace data. A Developer would like to use filter expressions to filter the results to specific key-value pairs added to custom subsegments.</p><p>How should the Developer add the key-value pairs to the custom subsegments?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Add metadata to the custom subsegments</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Add annotations to the custom subsegments</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Setup sampling for the custom subsegments</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Add the key-value pairs to the Trace ID</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Developer Tools",
    "explanation": "<p>You can record additional information about requests, the environment, or your application with annotations and metadata. You can add annotations and metadata to the segments that the X-Ray SDK creates, or to custom subsegments that you create.</p><p><strong>Annotations</strong> are key-value pairs with string, number, or Boolean values. Annotations are indexed for use with <a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-console-filters.html\">filter expressions</a>. Use annotations to record data that you want to use to group traces in the console, or when calling the <a href=\"https://docs.aws.amazon.com/xray/latest/api/API_GetTraceSummaries.html\">GetTraceSummaries</a> API.</p><p><strong>Metadata</strong> are key-value pairs that can have values of any type, including objects and lists, but are not indexed for use with filter expressions. Use metadata to record additional data that you want stored in the trace but don't need to use with search.</p><p>Annotations can be used with filter expressions, so this is the best solution for this requirement. The Developer can add annotations to the custom subsegments and will then be able to use filter expressions to filter the results in AWS X-Ray.</p><p><strong>CORRECT: </strong>\"Add annotations to the custom subsegments\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Add metadata to the custom subsegments\" is incorrect as though you can add metadata to custom subsegments it is not indexed and cannot be used with filters.</p><p><strong>INCORRECT:</strong> \"Add the key-value pairs to the Trace ID\" is incorrect as this is not something you can do.</p><p><strong>INCORRECT:</strong> \"Setup sampling for the custom subsegments \" is incorrect as this is a mechanism used by X-Ray to send only statistically significant data samples to the API.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-java-segment.html\">https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-java-segment.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-developer-tools/\">https://digitalcloud.training/aws-developer-tools/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/xray/latest/devguide/xray-console-filters.html",
      "https://docs.aws.amazon.com/xray/latest/api/API_GetTraceSummaries.html",
      "https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-java-segment.html",
      "https://digitalcloud.training/aws-developer-tools/"
    ]
  },
  {
    "id": 52,
    "question": "<p>A company uses an Amazon S3 bucket to store a large number of sensitive files relating to eCommerce transactions. The company has a policy that states that all data written to the S3 bucket must be encrypted.</p><p>How can a Developer ensure compliance with this policy?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Create a bucket policy that denies the S3 PutObject request with the attribute x-amz-acl having values public-read, public-read-write, or authenticated-read</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Create an S3 bucket policy that denies any S3 Put request that does not include the x-amz-server-side-encryption</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Create an Amazon CloudWatch alarm that notifies an administrator if unencrypted objects are uploaded to the S3 bucket</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Enable Server-Side Encryption with Amazon S3-Managed Keys (SSE-S3) on the Amazon S3 bucket</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Storage",
    "explanation": "<p>To encrypt an object at the time of upload, you need to add a header called x-amz-server-side-encryption to the request to tell S3 to encrypt the object using SSE-C, SSE-S3, or SSE-KMS. The following code example shows a Put request using SSE-S3.</p><p><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_12-40-09-64c48b8534cf3f30983c254bcd6927ce.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_12-40-09-64c48b8534cf3f30983c254bcd6927ce.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p><p>Enabling encryption on an S3 bucket does not enforce encryption however, so it is still necessary to take extra steps to force compliance with the policy. As the message in the image below states, bucket policies are applied before encryption settings so PUT requests without encryption information can be rejected by a bucket policy:</p><p><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_12-40-53-e67a2975cd462c0bf30200960a55c8a8.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_12-40-53-e67a2975cd462c0bf30200960a55c8a8.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p><p>Therefore, we need to create an S3 bucket policy that denies any S3 Put request that do not include the x-amz-server-side-encryption header. There are two possible values for the x-amz-server-side-encryption header: AES256, which tells S3 to use S3-managed keys, and aws:kms, which tells S3 to use AWS KMS–managed keys.</p><p><strong>CORRECT: </strong>\"Create an S3 bucket policy that denies any S3 Put request that does not include the x-amz-server-side-encryption\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Create a bucket policy that denies the S3 PutObject request with the attribute x-amz-acl having values public-read, public-read-write, or authenticated-read\" is incorrect. This policy means that authenticated users cannot upload objects to the bucket if the objects have public permissions.</p><p><strong>INCORRECT:</strong> \"Enable Server-Side Encryption with Amazon S3-Managed Keys (SSE-S3) on the Amazon S3 bucket\" is incorrect as this will enable default encryption but will not enforce encryption on the S3 bucket. You do still need to enable default encryption on the bucket, but this alone will not enforce encryption.</p><p><strong>INCORRECT:</strong> \"Create an Amazon CloudWatch alarm that notifies an administrator if unencrypted objects are uploaded to the S3 bucket\" is incorrect. This is operationally difficult to manage and only notifies, it does not prevent.</p><p><strong>References:</strong></p><p><a href=\"https://aws.amazon.com/blogs/security/how-to-prevent-uploads-of-unencrypted-objects-to-amazon-s3/\">https://aws.amazon.com/blogs/security/how-to-prevent-uploads-of-unencrypted-objects-to-amazon-s3/</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-s3-and-glacier/\">https://digitalcloud.training/amazon-s3-and-glacier/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://aws.amazon.com/blogs/security/how-to-prevent-uploads-of-unencrypted-objects-to-amazon-s3/",
      "https://digitalcloud.training/amazon-s3-and-glacier/"
    ]
  },
  {
    "id": 53,
    "question": "<p>A developer must deploy an update to Amazon ECS using AWS CodeDeploy. The deployment should expose 10% of live traffic to the new version. Then after a period of time, route all remaining traffic to the new version.</p><p>Which ECS deployment should the company use to meet these requirements?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Blue/green with all at once</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Rolling update</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Blue/green with linear</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Blue/green with canary</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "AWS Developer Tools",
    "explanation": "<p>The <em>blue/green</em> deployment type uses the blue/green deployment model controlled by CodeDeploy. This deployment type enables you to verify a new deployment of a service before sending production traffic to it.</p><p>There are three ways traﬃc can shift during a blue/green deployment:</p><p><strong> </strong>• <strong>Canary</strong> — Traﬃc is shifted in two increments. You can choose from predeﬁned canary options that specify the percentage of traﬃc shifted to your updated task set in the ﬁrst increment and the interval, in minutes, before the remaining traﬃc is shifted in the second increment.</p><p><strong> </strong>• <strong>Linear</strong> — Traﬃc is shifted in equal increments with an equal number of minutes between each increment. You can choose from predeﬁned linear options that specify the percentage of traﬃc shifted in each increment and the number of minutes between each increment.</p><p><strong> </strong>• <strong>All-at-once</strong> — All traﬃc is shifted from the original task set to the updated task set all at once.</p><p>The best choice for this use case would be to use the canary traffic shifting strategy. You can see the predefined canary options in the table below:</p><p><br></p><p><img src=\"https://img-c.udemycdn.com/redactor/raw/test_question_description/2022-04-30_07-15-25-8b13637a401122d36d55415ef8ebe563.JPG\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/test_question_description/2022-04-30_07-15-25-8b13637a401122d36d55415ef8ebe563.JPG\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p><p><strong>CORRECT: </strong>\"Blue/green with canary\" is the correct answer (as explained above.)</p><p><strong>INCORRECT:</strong> \"Blue/green with linear\" is incorrect.</p><p>With this option traffic is shifted in equal increments with an equal amount of time between increments.</p><p><strong>INCORRECT:</strong> \"Blue/green with all at once\" is incorrect.</p><p>With this option all traffic is shifted at once.</p><p><strong>INCORRECT:</strong> \"Rolling update\" is incorrect.</p><p>This is a native ECS deployment model. It does not deploy in two increments with 10% first.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-bluegreen.html\">https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-bluegreen.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-developer-tools/\">https://digitalcloud.training/aws-developer-tools/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-bluegreen.html",
      "https://digitalcloud.training/aws-developer-tools/"
    ]
  },
  {
    "id": 54,
    "question": "<p>In the process of developing an application, a software engineer deploys an Amazon API Gateway REST API within the us-west-2 Region. The plan is to use Amazon CloudFront and a custom domain name for the API, using an SSL/TLS certificate acquired from a third-party provider.</p><p>What is the appropriate strategy for configuring the custom domain name?</p>",
    "corrects": [
      4
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Directly install the third-party SSL/TLS certificate on the API Gateway and establish a CNAME record in Route 53 for the custom domain name.</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Use the third-party SSL/TLS certificate directly with Amazon CloudFront, and bypass API Gateway, creating an alias (A) record in Route 53.</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Use Route 53 to create a simple routing policy with the custom domain name directly pointed to the API Gateway.</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Import the third-party SSL/TLS certificate to AWS Certificate Manager (ACM), link it with the custom domain name in API Gateway, and then create an alias (A) record in Route 53 for the custom domain name.</p>",
        "correct": true
      }
    ],
    "multiple": false,
    "domain": "AWS Networking & Content Delivery",
    "explanation": "<p>The developer needs to import the SSL/TLS certificate into AWS Certificate Manager (ACM) to use a custom domain name with Amazon API Gateway. After that, the developer can link this certificate to the custom domain name in the API Gateway. Finally, set an alias (A) record in Route 53 to point to the API Gateway's domain name.</p><p><strong>CORRECT: </strong>\"Import the third-party SSL/TLS certificate to AWS Certificate Manager (ACM), link it with the custom domain name in API Gateway, and then create an alias (A) record in Route 53 for the custom domain name\" is the correct answer (as explained above.)</p><p><strong>INCORRECT:</strong> \"Use Route 53 to create a simple routing policy with the custom domain name directly pointed to the API Gateway\" is incorrect.</p><p>You cannot point a custom domain name directly to the API Gateway using a simple routing policy in Route 53 without setting up the custom domain name in API Gateway first.</p><p><strong>INCORRECT:</strong> \"Directly install the third-party SSL/TLS certificate on the API Gateway and establish a CNAME record in Route 53 for the custom domain name\" is incorrect.</p><p>API Gateway doesn't support direct installation of third-party SSL/TLS certificates. Also, for API Gateway, an alias record is preferred over a CNAME record in Route 53.</p><p><strong>INCORRECT:</strong> \"Use the third-party SSL/TLS certificate directly with Amazon CloudFront, and bypass API Gateway, creating an alias (A) record in Route 53\" is incorrect.</p><p>Amazon CloudFront is inherently used and managed by API Gateway, and you cannot bypass API Gateway using Amazon CloudFront directly for a custom domain. Also, an SSL/TLS certificate needs to be managed via ACM.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html\">https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html</a></p><p><a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-api-gateway.html\">https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-api-gateway.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-certificate-manager/\">https://digitalcloud.training/aws-certificate-manager/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html",
      "https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-api-gateway.html",
      "https://digitalcloud.training/aws-certificate-manager/"
    ]
  },
  {
    "id": 55,
    "question": "<p>The following permissions policy is applied to an IAM user account:</p><div class=\"ud-component--base-components--code-block\"><div><pre class=\"prettyprint linenums prettyprinted\" role=\"presentation\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><span class=\"pun\">{</span></li><li class=\"L1\"><span class=\"str\">\"Version\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"2012-10-17\"</span><span class=\"pun\">,</span></li><li class=\"L2\"><span class=\"str\">\"Statement\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">[{</span></li><li class=\"L3\"><span class=\"str\">\"Effect\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"Allow\"</span><span class=\"pun\">,</span></li><li class=\"L4\"><span class=\"str\">\"Action\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"sqs:*\"</span><span class=\"pun\">,</span></li><li class=\"L5\"><span class=\"str\">\"Resource\"</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"arn:aws:sqs:*:513246782345:staging-queue*\"</span></li><li class=\"L6\"><span class=\"pun\">}]</span></li><li class=\"L7\"><span class=\"pun\">}</span></li></ol></pre></div></div><p>Due to this policy, what Amazon SQS actions will the user be able to perform?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>The user will be able to create a queue named “staging-queue“</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>The user will be able to use all Amazon SQS actions, but only for queues with names begin with the string “staging-queue“</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>The user will be granted cross-account access from account number “513246782345” to queue “staging-queue”</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>The user will be able to apply a resource-based policy to the Amazon SQS queue named “staging-queue”</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Application Integration",
    "explanation": "<p>The policy allows the user to use all Amazon SQS actions, but only with queues whose names are prefixed with the literal string “staging-queue”. This policy is useful to provide a queue creator the ability to use Amazon SQS actions. Any user who has permissions to create a queue must also have permissions to use other Amazon SQS actions in order to do anything with the created queues.</p><p><strong>CORRECT: </strong>\"The user will be able to use all Amazon SQS actions, but only for queues with names begin with the string “staging-queue“\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"The user will be able to create a queue named “staging-queue“\" is incorrect as this policy provides the permissions to perform SQS actions on an existing queue.</p><p><strong>INCORRECT:</strong> \"The user will be able to apply a resource-based policy to the Amazon SQS queue named “staging-queue”\" is incorrect as this is a single operation and the permissions policy allows all SQS actions.</p><p><strong>INCORRECT:</strong> \"The user will be granted cross-account access from account number “513246782345” to queue “staging-queue”\" is incorrect as this is not a policy for granting cross-account access. The account number and queue relate to the same account.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-overview-of-managing-access.html\">https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-overview-of-managing-access.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-application-integration-services/\">https://digitalcloud.training/aws-application-integration-services/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-overview-of-managing-access.html",
      "https://digitalcloud.training/aws-application-integration-services/"
    ]
  },
  {
    "id": 56,
    "question": "<p>An engineer wishes to share a software project they've developed with their team members for review. The shared application code needs to be preserved over time, with multiple versions and batch modifications being tracked. What is the most appropriate AWS service for this purpose?</p>",
    "corrects": [
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>AWS CodeDeploy</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>AWS Cloud9</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>AWS CodeCommit</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>AWS CodeStar</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Developer Tools",
    "explanation": "<p>AWS CodeCommit is a fully managed source control service that hosts secure Git-based repositories. It's designed to collaborate on code, maintain version control, and keep track of changes. This makes it an optimal choice for this scenario.</p><p><strong>CORRECT: </strong>\"AWS CodeCommit\" is the correct answer (as explained above.)</p><p><strong>INCORRECT:</strong> \"AWS CodeStar\" is incorrect.</p><p>AWS CodeStar enables you to quickly develop, build, and deploy applications on AWS. It isn't focused on source control and versioning, which is the primary need in this scenario.</p><p><strong>INCORRECT:</strong> \"AWS Cloud9\" is incorrect.</p><p>AWS Cloud9 is a cloud-based integrated development environment (IDE) that lets you write, run, and debug your code with just a browser. While it allows for code sharing, it does not offer the robust version control and change tracking of CodeCommit.</p><p><strong>INCORRECT:</strong> \"AWS CodeDeploy\" is incorrect.</p><p>AWS CodeDeploy is a deployment service that enables developers to automate software deployments to a variety of compute services such as Amazon EC2, AWS Fargate, AWS Lambda, and your on-premises servers.</p><p><strong>References:</strong></p><p><a href=\"https://aws.amazon.com/codecommit/\">https://aws.amazon.com/codecommit/</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-developer-tools/\">https://digitalcloud.training/aws-developer-tools/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://aws.amazon.com/codecommit/",
      "https://digitalcloud.training/aws-developer-tools/"
    ]
  },
  {
    "id": 57,
    "question": "<p>A Developer is creating a database solution using an Amazon ElastiCache caching layer. The solution must provide strong consistency to ensure that updates to product data are consistent between the backend database and the ElastiCache cache. Low latency performance is required for all items in the database.</p><p>Which cache writing policy will satisfy these requirements?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Use a lazy-loading caching strategy.</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Use a write-through caching strategy.</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Add a short duration TTL value to each write.</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Invalidate the cache for each database write.</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Database",
    "explanation": "<p>The write-through strategy adds data or updates data in the cache whenever data is written to the database. The advantages of write-through are as follows:</p><p>- Data in the cache is never stale. Because the data in the cache is updated every time it's written to the database, the data in the cache is always current.</p><p>- Write penalty vs. read penalty.</p><p>Every write involves two trips:</p><p>&nbsp; 1. A write to the cache</p><p>&nbsp; 2. A write to the database</p><p>Which adds latency to the process. That said, end users are generally more tolerant of latency when updating data than when retrieving data. There is an inherent sense that updates are more work and thus take longer.</p><p><strong>CORRECT: </strong>\"Use a write-through caching strategy\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Use a lazy-loading caching strategy\" is incorrect. <em>Lazy loading</em> is a caching strategy that loads data into the cache only when necessary. This will not ensure strong consistency between the database and the cache.</p><p><strong>INCORRECT:</strong> \"Add a short duration TTL value to each write\" is incorrect. A TTL specifies the number of seconds until the key expires. This will not ensure strong consistency between the database and the cache.</p><p><strong>INCORRECT:</strong> \"Invalidate the cache for each database write\" is incorrect. This will allow the cache to be updated when an item is next read but will not ensure the best performance for all items in the database.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/Strategies.html\">https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/Strategies.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-elasticache/\">https://digitalcloud.training/amazon-elasticache/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/Strategies.html",
      "https://digitalcloud.training/amazon-elasticache/"
    ]
  },
  {
    "id": 58,
    "question": "<p>A Developer has completed some code updates and needs to deploy the updates to an Amazon Elastic Beanstalk environment. The environment includes twelve Amazon EC2 instances and there can be no reduction in application performance and availability during the update.</p><p>Which deployment policy is the most cost-effective choice to suit these requirements?</p>",
    "corrects": [
      2
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Rolling</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Rolling with additional batch</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>All at once</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Immutable</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Compute",
    "explanation": "<p>AWS Elastic Beanstalk provides several options for how deployments are processed, including deployment policies and options that let you configure batch size and health check behavior during deployments.</p><p>Each deployment policy has advantages and disadvantages and it’s important to select the best policy to use for each situation. The following tables summarizes the different deployment policies:</p><p><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_14-14-58-6396d9d2f91e7f94c6917aaf9216f5a1.jpg\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-21_14-14-58-6396d9d2f91e7f94c6917aaf9216f5a1.jpg\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p><p>The “rolling with additional batch” policy will add an additional batch of instances, updates those instances, then move onto the next batch.</p><p>Rolling with additional batch:</p><p>Like Rolling but launches new instances in a batch ensuring that there is full availability.</p><p>Application is running at capacity.</p><p>Can set the bucket size.</p><p>Application is running both versions simultaneously.</p><p>Small additional cost.</p><p>Additional batch is removed at the end of the deployment.</p><p>Longer deployment.</p><p>Good for production environments.</p><p>For this scenario there can be no reduction in application performance and availability during the update. The question also asks for the most cost-effective choice.</p><p>Therefore, the “rolling with additional batch” is the best choice as it will ensure fully availability of the application but minimize cost as the additional batch size can be kept small.</p><p><strong>CORRECT: </strong>\"Rolling with additional batch\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Rolling\" is incorrect as this will result in a reduction in capacity as there is no additional batch of instances introduced to the environment. This is a better choice if speed is required and a reduction in capacity of a batch size is acceptable.</p><p><strong>INCORRECT:</strong> \"All at once\" is incorrect as this will take the application down and cause a complete outage of the application during the update.</p><p><strong>INCORRECT:</strong> \"Immutable\" is incorrect as this is the most expensive option as it doubles capacity with a whole new set of instances attached to a new ASG.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.deploy-existing-version.html\">https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.deploy-existing-version.html</a></p><p><a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.rolling-version-deploy.html\">https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.rolling-version-deploy.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-elastic-beanstalk/\">https://digitalcloud.training/aws-elastic-beanstalk/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.deploy-existing-version.html",
      "https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.rolling-version-deploy.html",
      "https://digitalcloud.training/aws-elastic-beanstalk/"
    ]
  },
  {
    "id": 59,
    "question": "<p>An application that processes financial transactions receives thousands of transactions each second. The transactions require end-to-end encryption, and the application implements this by using the AWS KMS GenerateDataKey operation. During operation the application receives the following error message:</p><p><em>“You have exceeded the rate at which you may call KMS. Reduce the frequency of your calls.</em></p><p><em>(Service: AWSKMS; Status Code: 400; Error Code: ThrottlingException; Request ID: &lt;ID&gt;”</em></p><p>Which actions are best practices to resolve this error? (Select TWO.)</p>",
    "corrects": [
      1,
      5
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Create a local cache using the AWS Encryption SDK and the LocalCryptoMaterialsCache feature.</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Use Amazon SQS to queue the requests and configure AWS KMS to poll the queue.</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Create an AWS KMS custom key store and generate data keys through AWS CloudHSM.</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Call the AWS KMS Encrypt operation directly to allow AWS KMS to encrypt the data.</p>",
        "correct": false
      },
      {
        "id": 5,
        "answer": "<p>Create a case in the AWS Support Center to increase the quota for the account.</p>",
        "correct": true
      }
    ],
    "multiple": true,
    "domain": "AWS Security, Identity, & Compliance",
    "explanation": "<p>To ensure that AWS KMS can provide fast and reliable responses to API requests from all customers, it throttles API requests that exceed certain boundaries. <em>Throttling</em> occurs when AWS KMS rejects an otherwise valid request and returns a ThrottlingException error.</p><p><em>Data key caching</em> stores data keys and related cryptographic material in a cache. When you encrypt or decrypt data, the AWS Encryption SDK looks for a matching data key in the cache. If it finds a match, it uses the cached data key rather than generating a new one. Data key caching can improve performance, reduce cost, and help you stay within service limits as your application scales.</p><p>Your application can benefit from data key caching if:</p><p> • It can reuse data keys.</p><p> • It generates numerous data keys.</p><p> • Your cryptographic operations are unacceptably slow, expensive, limited, or resource-intensive.</p><p>To create an instance of the local cache, use the LocalCryptoMaterialsCache constructor in Java and Python, the getLocalCryptographicMaterialsCache function in JavaScript, or the aws_cryptosdk_materials_cache_local_new constructor in C.</p><p>Additionally, the developer can request an increase in the quota for AWS KMS which will provide the ability to submit more API calls the AWS KMS.</p><p><strong>CORRECT: </strong>\"Create a local cache using the AWS Encryption SDK and the LocalCryptoMaterialsCache feature\" is a correct answer (as explained above.)</p><p><strong>CORRECT: </strong>\"Create a case in the AWS Support Center to increase the quota for the account\" is also a correct answer (as explained above.)</p><p><strong>INCORRECT:</strong> \"Call the AWS KMS Encrypt operation directly to allow AWS KMS to encrypt the data\" is incorrect.</p><p>This will not reduce API calls to AWS KMS. Additionally, there are limits to the maximum size of the data that can be encrypted using this method. The max is 4096 bytes.</p><p><strong>INCORRECT:</strong> \"Use Amazon SQS to queue the requests and configure AWS KMS to poll the queue\" is incorrect.</p><p>KMS cannot be configured to poll and SQS queue.</p><p><strong>INCORRECT:</strong> \"Create an AWS KMS custom key store and generate data keys through AWS CloudHSM\" is incorrect.</p><p>This is an unnecessary step and would incur additional cost. CloudHSM is not beneficial for this specific situation.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/data-key-caching.html\">https://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/data-key-caching.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-kms/\">https://digitalcloud.training/aws-kms/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/data-key-caching.html",
      "https://digitalcloud.training/aws-kms/"
    ]
  },
  {
    "id": 60,
    "question": "<p>A Developer is designing a cloud native application. The application will use several AWS Lambda functions that will process items that the functions read from an event source. Which AWS services are supported for Lambda event source mappings? (Select THREE.)</p>",
    "corrects": [
      1,
      3,
      6
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Amazon DynamoDB</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Another Lambda function</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Amazon Simple Queue Service (SQS)</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Amazon Simple Notification Service (SNS)</p>",
        "correct": false
      },
      {
        "id": 5,
        "answer": "<p>Amazon Simple Storage Service (S3)</p>",
        "correct": false
      },
      {
        "id": 6,
        "answer": "<p>Amazon Kinesis</p>",
        "correct": true
      }
    ],
    "multiple": true,
    "domain": "AWS Compute",
    "explanation": "<p>An event source mapping is an AWS Lambda resource that reads from an event source and invokes a Lambda function. You can use event source mappings to process items from a stream or queue in services that don't invoke Lambda functions directly. Lambda provides event source mappings for the following services.</p><p><strong>Services That Lambda Reads Events From</strong></p><p>• <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html\">Amazon Kinesis</a></p><p>• <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html\">Amazon DynamoDB</a></p><p>• <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html\">Amazon Simple Queue Service</a></p><p>An event source mapping uses permissions in the function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-intro-execution-role.html\">execution role</a> to read and manage items in the event source. Permissions, event structure, settings, and polling behavior vary by event source.</p><p><strong>CORRECT: </strong>\"Amazon Kinesis, Amazon DynamoDB, and Amazon Simple Queue Service (SQS)\" are the correct answers.</p><p><strong>INCORRECT:</strong> \"Amazon Simple Notification Service (SNS)\" is incorrect as SNS should be used as destination for asynchronous invocation.</p><p><strong>INCORRECT:</strong> \"Amazon Simple Storage Service (S3)\" is incorrect as Lambda does not read from Amazon S3, you must configure the event notification on the S3 side.</p><p><strong>INCORRECT:</strong> \"Another Lambda function\" is incorrect as another function should be invoked asynchronously.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventsourcemapping.html\">https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventsourcemapping.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-lambda/\">https://digitalcloud.training/aws-lambda/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html",
      "https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html",
      "https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html",
      "https://docs.aws.amazon.com/lambda/latest/dg/lambda-intro-execution-role.html",
      "https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventsourcemapping.html",
      "https://digitalcloud.training/aws-lambda/"
    ]
  },
  {
    "id": 61,
    "question": "<p>A company is running a web application on Amazon EC2 behind an Elastic Load Balancer (ELB). The company is concerned about the security of the web application and would like to secure the application with SSL certificates. The solution should not have any performance impact on the EC2 instances.</p><p>What steps should be taken to secure the web application? (Select TWO.)</p>",
    "corrects": [
      2,
      3
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Install SSL certificates on the EC2 instances</p>",
        "correct": false
      },
      {
        "id": 2,
        "answer": "<p>Configure the Elastic Load Balancer for SSL termination</p>",
        "correct": true
      },
      {
        "id": 3,
        "answer": "<p>Add an SSL certificate to the Elastic Load Balancer</p>",
        "correct": true
      },
      {
        "id": 4,
        "answer": "<p>Configure the Elastic Load Balancer with SSL passthrough</p>",
        "correct": false
      },
      {
        "id": 5,
        "answer": "<p>Configure Server-Side Encryption with KMS managed keys</p>",
        "correct": false
      }
    ],
    "multiple": true,
    "domain": "AWS Compute",
    "explanation": "<p>The requirements clearly state that we cannot impact the performance of the EC2 instances at all. Therefore, we will not be able to add certificates to the EC2 instances as that would place a burden on the CPU when encrypting and decrypting data.</p><p>We are therefore left with configuring SSL on the Elastic Load Balancer itself. For this we need to add an SSL certificate to the ELB and then configure the ELB for SSL termination.</p><p>You can create an HTTPS listener, which uses encrypted connections (also known as <em>SSL offload</em>). This feature enables traffic encryption between your load balancer and the clients that initiate SSL or TLS sessions.</p><p>To use an HTTPS listener, you must deploy at least one SSL/TLS server certificate on your load balancer. The load balancer uses a server certificate to terminate the front-end connection and then decrypt requests from clients before sending them to the targets.</p><p>This is the most secure solution we can created without adding any performance impact to the EC2 instances.</p><p><strong>CORRECT: </strong>\"Add an SSL certificate to the Elastic Load Balancer\" is a correct answer.</p><p><strong>CORRECT: </strong>\"Configure the Elastic Load Balancer for SSL termination\" is also a correct answer.</p><p><strong>INCORRECT:</strong> \"Configure the Elastic Load Balancer with SSL passthrough\" is incorrect as this would be used to forward encrypted packets directly to the EC2 instance for termination but we do not want to add SSL certificates to the EC2 instances due to the extra processing required.</p><p><strong>INCORRECT:</strong> \"Install SSL certificates on the EC2 instances\" is incorrect as we do not want to add SSL certificates to the EC2 instances due to the extra processing required.</p><p><strong>INCORRECT:</strong> \"Configure Server-Side Encryption with KMS managed keys\" is incorrect as this applies to Amazon S3, not ELB.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html\">https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-elastic-load-balancing-aws-elb/\">https://digitalcloud.training/aws-elastic-load-balancing-aws-elb/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html",
      "https://digitalcloud.training/aws-elastic-load-balancing-aws-elb/"
    ]
  },
  {
    "id": 62,
    "question": "<p>A customer requires a schema-less, key/value database that can be used for storing customer orders. Which type of AWS database is BEST suited to this requirement?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Amazon DynamoDB</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Amazon S3</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Amazon ElastiCache</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Amazon RDS</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Database",
    "explanation": "<p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. It is a non-relational (schema-less), key-value type of database. This is the most suitable solution for this requirement.</p><p><strong>CORRECT: </strong>\"Amazon DynamoDB\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Amazon RDS\" is incorrect as this a relational database that has a schema.</p><p><strong>INCORRECT:</strong> \"Amazon ElastiCache\" is incorrect as this is a key/value database but it is used to cache the contents of other databases (including DynamoDB and RDS) for better performance for reads.</p><p><strong>INCORRECT:</strong> \"Amazon S3\" is incorrect as this is an object-based storage system not a database. It is a key/value store but DynamoDB is a better fit for a customer order database.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Introduction.html\">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Introduction.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-dynamodb/\">https://digitalcloud.training/amazon-dynamodb/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Introduction.html",
      "https://digitalcloud.training/amazon-dynamodb/"
    ]
  },
  {
    "id": 63,
    "question": "<p>An application developer is crafting a new software product. To streamline the registration process, they want new users to be able to set up their accounts using their existing social media profiles.</p><p>Which AWS service or feature would be the most appropriate for achieving this goal?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Amazon Cognito User Pools</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>AWS Managed Microsoft AD</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>AWS Security Token Service</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>AWS Identity and Access Management (IAM)</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Security, Identity, & Compliance",
    "explanation": "<p>Amazon Cognito User Pools provide a secure and scalable directory to manage users. User Pools also support the ability for users to sign in through third-party identity providers, like social media platforms, which makes it the right choice for this requirement.</p><p><strong>CORRECT: </strong>\"Amazon Cognito User Pools\" is the correct answer (as explained above.)</p><p><strong>INCORRECT:</strong> \"AWS Security Token Service\" is incorrect.</p><p>AWS Security Token Service (STS) is primarily used to grant temporary, limited-privilege credentials for IAM users or for users that you authenticate (federated users), which is not related to the registration of application users via social media.</p><p><strong>INCORRECT:</strong> \"AWS Identity and Access Management (IAM)\" is incorrect.</p><p>AWS IAM manages access to AWS services and resources securely. While IAM can federate with external identity providers, it is not designed to manage application user registration and social sign-in functionality directly.</p><p><strong>INCORRECT:</strong> \"AWS Managed Microsoft AD\" is incorrect.</p><p>AWS Managed Microsoft AD is a service that is used to enable directory-aware workloads and AWS resources to use managed Active Directory in AWS. It's used for traditional enterprise applications and does not directly support social media-based user registration.</p><p><strong>References:</strong></p><p><a href=\"https://repost.aws/knowledge-center/cognito-user-pools-identity-pools\">https://repost.aws/knowledge-center/cognito-user-pools-identity-pools</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/amazon-cognito/\">https://digitalcloud.training/amazon-cognito/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://repost.aws/knowledge-center/cognito-user-pools-identity-pools",
      "https://digitalcloud.training/amazon-cognito/"
    ]
  },
  {
    "id": 64,
    "question": "<p>A company wants to implement authentication for its new REST service using Amazon API Gateway. To authenticate the calls, each request must include HTTP headers with a client ID and user ID. These credentials must be compared to authentication data in an Amazon DynamoDB table.</p><p>What MUST the company do to implement this authentication in API Gateway?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Implement an AWS Lambda authorizer that references the DynamoDB authentication table</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Implement an Amazon Cognito authorizer that references the DynamoDB authentication table</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>Modify the integration requests to require the credentials, then grant API Gateway access to the authentication table</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>Create a model that requires the credentials, then grant API Gateway access to the authentication table</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Networking & Content Delivery",
    "explanation": "<p>A <em>Lambda authorizer</em> (formerly known as a <em>custom authorizer</em>) is an API Gateway feature that uses a Lambda function to control access to your API.</p><p>A Lambda authorizer is useful if you want to implement a custom authorization scheme that uses a bearer token authentication strategy such as OAuth or SAML, or that uses request parameters to determine the caller's identity. </p><p><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-23_00-46-31-e49f86de0e62d216c4bb5bdaffaae5ed.png\" style=\"display: none;\"><span class=\"ud-component--base-components--open-full-size-image\"></span></p><div class=\"open-full-size-image--wrapper--R4gIm\" data-purpose=\"open-full-size-image\"><img src=\"https://img-c.udemycdn.com/redactor/raw/2020-04-23_00-46-31-e49f86de0e62d216c4bb5bdaffaae5ed.png\" alt=\"\" loading=\"eager\"><button type=\"button\" class=\"ud-btn ud-btn-medium ud-btn-link ud-heading-sm open-full-size-image--backdrop--Zor3j\"><svg aria-label=\"Larger image\" role=\"img\" focusable=\"false\" class=\"ud-icon ud-icon-large ud-icon-color-neutral\"><use xlink:href=\"#icon-search\"></use></svg></button></div><p></p><p>When a client makes a request to one of your API's methods, API Gateway calls your Lambda authorizer, which takes the caller's identity as input and returns an IAM policy as output.</p><p>There are two types of Lambda authorizers:</p><p>• A <em>token-based</em> Lambda authorizer (also called a TOKEN authorizer) receives the caller's identity in a bearer token, such as a JSON Web Token (JWT) or an OAuth token.</p><p>• A <em>request parameter-based</em> Lambda authorizer (also called a REQUEST authorizer) receives the caller's identity in a combination of headers, query string parameters, <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html#stagevariables-template-reference\">stageVariables</a>, and <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html#context-variable-reference\">$context</a> variables.</p><p>• For WebSocket APIs, only request parameter-based authorizers are supported.</p><p>In this scenario, the authentication is using headers in the request and therefore the request parameter-based Lambda authorizer should be used.</p><p><strong>CORRECT: </strong>\"Implement an AWS Lambda authorizer that references the DynamoDB authentication table\" is the correct answer.</p><p><strong>INCORRECT:</strong> \"Create a model that requires the credentials, then grant API Gateway access to the authentication table\" is incorrect as a model defines the structure of the incoming payload using the JSON Schema.</p><p><strong>INCORRECT:</strong> \"Modify the integration requests to require the credentials, then grant API Gateway access to the authentication table\" is incorrect as API Gateway will not authorize directly using the table information, an authorizer should be used.</p><p><strong>INCORRECT:</strong> \"Implement an Amazon Cognito authorizer that references the DynamoDB authentication table\" is incorrect as a Lambda authorizer should be used in this example as the authentication data is being passed in request headers.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-use-lambda-authorizer.html\">https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-use-lambda-authorizer.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-lambda/\">https://digitalcloud.training/aws-lambda/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html#stagevariables-template-reference",
      "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html#context-variable-reference",
      "https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-use-lambda-authorizer.html",
      "https://digitalcloud.training/aws-lambda/"
    ]
  },
  {
    "id": 65,
    "question": "<p>A developer is creating an AWS Serverless Application Model (AWS SAM) template. It includes several AWS Lambda functions, an Amazon S3 bucket, and an Amazon CloudFront distribution. One Lambda function, running on Lambda@Edge, is integrated with the CloudFront distribution, while the S3 bucket serves as an origin for the distribution.</p><p>However, upon deploying the AWS SAM blueprint in the us-west-1 Region, the stack's creation fails.</p><p>What could be the possible reason for this failure?</p>",
    "corrects": [
      1
    ],
    "answers": [
      {
        "id": 1,
        "answer": "<p>Lambda@Edge functions can only be deployed in the us-east-1 Region.</p>",
        "correct": true
      },
      {
        "id": 2,
        "answer": "<p>Amazon S3 buckets serving as origins for CloudFront must be created in a separate Region from the CloudFront distribution.</p>",
        "correct": false
      },
      {
        "id": 3,
        "answer": "<p>AWS SAM templates are not supported in the us-west-1 Region.</p>",
        "correct": false
      },
      {
        "id": 4,
        "answer": "<p>AWS Lambda functions integrated with CloudFront cannot be deployed using AWS SAM templates.</p>",
        "correct": false
      }
    ],
    "multiple": false,
    "domain": "AWS Compute",
    "explanation": "<p>Lambda@Edge functions can only be created in the us-east-1 Region. If you want to deploy such functions, they must be done in this specific region.</p><p><strong>CORRECT: </strong>\"Lambda@Edge functions can only be deployed in the us-east-1 Region\" is the correct answer (as explained above.)</p><p><strong>INCORRECT:</strong> \"AWS SAM templates are not supported in the us-west-1 Region\" is incorrect.</p><p>This is not a restriction, and hence not a reason for failure.</p><p><strong>INCORRECT:</strong> \"Amazon S3 buckets serving as origins for CloudFront must be created in a separate Region from the CloudFront distribution\" is incorrect.</p><p>Amazon S3 buckets serving as origins for CloudFront distributions can be in the same region as the distribution. Therefore, this would not cause a failure.</p><p><strong>INCORRECT:</strong> \"AWS Lambda functions integrated with CloudFront cannot be deployed using AWS SAM templates\" is incorrect.</p><p>AWS Lambda functions can be integrated with Amazon CloudFront and deployed using AWS SAM templates. This statement is incorrect and would not lead to a stack creation failure.</p><p><strong>References:</strong></p><p><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-edge-how-it-works.html\">https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-edge-how-it-works.html</a></p><p><strong>Save time with our AWS cheat sheets:</strong></p><p><a href=\"https://digitalcloud.training/aws-sam/\">https://digitalcloud.training/aws-sam/</a></p>",
    "correctAnswerExplanations": [],
    "incorrectAnswerExplanations": [],
    "references": [
      "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-edge-how-it-works.html",
      "https://digitalcloud.training/aws-sam/"
    ]
  }
]